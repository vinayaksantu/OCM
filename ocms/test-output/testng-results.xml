<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="2" failed="15" ignored="0" total="32" passed="15">
  <reporter-output>
  </reporter-output>
  <suite name="Tetherfi Test Automation" duration-ms="764700" started-at="2020-04-23T11:07:31 IST" finished-at="2020-04-23T11:20:15 IST">
    <groups>
    </groups>
    <test name="WorkCodeListTest" duration-ms="764700" started-at="2020-04-23T11:07:31 IST" finished-at="2020-04-23T11:20:15 IST">
      <class name="com.tetherfi.test.sms.SmsResponseTemplateTest">
        <test-method status="PASS" signature="openApplication()[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="openApplication" is-config="true" duration-ms="96375" started-at="2020-04-23T11:07:31 IST" finished-at="2020-04-23T11:09:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="startTestCase" is-config="true" duration-ms="3" started-at="2020-04-23T11:09:07 IST" finished-at="2020-04-23T11:09:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.SmsResponseTemplatePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToSmsResponseTemplatePage()[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="NavigateToSmsResponseTemplatePage" is-config="true" duration-ms="13817" started-at="2020-04-23T11:09:07 IST" finished-at="2020-04-23T11:09:21 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToSmsResponseTemplatePage -->
        <test-method status="PASS" signature="SmsResponseTemplatePage()[pri:1, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="SmsResponseTemplatePage" duration-ms="688" started-at="2020-04-23T11:09:21 IST" finished-at="2020-04-23T11:09:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SmsResponseTemplatePage -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="afterEachMethod" is-config="true" duration-ms="2556" started-at="2020-04-23T11:09:22 IST" finished-at="2020-04-23T11:09:24 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.SmsResponseTemplatePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="endTestCase" is-config="true" duration-ms="0" started-at="2020-04-23T11:09:24 IST" finished-at="2020-04-23T11:09:24 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.SmsResponseTemplatePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="startTestCase" is-config="true" duration-ms="1" started-at="2020-04-23T11:09:24 IST" finished-at="2020-04-23T11:09:24 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyDropDownForAllColumns()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToSmsResponseTemplatePage()[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="NavigateToSmsResponseTemplatePage" is-config="true" duration-ms="4752" started-at="2020-04-23T11:09:24 IST" finished-at="2020-04-23T11:09:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToSmsResponseTemplatePage -->
        <test-method status="PASS" signature="VerifyDropDownForAllColumns()[pri:2, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="VerifyDropDownForAllColumns" duration-ms="15178" started-at="2020-04-23T11:09:29 IST" finished-at="2020-04-23T11:09:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyDropDownForAllColumns -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="afterEachMethod" is-config="true" duration-ms="4691" started-at="2020-04-23T11:09:44 IST" finished-at="2020-04-23T11:09:49 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyDropDownForAllColumns()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="endTestCase" is-config="true" duration-ms="0" started-at="2020-04-23T11:09:49 IST" finished-at="2020-04-23T11:09:49 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyDropDownForAllColumns()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="startTestCase" is-config="true" duration-ms="0" started-at="2020-04-23T11:09:49 IST" finished-at="2020-04-23T11:09:49 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyColumnsHeaderEnable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToSmsResponseTemplatePage()[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="NavigateToSmsResponseTemplatePage" is-config="true" duration-ms="7432" started-at="2020-04-23T11:09:49 IST" finished-at="2020-04-23T11:09:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToSmsResponseTemplatePage -->
        <test-method status="PASS" signature="VerifyColumnsHeaderEnable()[pri:3, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="VerifyColumnsHeaderEnable" duration-ms="7003" started-at="2020-04-23T11:09:56 IST" finished-at="2020-04-23T11:10:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyColumnsHeaderEnable -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="afterEachMethod" is-config="true" duration-ms="4086" started-at="2020-04-23T11:10:03 IST" finished-at="2020-04-23T11:10:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyColumnsHeaderEnable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="endTestCase" is-config="true" duration-ms="0" started-at="2020-04-23T11:10:07 IST" finished-at="2020-04-23T11:10:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyColumnsHeaderEnable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="startTestCase" is-config="true" duration-ms="1" started-at="2020-04-23T11:10:07 IST" finished-at="2020-04-23T11:10:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyColumnsHeaderDisable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToSmsResponseTemplatePage()[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="NavigateToSmsResponseTemplatePage" is-config="true" duration-ms="8178" started-at="2020-04-23T11:10:07 IST" finished-at="2020-04-23T11:10:16 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToSmsResponseTemplatePage -->
        <test-method status="PASS" signature="VerifyColumnsHeaderDisable()[pri:4, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="VerifyColumnsHeaderDisable" duration-ms="8494" started-at="2020-04-23T11:10:16 IST" finished-at="2020-04-23T11:10:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyColumnsHeaderDisable -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="afterEachMethod" is-config="true" duration-ms="3252" started-at="2020-04-23T11:10:24 IST" finished-at="2020-04-23T11:10:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyColumnsHeaderDisable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="endTestCase" is-config="true" duration-ms="0" started-at="2020-04-23T11:10:27 IST" finished-at="2020-04-23T11:10:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyColumnsHeaderDisable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="startTestCase" is-config="true" duration-ms="1" started-at="2020-04-23T11:10:27 IST" finished-at="2020-04-23T11:10:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.AddNewSMSRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToSmsResponseTemplatePage()[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="NavigateToSmsResponseTemplatePage" is-config="true" duration-ms="6492" started-at="2020-04-23T11:10:27 IST" finished-at="2020-04-23T11:10:34 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToSmsResponseTemplatePage -->
        <test-method status="FAIL" signature="AddNewSMSRecord()[pri:5, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="AddNewSMSRecord" duration-ms="6608" started-at="2020-04-23T11:10:34 IST" finished-at="2020-04-23T11:10:40 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Record Created Successfully] but found [Record Creation Failed, Already Exist]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Record Created Successfully] but found [Record Creation Failed, Already Exist]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at com.tetherfi.test.sms.SmsResponseTemplateTest.AddNewSMSRecord(SmsResponseTemplateTest.java:77)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewSMSRecord -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="afterEachMethod" is-config="true" duration-ms="3941" started-at="2020-04-23T11:10:40 IST" finished-at="2020-04-23T11:10:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.AddNewSMSRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="endTestCase" is-config="true" duration-ms="1" started-at="2020-04-23T11:10:44 IST" finished-at="2020-04-23T11:10:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.AddNewSMSRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="startTestCase" is-config="true" duration-ms="0" started-at="2020-04-23T11:10:44 IST" finished-at="2020-04-23T11:10:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.AddDuplicateSMSRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToSmsResponseTemplatePage()[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="NavigateToSmsResponseTemplatePage" is-config="true" duration-ms="6809" started-at="2020-04-23T11:10:44 IST" finished-at="2020-04-23T11:10:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToSmsResponseTemplatePage -->
        <test-method status="FAIL" signature="AddDuplicateSMSRecord()[pri:6, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="AddDuplicateSMSRecord" duration-ms="4906" started-at="2020-04-23T11:10:51 IST" finished-at="2020-04-23T11:10:56 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Duplicate Record Create Assertion Failed expected [Duplicate ICOM Template ID] but found [Record Creation Failed, Already Exist]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Duplicate Record Create Assertion Failed expected [Duplicate ICOM Template ID] but found [Record Creation Failed, Already Exist]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at com.tetherfi.test.sms.SmsResponseTemplateTest.AddDuplicateSMSRecord(SmsResponseTemplateTest.java:87)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddDuplicateSMSRecord -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="afterEachMethod" is-config="true" duration-ms="4233" started-at="2020-04-23T11:10:56 IST" finished-at="2020-04-23T11:11:00 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.AddDuplicateSMSRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="endTestCase" is-config="true" duration-ms="0" started-at="2020-04-23T11:11:00 IST" finished-at="2020-04-23T11:11:00 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.AddDuplicateSMSRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="startTestCase" is-config="true" duration-ms="0" started-at="2020-04-23T11:11:00 IST" finished-at="2020-04-23T11:11:00 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyAuditTrialReportForCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToSmsResponseTemplatePage()[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="NavigateToSmsResponseTemplatePage" is-config="true" duration-ms="7739" started-at="2020-04-23T11:11:00 IST" finished-at="2020-04-23T11:11:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToSmsResponseTemplatePage -->
        <test-method status="FAIL" signature="VerifyAuditTrialReportForCreate()[pri:7, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="VerifyAuditTrialReportForCreate" duration-ms="20763" started-at="2020-04-23T11:11:08 IST" finished-at="2020-04-23T11:11:29 IST">
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: element is not attached to the page document
  (Session info: chrome=81.0.4044.113)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-NJVBPFB', ip: '192.168.225.65', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 81.0.4044.113, chrome: {chromedriverVersion: 80.0.3987.106 (f68069574609..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:62293}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: e37bb88855fa09b832cebf635777fd62]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: element is not attached to the page document
  (Session info: chrome=81.0.4044.113)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-NJVBPFB', ip: '192.168.225.65', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 81.0.4044.113, chrome: {chromedriverVersion: 80.0.3987.106 (f68069574609..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:62293}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: e37bb88855fa09b832cebf635777fd62
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.isDisplayed(RemoteWebElement.java:326)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:314)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:43)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:300)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:297)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
at com.tetherfi.pages.BasePage.waitUntilWebElementListIsVisible(BasePage.java:135)
at com.tetherfi.pages.BasePage.selectDropdownFromVisibleText(BasePage.java:333)
at com.tetherfi.pages.OCMReportsPage.booleansearchnew(OCMReportsPage.java:1212)
at com.tetherfi.pages.OCMReportsPage.verifySmsResponseTemplateCreate(OCMReportsPage.java:5445)
at com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyAuditTrialReportForCreate(SmsResponseTemplateTest.java:102)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrialReportForCreate -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="afterEachMethod" is-config="true" duration-ms="4102" started-at="2020-04-23T11:11:29 IST" finished-at="2020-04-23T11:11:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyAuditTrialReportForCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="endTestCase" is-config="true" duration-ms="1" started-at="2020-04-23T11:11:33 IST" finished-at="2020-04-23T11:11:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyAuditTrialReportForCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="startTestCase" is-config="true" duration-ms="1" started-at="2020-04-23T11:11:33 IST" finished-at="2020-04-23T11:11:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyAddEmptyRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToSmsResponseTemplatePage()[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="NavigateToSmsResponseTemplatePage" is-config="true" duration-ms="6366" started-at="2020-04-23T11:11:33 IST" finished-at="2020-04-23T11:11:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToSmsResponseTemplatePage -->
        <test-method status="PASS" signature="VerifyAddEmptyRecord()[pri:8, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="VerifyAddEmptyRecord" duration-ms="4316" started-at="2020-04-23T11:11:39 IST" finished-at="2020-04-23T11:11:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAddEmptyRecord -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="afterEachMethod" is-config="true" duration-ms="3457" started-at="2020-04-23T11:11:44 IST" finished-at="2020-04-23T11:11:47 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyAddEmptyRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="endTestCase" is-config="true" duration-ms="1" started-at="2020-04-23T11:11:47 IST" finished-at="2020-04-23T11:11:47 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyAddEmptyRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="startTestCase" is-config="true" duration-ms="1" started-at="2020-04-23T11:11:47 IST" finished-at="2020-04-23T11:11:47 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.AddNewRecordWithoutText() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToSmsResponseTemplatePage()[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="NavigateToSmsResponseTemplatePage" is-config="true" duration-ms="6228" started-at="2020-04-23T11:11:47 IST" finished-at="2020-04-23T11:11:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToSmsResponseTemplatePage -->
        <test-method status="PASS" signature="AddNewRecordWithoutText()[pri:9, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="AddNewRecordWithoutText" duration-ms="3285" started-at="2020-04-23T11:11:53 IST" finished-at="2020-04-23T11:11:57 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewRecordWithoutText -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="afterEachMethod" is-config="true" duration-ms="2668" started-at="2020-04-23T11:11:57 IST" finished-at="2020-04-23T11:11:59 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.AddNewRecordWithoutText() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="endTestCase" is-config="true" duration-ms="1" started-at="2020-04-23T11:11:59 IST" finished-at="2020-04-23T11:11:59 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.AddNewRecordWithoutText() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="startTestCase" is-config="true" duration-ms="1" started-at="2020-04-23T11:11:59 IST" finished-at="2020-04-23T11:11:59 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.AddNewRecordWithoutIntent() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToSmsResponseTemplatePage()[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="NavigateToSmsResponseTemplatePage" is-config="true" duration-ms="7401" started-at="2020-04-23T11:11:59 IST" finished-at="2020-04-23T11:12:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToSmsResponseTemplatePage -->
        <test-method status="PASS" signature="AddNewRecordWithoutIntent()[pri:10, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="AddNewRecordWithoutIntent" duration-ms="3654" started-at="2020-04-23T11:12:07 IST" finished-at="2020-04-23T11:12:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewRecordWithoutIntent -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="afterEachMethod" is-config="true" duration-ms="4028" started-at="2020-04-23T11:12:10 IST" finished-at="2020-04-23T11:12:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.AddNewRecordWithoutIntent() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="endTestCase" is-config="true" duration-ms="0" started-at="2020-04-23T11:12:14 IST" finished-at="2020-04-23T11:12:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.AddNewRecordWithoutIntent() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="startTestCase" is-config="true" duration-ms="1" started-at="2020-04-23T11:12:14 IST" finished-at="2020-04-23T11:12:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.AddNewRecordWithoutEnable() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToSmsResponseTemplatePage()[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="NavigateToSmsResponseTemplatePage" is-config="true" duration-ms="10753" started-at="2020-04-23T11:12:14 IST" finished-at="2020-04-23T11:12:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToSmsResponseTemplatePage -->
        <test-method status="PASS" signature="AddNewRecordWithoutEnable()[pri:11, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="AddNewRecordWithoutEnable" duration-ms="2542" started-at="2020-04-23T11:12:25 IST" finished-at="2020-04-23T11:12:28 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewRecordWithoutEnable -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="afterEachMethod" is-config="true" duration-ms="4058" started-at="2020-04-23T11:12:28 IST" finished-at="2020-04-23T11:12:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.AddNewRecordWithoutEnable() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="endTestCase" is-config="true" duration-ms="1" started-at="2020-04-23T11:12:32 IST" finished-at="2020-04-23T11:12:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.AddNewRecordWithoutEnable() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="startTestCase" is-config="true" duration-ms="0" started-at="2020-04-23T11:12:32 IST" finished-at="2020-04-23T11:12:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.AddNewRecordWithoutICOMTemplateID() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToSmsResponseTemplatePage()[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="NavigateToSmsResponseTemplatePage" is-config="true" duration-ms="7605" started-at="2020-04-23T11:12:32 IST" finished-at="2020-04-23T11:12:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToSmsResponseTemplatePage -->
        <test-method status="PASS" signature="AddNewRecordWithoutICOMTemplateID()[pri:12, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="AddNewRecordWithoutICOMTemplateID" duration-ms="3430" started-at="2020-04-23T11:12:39 IST" finished-at="2020-04-23T11:12:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewRecordWithoutICOMTemplateID -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="afterEachMethod" is-config="true" duration-ms="2819" started-at="2020-04-23T11:12:43 IST" finished-at="2020-04-23T11:12:46 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.AddNewRecordWithoutICOMTemplateID() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="endTestCase" is-config="true" duration-ms="0" started-at="2020-04-23T11:12:46 IST" finished-at="2020-04-23T11:12:46 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.AddNewRecordWithoutICOMTemplateID() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="startTestCase" is-config="true" duration-ms="1" started-at="2020-04-23T11:12:46 IST" finished-at="2020-04-23T11:12:46 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyCancelBtnAtAddnewRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToSmsResponseTemplatePage()[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="NavigateToSmsResponseTemplatePage" is-config="true" duration-ms="8341" started-at="2020-04-23T11:12:46 IST" finished-at="2020-04-23T11:12:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToSmsResponseTemplatePage -->
        <test-method status="FAIL" signature="VerifyCancelBtnAtAddnewRecord()[pri:13, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="VerifyCancelBtnAtAddnewRecord" duration-ms="3883" started-at="2020-04-23T11:12:54 IST" finished-at="2020-04-23T11:12:58 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Cancel Btn at Add record assertion failed did not expect to find [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Cancel Btn at Add record assertion failed did not expect to find [false] but found [true]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertFalse(Assert.java:65)
at com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyCancelBtnAtAddnewRecord(SmsResponseTemplateTest.java:160)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyCancelBtnAtAddnewRecord -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="afterEachMethod" is-config="true" duration-ms="1841" started-at="2020-04-23T11:12:58 IST" finished-at="2020-04-23T11:13:00 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyCancelBtnAtAddnewRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="endTestCase" is-config="true" duration-ms="1" started-at="2020-04-23T11:13:00 IST" finished-at="2020-04-23T11:13:00 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyCancelBtnAtAddnewRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="SKIP" signature="EditSmsResponseTemplateRecord()[pri:14, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="EditSmsResponseTemplateRecord" duration-ms="0" started-at="2020-04-23T11:13:00 IST" depends-on-methods="com.tetherfi.test.sms.SmsResponseTemplateTest.AddNewSMSRecord" finished-at="2020-04-23T11:13:00 IST">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method SmsResponseTemplateTest.EditSmsResponseTemplateRecord()[pri:14, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method SmsResponseTemplateTest.EditSmsResponseTemplateRecord()[pri:14, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:99)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EditSmsResponseTemplateRecord -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="startTestCase" is-config="true" duration-ms="0" started-at="2020-04-23T11:13:00 IST" finished-at="2020-04-23T11:13:00 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyAuditTrialReportForUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToSmsResponseTemplatePage()[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="NavigateToSmsResponseTemplatePage" is-config="true" duration-ms="4731" started-at="2020-04-23T11:13:00 IST" finished-at="2020-04-23T11:13:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToSmsResponseTemplatePage -->
        <test-method status="FAIL" signature="VerifyAuditTrialReportForUpdate()[pri:15, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="VerifyAuditTrialReportForUpdate" duration-ms="24606" started-at="2020-04-23T11:13:04 IST" finished-at="2020-04-23T11:13:29 IST">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 1, Size: 1
at java.util.ArrayList.rangeCheck(Unknown Source)
at java.util.ArrayList.get(Unknown Source)
at com.tetherfi.pages.OCMReportsPage.getFirstRowDatafromTable1(OCMReportsPage.java:1339)
at com.tetherfi.pages.OCMReportsPage.verifySmsResponseTemplateUpdate(OCMReportsPage.java:5495)
at com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyAuditTrialReportForUpdate(SmsResponseTemplateTest.java:185)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrialReportForUpdate -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="afterEachMethod" is-config="true" duration-ms="1692" started-at="2020-04-23T11:13:29 IST" finished-at="2020-04-23T11:13:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyAuditTrialReportForUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="endTestCase" is-config="true" duration-ms="1" started-at="2020-04-23T11:13:31 IST" finished-at="2020-04-23T11:13:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyAuditTrialReportForUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="SKIP" signature="EditSmsTemplateRecordWithoutModifyReason()[pri:16, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="EditSmsTemplateRecordWithoutModifyReason" duration-ms="1" started-at="2020-04-23T11:13:31 IST" depends-on-methods="com.tetherfi.test.sms.SmsResponseTemplateTest.EditSmsResponseTemplateRecord" finished-at="2020-04-23T11:13:31 IST">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method SmsResponseTemplateTest.EditSmsTemplateRecordWithoutModifyReason()[pri:16, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method SmsResponseTemplateTest.EditSmsTemplateRecordWithoutModifyReason()[pri:16, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:99)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EditSmsTemplateRecordWithoutModifyReason -->
        <test-method status="PASS" signature="NavigateToSmsResponseTemplatePage()[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="NavigateToSmsResponseTemplatePage" is-config="true" duration-ms="4835" started-at="2020-04-23T11:13:31 IST" finished-at="2020-04-23T11:13:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToSmsResponseTemplatePage -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="startTestCase" is-config="true" duration-ms="0" started-at="2020-04-23T11:13:31 IST" finished-at="2020-04-23T11:13:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyCancelBtnAtEditSmsResponseTemplateRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="FAIL" signature="VerifyCancelBtnAtEditSmsResponseTemplateRecord()[pri:17, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="VerifyCancelBtnAtEditSmsResponseTemplateRecord" duration-ms="84936" started-at="2020-04-23T11:13:36 IST" finished-at="2020-04-23T11:15:00 IST">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.cssSelector: .k-grid-edit' (tried for 30 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.cssSelector: .k-grid-edit' (tried for 30 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at com.tetherfi.pages.BasePage.waitUntilWebElementIsVisible(BasePage.java:128)
at com.tetherfi.pages.SmsResponseTemplatePageWMC.clickOnEditButton(SmsResponseTemplatePageWMC.java:1307)
at com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyCancelBtnAtEditSmsResponseTemplateRecord(SmsResponseTemplateTest.java:204)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":".k-grid-edit"}
  (Session info: chrome=81.0.4044.113)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-NJVBPFB', ip: '192.168.225.65', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 81.0.4044.113, chrome: {chromedriverVersion: 80.0.3987.106 (f68069574609..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:62293}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: e37bb88855fa09b832cebf635777fd62
*** Element info: {Using=css selector, value=.k-grid-edit}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByCssSelector(RemoteWebDriver.java:420)
at org.openqa.selenium.By$ByCssSelector.findElement(By.java:431)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy11.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:314)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:43)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:300)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:297)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
... 31 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyCancelBtnAtEditSmsResponseTemplateRecord -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="afterEachMethod" is-config="true" duration-ms="1873" started-at="2020-04-23T11:15:00 IST" finished-at="2020-04-23T11:15:02 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyCancelBtnAtEditSmsResponseTemplateRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="endTestCase" is-config="true" duration-ms="1" started-at="2020-04-23T11:15:02 IST" finished-at="2020-04-23T11:15:02 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyCancelBtnAtEditSmsResponseTemplateRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="startTestCase" is-config="true" duration-ms="1" started-at="2020-04-23T11:15:02 IST" finished-at="2020-04-23T11:15:02 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.searchPage() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToSmsResponseTemplatePage()[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="NavigateToSmsResponseTemplatePage" is-config="true" duration-ms="5093" started-at="2020-04-23T11:15:02 IST" finished-at="2020-04-23T11:15:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToSmsResponseTemplatePage -->
        <test-method status="PASS" signature="searchPage()[pri:18, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="searchPage" duration-ms="3836" started-at="2020-04-23T11:15:07 IST" finished-at="2020-04-23T11:15:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchPage -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="afterEachMethod" is-config="true" duration-ms="2433" started-at="2020-04-23T11:15:11 IST" finished-at="2020-04-23T11:15:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.searchPage() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="endTestCase" is-config="true" duration-ms="2" started-at="2020-04-23T11:15:14 IST" finished-at="2020-04-23T11:15:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.searchPage() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="startTestCase" is-config="true" duration-ms="0" started-at="2020-04-23T11:15:14 IST" finished-at="2020-04-23T11:15:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.searchwithoutSearchTextbox()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToSmsResponseTemplatePage()[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="NavigateToSmsResponseTemplatePage" is-config="true" duration-ms="5102" started-at="2020-04-23T11:15:14 IST" finished-at="2020-04-23T11:15:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToSmsResponseTemplatePage -->
        <test-method status="PASS" signature="searchwithoutSearchTextbox()[pri:19, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="searchwithoutSearchTextbox" duration-ms="3915" started-at="2020-04-23T11:15:19 IST" finished-at="2020-04-23T11:15:23 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchwithoutSearchTextbox -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="afterEachMethod" is-config="true" duration-ms="2713" started-at="2020-04-23T11:15:23 IST" finished-at="2020-04-23T11:15:25 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.searchwithoutSearchTextbox()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="endTestCase" is-config="true" duration-ms="1" started-at="2020-04-23T11:15:25 IST" finished-at="2020-04-23T11:15:25 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.searchwithoutSearchTextbox()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="startTestCase" is-config="true" duration-ms="0" started-at="2020-04-23T11:15:25 IST" finished-at="2020-04-23T11:15:25 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.DeleteRecordWithoutDeleteReason() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToSmsResponseTemplatePage()[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="NavigateToSmsResponseTemplatePage" is-config="true" duration-ms="5014" started-at="2020-04-23T11:15:25 IST" finished-at="2020-04-23T11:15:30 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToSmsResponseTemplatePage -->
        <test-method status="PASS" signature="DeleteRecordWithoutDeleteReason()[pri:22, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="DeleteRecordWithoutDeleteReason" duration-ms="7597" started-at="2020-04-23T11:15:30 IST" finished-at="2020-04-23T11:15:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteRecordWithoutDeleteReason -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="afterEachMethod" is-config="true" duration-ms="2221" started-at="2020-04-23T11:15:38 IST" finished-at="2020-04-23T11:15:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.DeleteRecordWithoutDeleteReason() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="endTestCase" is-config="true" duration-ms="0" started-at="2020-04-23T11:15:40 IST" finished-at="2020-04-23T11:15:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.DeleteRecordWithoutDeleteReason() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="startTestCase" is-config="true" duration-ms="0" started-at="2020-04-23T11:15:40 IST" finished-at="2020-04-23T11:15:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyCancelBtnAtDeleteConfigRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToSmsResponseTemplatePage()[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="NavigateToSmsResponseTemplatePage" is-config="true" duration-ms="6014" started-at="2020-04-23T11:15:40 IST" finished-at="2020-04-23T11:15:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToSmsResponseTemplatePage -->
        <test-method status="PASS" signature="VerifyCancelBtnAtDeleteConfigRecord()[pri:23, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="VerifyCancelBtnAtDeleteConfigRecord" duration-ms="47487" started-at="2020-04-23T11:15:46 IST" finished-at="2020-04-23T11:16:34 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyCancelBtnAtDeleteConfigRecord -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="afterEachMethod" is-config="true" duration-ms="2102" started-at="2020-04-23T11:16:34 IST" finished-at="2020-04-23T11:16:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyCancelBtnAtDeleteConfigRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="endTestCase" is-config="true" duration-ms="1" started-at="2020-04-23T11:16:36 IST" finished-at="2020-04-23T11:16:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyCancelBtnAtDeleteConfigRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="startTestCase" is-config="true" duration-ms="1" started-at="2020-04-23T11:16:36 IST" finished-at="2020-04-23T11:16:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.DeleteSmsResponseTemplateRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToSmsResponseTemplatePage()[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="NavigateToSmsResponseTemplatePage" is-config="true" duration-ms="5305" started-at="2020-04-23T11:16:36 IST" finished-at="2020-04-23T11:16:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToSmsResponseTemplatePage -->
        <test-method status="FAIL" signature="DeleteSmsResponseTemplateRecord()[pri:24, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="DeleteSmsResponseTemplateRecord" duration-ms="84972" started-at="2020-04-23T11:16:41 IST" finished-at="2020-04-23T11:18:06 IST">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.cssSelector: .k-grid-CustomDelete' (tried for 30 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.cssSelector: .k-grid-CustomDelete' (tried for 30 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at com.tetherfi.pages.BasePage.waitUntilWebElementIsVisible(BasePage.java:128)
at com.tetherfi.pages.BasePage.selectWebElement(BasePage.java:194)
at com.tetherfi.pages.SmsResponseTemplatePageWMC.DeleteSmsResponseTemplateRecord(SmsResponseTemplatePageWMC.java:1251)
at com.tetherfi.test.sms.SmsResponseTemplateTest.DeleteSmsResponseTemplateRecord(SmsResponseTemplateTest.java:268)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":".k-grid-CustomDelete"}
  (Session info: chrome=81.0.4044.113)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-NJVBPFB', ip: '192.168.225.65', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 81.0.4044.113, chrome: {chromedriverVersion: 80.0.3987.106 (f68069574609..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:62293}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: e37bb88855fa09b832cebf635777fd62
*** Element info: {Using=css selector, value=.k-grid-CustomDelete}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByCssSelector(RemoteWebDriver.java:420)
at org.openqa.selenium.By$ByCssSelector.findElement(By.java:431)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy11.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:314)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:43)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:300)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:297)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
... 32 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteSmsResponseTemplateRecord -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="afterEachMethod" is-config="true" duration-ms="2146" started-at="2020-04-23T11:18:06 IST" finished-at="2020-04-23T11:18:08 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.DeleteSmsResponseTemplateRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="endTestCase" is-config="true" duration-ms="1" started-at="2020-04-23T11:18:08 IST" finished-at="2020-04-23T11:18:08 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.DeleteSmsResponseTemplateRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="startTestCase" is-config="true" duration-ms="0" started-at="2020-04-23T11:18:08 IST" finished-at="2020-04-23T11:18:08 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyAuditTrialReportForDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToSmsResponseTemplatePage()[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="NavigateToSmsResponseTemplatePage" is-config="true" duration-ms="4821" started-at="2020-04-23T11:18:08 IST" finished-at="2020-04-23T11:18:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToSmsResponseTemplatePage -->
        <test-method status="FAIL" signature="VerifyAuditTrialReportForDelete()[pri:25, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="VerifyAuditTrialReportForDelete" duration-ms="22379" started-at="2020-04-23T11:18:13 IST" finished-at="2020-04-23T11:18:36 IST">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 1, Size: 1
at java.util.ArrayList.rangeCheck(Unknown Source)
at java.util.ArrayList.get(Unknown Source)
at com.tetherfi.pages.OCMReportsPage.getFirstRowDatafromTable1(OCMReportsPage.java:1339)
at com.tetherfi.pages.OCMReportsPage.verifySmsResponseTemplateDelete(OCMReportsPage.java:5573)
at com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyAuditTrialReportForDelete(SmsResponseTemplateTest.java:284)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrialReportForDelete -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="afterEachMethod" is-config="true" duration-ms="1683" started-at="2020-04-23T11:18:36 IST" finished-at="2020-04-23T11:18:37 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyAuditTrialReportForDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="endTestCase" is-config="true" duration-ms="0" started-at="2020-04-23T11:18:37 IST" finished-at="2020-04-23T11:18:37 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyAuditTrialReportForDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="startTestCase" is-config="true" duration-ms="0" started-at="2020-04-23T11:18:37 IST" finished-at="2020-04-23T11:18:37 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.SearchClearSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToSmsResponseTemplatePage()[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="NavigateToSmsResponseTemplatePage" is-config="true" duration-ms="4914" started-at="2020-04-23T11:18:37 IST" finished-at="2020-04-23T11:18:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToSmsResponseTemplatePage -->
        <test-method status="FAIL" signature="SearchClearSearch()[pri:26, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="SearchClearSearch" duration-ms="2378" started-at="2020-04-23T11:18:42 IST" finished-at="2020-04-23T11:18:45 IST">
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: element is not attached to the page document
  (Session info: chrome=81.0.4044.113)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-NJVBPFB', ip: '192.168.225.65', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 81.0.4044.113, chrome: {chromedriverVersion: 80.0.3987.106 (f68069574609..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:62293}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: e37bb88855fa09b832cebf635777fd62]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: element is not attached to the page document
  (Session info: chrome=81.0.4044.113)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-NJVBPFB', ip: '192.168.225.65', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 81.0.4044.113, chrome: {chromedriverVersion: 80.0.3987.106 (f68069574609..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:62293}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: e37bb88855fa09b832cebf635777fd62
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.isDisplayed(RemoteWebElement.java:326)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:314)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:43)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:300)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:297)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
at com.tetherfi.pages.BasePage.waitUntilWebElementListIsVisible(BasePage.java:135)
at com.tetherfi.pages.BasePage.selectDropdownFromVisibleText(BasePage.java:333)
at com.tetherfi.pages.SmsResponseTemplatePageWMC.searchSmsResponseTemplateRecord(SmsResponseTemplatePageWMC.java:768)
at com.tetherfi.pages.SmsResponseTemplatePageWMC.verifyinvalidsearchwithwrongdata(SmsResponseTemplatePageWMC.java:1427)
at com.tetherfi.test.sms.SmsResponseTemplateTest.SearchClearSearch(SmsResponseTemplateTest.java:293)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchClearSearch -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="afterEachMethod" is-config="true" duration-ms="1749" started-at="2020-04-23T11:18:45 IST" finished-at="2020-04-23T11:18:46 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.SearchClearSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="endTestCase" is-config="true" duration-ms="0" started-at="2020-04-23T11:18:46 IST" finished-at="2020-04-23T11:18:46 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.SearchClearSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="startTestCase" is-config="true" duration-ms="0" started-at="2020-04-23T11:18:46 IST" finished-at="2020-04-23T11:18:46 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.ExporttoExcelWithoutData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToSmsResponseTemplatePage()[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="NavigateToSmsResponseTemplatePage" is-config="true" duration-ms="4807" started-at="2020-04-23T11:18:46 IST" finished-at="2020-04-23T11:18:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToSmsResponseTemplatePage -->
        <test-method status="PASS" signature="ExporttoExcelWithoutData()[pri:27, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="ExporttoExcelWithoutData" duration-ms="5331" started-at="2020-04-23T11:18:51 IST" finished-at="2020-04-23T11:18:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ExporttoExcelWithoutData -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="afterEachMethod" is-config="true" duration-ms="1868" started-at="2020-04-23T11:18:56 IST" finished-at="2020-04-23T11:18:58 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.ExporttoExcelWithoutData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="endTestCase" is-config="true" duration-ms="0" started-at="2020-04-23T11:18:58 IST" finished-at="2020-04-23T11:18:58 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.ExporttoExcelWithoutData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="NavigateToSmsResponseTemplatePage()[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="NavigateToSmsResponseTemplatePage" is-config="true" duration-ms="4886" started-at="2020-04-23T11:18:58 IST" finished-at="2020-04-23T11:19:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToSmsResponseTemplatePage -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="startTestCase" is-config="true" duration-ms="0" started-at="2020-04-23T11:18:58 IST" finished-at="2020-04-23T11:18:58 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.SortByAscending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="FAIL" signature="SortByAscending()[pri:28, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="SortByAscending" duration-ms="10352" started-at="2020-04-23T11:19:03 IST" finished-at="2020-04-23T11:19:14 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at com.tetherfi.test.sms.SmsResponseTemplateTest.SortByAscending(SmsResponseTemplateTest.java:311)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SortByAscending -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="afterEachMethod" is-config="true" duration-ms="1755" started-at="2020-04-23T11:19:14 IST" finished-at="2020-04-23T11:19:15 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.SortByAscending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="endTestCase" is-config="true" duration-ms="0" started-at="2020-04-23T11:19:15 IST" finished-at="2020-04-23T11:19:15 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.SortByAscending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="NavigateToSmsResponseTemplatePage()[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="NavigateToSmsResponseTemplatePage" is-config="true" duration-ms="4747" started-at="2020-04-23T11:19:15 IST" finished-at="2020-04-23T11:19:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToSmsResponseTemplatePage -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="startTestCase" is-config="true" duration-ms="0" started-at="2020-04-23T11:19:15 IST" finished-at="2020-04-23T11:19:15 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.SortByDescending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="FAIL" signature="SortByDescending()[pri:29, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="SortByDescending" duration-ms="10421" started-at="2020-04-23T11:19:20 IST" finished-at="2020-04-23T11:19:30 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at com.tetherfi.test.sms.SmsResponseTemplateTest.SortByDescending(SmsResponseTemplateTest.java:320)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SortByDescending -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="afterEachMethod" is-config="true" duration-ms="1607" started-at="2020-04-23T11:19:30 IST" finished-at="2020-04-23T11:19:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.SortByDescending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="endTestCase" is-config="true" duration-ms="0" started-at="2020-04-23T11:19:32 IST" finished-at="2020-04-23T11:19:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.SortByDescending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="startTestCase" is-config="true" duration-ms="1" started-at="2020-04-23T11:19:32 IST" finished-at="2020-04-23T11:19:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.GroupBy()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToSmsResponseTemplatePage()[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="NavigateToSmsResponseTemplatePage" is-config="true" duration-ms="4797" started-at="2020-04-23T11:19:32 IST" finished-at="2020-04-23T11:19:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToSmsResponseTemplatePage -->
        <test-method status="PASS" signature="GroupBy()[pri:30, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="GroupBy" duration-ms="1720" started-at="2020-04-23T11:19:37 IST" finished-at="2020-04-23T11:19:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GroupBy -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="afterEachMethod" is-config="true" duration-ms="1501" started-at="2020-04-23T11:19:39 IST" finished-at="2020-04-23T11:19:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.GroupBy()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="endTestCase" is-config="true" duration-ms="0" started-at="2020-04-23T11:19:40 IST" finished-at="2020-04-23T11:19:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.GroupBy()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="startTestCase" is-config="true" duration-ms="1" started-at="2020-04-23T11:19:40 IST" finished-at="2020-04-23T11:19:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyArrowMoveForPreviousAndNextPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToSmsResponseTemplatePage()[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="NavigateToSmsResponseTemplatePage" is-config="true" duration-ms="4569" started-at="2020-04-23T11:19:40 IST" finished-at="2020-04-23T11:19:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToSmsResponseTemplatePage -->
        <test-method status="FAIL" signature="VerifyArrowMoveForPreviousAndNextPage()[pri:31, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="VerifyArrowMoveForPreviousAndNextPage" duration-ms="1290" started-at="2020-04-23T11:19:45 IST" finished-at="2020-04-23T11:19:46 IST">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <a aria-label="Go to the next page" class="k-link k-pager-nav" data-page="2" href="#" title="Go to the next page" tabindex="-1">...</a> is not clickable at point (175, 514). Other element would receive the click: <div class="theme-color">...</div>
  (Session info: chrome=81.0.4044.113)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-NJVBPFB', ip: '192.168.225.65', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 81.0.4044.113, chrome: {chromedriverVersion: 80.0.3987.106 (f68069574609..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:62293}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: e37bb88855fa09b832cebf635777fd62]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <a aria-label="Go to the next page" class="k-link k-pager-nav" data-page="2" href="#" title="Go to the next page" tabindex="-1">...</a> is not clickable at point (175, 514). Other element would receive the click: <div class="theme-color">...</div>
  (Session info: chrome=81.0.4044.113)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-NJVBPFB', ip: '192.168.225.65', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 81.0.4044.113, chrome: {chromedriverVersion: 80.0.3987.106 (f68069574609..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:62293}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: e37bb88855fa09b832cebf635777fd62
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at sun.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at com.sun.proxy.$Proxy11.click(Unknown Source)
at com.tetherfi.pages.BasePage.selectWebElement(BasePage.java:198)
at com.tetherfi.pages.SmsResponseTemplatePageWMC.verifyArrowMoveForPreviousAndNextPage(SmsResponseTemplatePageWMC.java:574)
at com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyArrowMoveForPreviousAndNextPage(SmsResponseTemplateTest.java:332)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyArrowMoveForPreviousAndNextPage -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="afterEachMethod" is-config="true" duration-ms="1630" started-at="2020-04-23T11:19:46 IST" finished-at="2020-04-23T11:19:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyArrowMoveForPreviousAndNextPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="endTestCase" is-config="true" duration-ms="0" started-at="2020-04-23T11:19:48 IST" finished-at="2020-04-23T11:19:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyArrowMoveForPreviousAndNextPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="startTestCase" is-config="true" duration-ms="0" started-at="2020-04-23T11:19:48 IST" finished-at="2020-04-23T11:19:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyArrowMoveForFirstAndLastPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToSmsResponseTemplatePage()[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="NavigateToSmsResponseTemplatePage" is-config="true" duration-ms="4556" started-at="2020-04-23T11:19:48 IST" finished-at="2020-04-23T11:19:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToSmsResponseTemplatePage -->
        <test-method status="FAIL" signature="VerifyArrowMoveForFirstAndLastPage()[pri:32, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="VerifyArrowMoveForFirstAndLastPage" duration-ms="1266" started-at="2020-04-23T11:19:52 IST" finished-at="2020-04-23T11:19:53 IST">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <a aria-label="Go to the last page" class="k-link k-pager-nav k-pager-last" data-page="2" href="#" title="Go to the last page" tabindex="-1">...</a> is not clickable at point (210, 514). Other element would receive the click: <div class="theme-color">...</div>
  (Session info: chrome=81.0.4044.113)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-NJVBPFB', ip: '192.168.225.65', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 81.0.4044.113, chrome: {chromedriverVersion: 80.0.3987.106 (f68069574609..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:62293}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: e37bb88855fa09b832cebf635777fd62]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <a aria-label="Go to the last page" class="k-link k-pager-nav k-pager-last" data-page="2" href="#" title="Go to the last page" tabindex="-1">...</a> is not clickable at point (210, 514). Other element would receive the click: <div class="theme-color">...</div>
  (Session info: chrome=81.0.4044.113)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-NJVBPFB', ip: '192.168.225.65', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 81.0.4044.113, chrome: {chromedriverVersion: 80.0.3987.106 (f68069574609..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:62293}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: e37bb88855fa09b832cebf635777fd62
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at sun.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at com.sun.proxy.$Proxy11.click(Unknown Source)
at com.tetherfi.pages.BasePage.selectWebElement(BasePage.java:198)
at com.tetherfi.pages.SmsResponseTemplatePageWMC.verifyArrowMoveForFirstAndLastPage(SmsResponseTemplatePageWMC.java:589)
at com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyArrowMoveForFirstAndLastPage(SmsResponseTemplateTest.java:338)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyArrowMoveForFirstAndLastPage -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="afterEachMethod" is-config="true" duration-ms="1882" started-at="2020-04-23T11:19:53 IST" finished-at="2020-04-23T11:19:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyArrowMoveForFirstAndLastPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="endTestCase" is-config="true" duration-ms="0" started-at="2020-04-23T11:19:55 IST" finished-at="2020-04-23T11:19:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyArrowMoveForFirstAndLastPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="startTestCase" is-config="true" duration-ms="0" started-at="2020-04-23T11:19:55 IST" finished-at="2020-04-23T11:19:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyTotalNumberOfItemsPerPageDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToSmsResponseTemplatePage()[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="NavigateToSmsResponseTemplatePage" is-config="true" duration-ms="4428" started-at="2020-04-23T11:19:55 IST" finished-at="2020-04-23T11:20:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToSmsResponseTemplatePage -->
        <test-method status="FAIL" signature="VerifyTotalNumberOfItemsPerPageDetails()[pri:33, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="VerifyTotalNumberOfItemsPerPageDetails" duration-ms="49" started-at="2020-04-23T11:20:00 IST" finished-at="2020-04-23T11:20:00 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyTotalNumberOfItemsPerPageDetails(SmsResponseTemplateTest.java:344)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyTotalNumberOfItemsPerPageDetails -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="afterEachMethod" is-config="true" duration-ms="2521" started-at="2020-04-23T11:20:00 IST" finished-at="2020-04-23T11:20:02 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyTotalNumberOfItemsPerPageDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="endTestCase" is-config="true" duration-ms="0" started-at="2020-04-23T11:20:02 IST" finished-at="2020-04-23T11:20:02 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyTotalNumberOfItemsPerPageDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="startTestCase" is-config="true" duration-ms="0" started-at="2020-04-23T11:20:02 IST" finished-at="2020-04-23T11:20:02 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyNumberOfItemsPerPageSelection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToSmsResponseTemplatePage()[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="NavigateToSmsResponseTemplatePage" is-config="true" duration-ms="4464" started-at="2020-04-23T11:20:02 IST" finished-at="2020-04-23T11:20:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToSmsResponseTemplatePage -->
        <test-method status="FAIL" signature="VerifyNumberOfItemsPerPageSelection()[pri:34, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="VerifyNumberOfItemsPerPageSelection" duration-ms="1232" started-at="2020-04-23T11:20:07 IST" finished-at="2020-04-23T11:20:08 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Number of items per page assertion failed did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Number of items per page assertion failed did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyNumberOfItemsPerPageSelection(SmsResponseTemplateTest.java:350)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyNumberOfItemsPerPageSelection -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="afterEachMethod" is-config="true" duration-ms="1529" started-at="2020-04-23T11:20:08 IST" finished-at="2020-04-23T11:20:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyNumberOfItemsPerPageSelection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="endTestCase" is-config="true" duration-ms="1" started-at="2020-04-23T11:20:10 IST" finished-at="2020-04-23T11:20:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.sms.SmsResponseTemplateTest.VerifyNumberOfItemsPerPageSelection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.tetherfi.test.sms.SmsResponseTemplateTest@a098d76]" name="tearDown" is-config="true" duration-ms="5892" started-at="2020-04-23T11:20:10 IST" finished-at="2020-04-23T11:20:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.tetherfi.test.sms.SmsResponseTemplateTest -->
    </test> <!-- WorkCodeListTest -->
  </suite> <!-- Tetherfi Test Automation -->
</testng-results>
