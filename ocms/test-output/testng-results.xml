<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="1" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2019-05-08T11:31:14Z" name="Default suite" finished-at="2019-05-08T11:32:28Z" duration-ms="74030">
    <groups>
    </groups>
    <test started-at="2019-05-08T11:31:14Z" name="Default test" finished-at="2019-05-08T11:32:28Z" duration-ms="74030">
      <class name="com.tetherfi.test.ivr.HostValueMappingJsonTest">
        <test-method is-config="true" signature="openApplication()[pri:0, instance:com.tetherfi.test.ivr.HostValueMappingJsonTest@314b9e4b]" started-at="2019-05-08T17:01:14Z" name="openApplication" finished-at="2019-05-08T17:01:25Z" duration-ms="11035" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.HostValueMappingJsonTest@314b9e4b]" started-at="2019-05-08T17:01:25Z" name="startTestCase" finished-at="2019-05-08T17:01:25Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.HostValueMappingJsonTest.VerifyJsonDataForColumnIncludeGrid()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToHostValueMappingPage()[pri:0, instance:com.tetherfi.test.ivr.HostValueMappingJsonTest@314b9e4b]" started-at="2019-05-08T17:01:25Z" name="NavigateToHostValueMappingPage" finished-at="2019-05-08T17:01:30Z" duration-ms="4616" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToHostValueMappingPage -->
        <test-method signature="VerifyJsonDataForColumnIncludeGrid()[pri:0, instance:com.tetherfi.test.ivr.HostValueMappingJsonTest@314b9e4b]" started-at="2019-05-08T17:01:30Z" name="VerifyJsonDataForColumnIncludeGrid" finished-at="2019-05-08T17:01:44Z" duration-ms="13771" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[JSON data column include grid assertion failed expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: JSON data column include grid assertion failed expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at com.tetherfi.test.ivr.HostValueMappingJsonTest.VerifyJsonDataForColumnIncludeGrid(HostValueMappingJsonTest.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyJsonDataForColumnIncludeGrid -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.HostValueMappingJsonTest@314b9e4b]" started-at="2019-05-08T17:01:44Z" name="afterEachMethod" finished-at="2019-05-08T17:01:45Z" duration-ms="1382" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.HostValueMappingJsonTest.VerifyJsonDataForColumnIncludeGrid()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.HostValueMappingJsonTest@314b9e4b]" started-at="2019-05-08T17:01:45Z" name="endTestCase" finished-at="2019-05-08T17:01:45Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.HostValueMappingJsonTest.VerifyJsonDataForColumnIncludeGrid()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.HostValueMappingJsonTest@314b9e4b]" started-at="2019-05-08T17:01:45Z" name="startTestCase" finished-at="2019-05-08T17:01:45Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.HostValueMappingJsonTest.VerifyJsonDataForGridColumnHidden()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToHostValueMappingPage()[pri:0, instance:com.tetherfi.test.ivr.HostValueMappingJsonTest@314b9e4b]" started-at="2019-05-08T17:01:45Z" name="NavigateToHostValueMappingPage" finished-at="2019-05-08T17:01:49Z" duration-ms="3836" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToHostValueMappingPage -->
        <test-method signature="VerifyJsonDataForGridColumnHidden()[pri:0, instance:com.tetherfi.test.ivr.HostValueMappingJsonTest@314b9e4b]" started-at="2019-05-08T17:01:49Z" name="VerifyJsonDataForGridColumnHidden" finished-at="2019-05-08T17:02:04Z" duration-ms="15063" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at com.tetherfi.pages.HostValueMappingPage.verifyJsonDataForgridColumnHidden(HostValueMappingPage.java:1310)
	at com.tetherfi.test.ivr.HostValueMappingJsonTest.VerifyJsonDataForGridColumnHidden(HostValueMappingJsonTest.java:54)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyJsonDataForGridColumnHidden -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.HostValueMappingJsonTest@314b9e4b]" started-at="2019-05-08T17:02:04Z" name="afterEachMethod" finished-at="2019-05-08T17:02:05Z" duration-ms="1325" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.HostValueMappingJsonTest.VerifyJsonDataForGridColumnHidden()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.HostValueMappingJsonTest@314b9e4b]" started-at="2019-05-08T17:02:05Z" name="endTestCase" finished-at="2019-05-08T17:02:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.HostValueMappingJsonTest.VerifyJsonDataForGridColumnHidden()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigateToHostValueMappingPage()[pri:0, instance:com.tetherfi.test.ivr.HostValueMappingJsonTest@314b9e4b]" started-at="2019-05-08T17:02:05Z" name="NavigateToHostValueMappingPage" finished-at="2019-05-08T17:02:09Z" duration-ms="3879" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToHostValueMappingPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.HostValueMappingJsonTest@314b9e4b]" started-at="2019-05-08T17:02:05Z" name="startTestCase" finished-at="2019-05-08T17:02:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.HostValueMappingJsonTest.VerifyJsonDataForMakerAndChecker()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="VerifyJsonDataForMakerAndChecker()[pri:0, instance:com.tetherfi.test.ivr.HostValueMappingJsonTest@314b9e4b]" started-at="2019-05-08T17:02:09Z" name="VerifyJsonDataForMakerAndChecker" finished-at="2019-05-08T17:02:09Z" duration-ms="20" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyJsonDataForMakerAndChecker -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.HostValueMappingJsonTest@314b9e4b]" started-at="2019-05-08T17:02:09Z" name="afterEachMethod" finished-at="2019-05-08T17:02:10Z" duration-ms="426" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.HostValueMappingJsonTest.VerifyJsonDataForMakerAndChecker()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.HostValueMappingJsonTest@314b9e4b]" started-at="2019-05-08T17:02:10Z" name="startTestCase" finished-at="2019-05-08T17:02:10Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.HostValueMappingJsonTest.VerifyJsonDataForMandatoryField()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.HostValueMappingJsonTest@314b9e4b]" started-at="2019-05-08T17:02:10Z" name="endTestCase" finished-at="2019-05-08T17:02:10Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.HostValueMappingJsonTest.VerifyJsonDataForMakerAndChecker()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigateToHostValueMappingPage()[pri:0, instance:com.tetherfi.test.ivr.HostValueMappingJsonTest@314b9e4b]" started-at="2019-05-08T17:02:10Z" name="NavigateToHostValueMappingPage" finished-at="2019-05-08T17:02:15Z" duration-ms="4789" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToHostValueMappingPage -->
        <test-method signature="VerifyJsonDataForMandatoryField()[pri:0, instance:com.tetherfi.test.ivr.HostValueMappingJsonTest@314b9e4b]" started-at="2019-05-08T17:02:15Z" name="VerifyJsonDataForMandatoryField" finished-at="2019-05-08T17:02:25Z" duration-ms="10923" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[JSON data mandatory field assertion failed expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: JSON data mandatory field assertion failed expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at com.tetherfi.test.ivr.HostValueMappingJsonTest.VerifyJsonDataForMandatoryField(HostValueMappingJsonTest.java:71)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyJsonDataForMandatoryField -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.HostValueMappingJsonTest@314b9e4b]" started-at="2019-05-08T17:02:25Z" name="afterEachMethod" finished-at="2019-05-08T17:02:27Z" duration-ms="1342" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.HostValueMappingJsonTest.VerifyJsonDataForMandatoryField()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.HostValueMappingJsonTest@314b9e4b]" started-at="2019-05-08T17:02:27Z" name="endTestCase" finished-at="2019-05-08T17:02:27Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.HostValueMappingJsonTest.VerifyJsonDataForMandatoryField()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tetherfi.test.ivr.HostValueMappingJsonTest@314b9e4b]" started-at="2019-05-08T17:02:27Z" name="tearDown" finished-at="2019-05-08T17:02:28Z" duration-ms="1545" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.tetherfi.test.ivr.HostValueMappingJsonTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
