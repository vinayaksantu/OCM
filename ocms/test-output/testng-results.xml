<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="63" passed="45" failed="18" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-04-26T01:38:21 IST" name="Tetherfi Test Automation" finished-at="2020-04-26T01:52:46 IST" duration-ms="864883">
    <groups>
    </groups>
    <test started-at="2020-04-26T01:38:21 IST" name="FaxAddressBookTest" finished-at="2020-04-26T01:52:46 IST" duration-ms="864883">
      <class name="com.tetherfi.test.fax.FaxAddressBookTest">
        <test-method is-config="true" signature="openApplication()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:38:21 IST" name="openApplication" finished-at="2020-04-26T01:38:47 IST" duration-ms="25633" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:38:47 IST" name="startTestCase" finished-at="2020-04-26T01:38:47 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.FaxSendersPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:38:47 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:38:52 IST" duration-ms="4718" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="FaxSendersPage()[pri:1, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:38:52 IST" name="FaxSendersPage" finished-at="2020-04-26T01:38:52 IST" duration-ms="628" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FaxSendersPage -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:38:52 IST" name="afterEachMethod" finished-at="2020-04-26T01:38:54 IST" duration-ms="1808" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.FaxSendersPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:38:54 IST" name="endTestCase" finished-at="2020-04-26T01:38:54 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.FaxSendersPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:38:54 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:38:58 IST" duration-ms="3975" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:38:54 IST" name="startTestCase" finished-at="2020-04-26T01:38:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyDropdownForAllTheColumns()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="VerifyDropdownForAllTheColumns()[pri:2, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:38:58 IST" name="VerifyDropdownForAllTheColumns" finished-at="2020-04-26T01:39:19 IST" duration-ms="20953" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Columns dropdown assertion failed did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Columns dropdown assertion failed did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at com.tetherfi.test.fax.FaxAddressBookTest.VerifyDropdownForAllTheColumns(FaxAddressBookTest.java:66)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyDropdownForAllTheColumns -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:39:19 IST" name="afterEachMethod" finished-at="2020-04-26T01:39:21 IST" duration-ms="1583" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyDropdownForAllTheColumns()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:39:21 IST" name="endTestCase" finished-at="2020-04-26T01:39:21 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyDropdownForAllTheColumns()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:39:21 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:39:25 IST" duration-ms="3946" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:39:21 IST" name="startTestCase" finished-at="2020-04-26T01:39:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyColumnsHeaderEnableRecepient() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="VerifyColumnsHeaderEnableRecepient()[pri:3, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:39:25 IST" name="VerifyColumnsHeaderEnableRecepient" finished-at="2020-04-26T01:39:32 IST" duration-ms="7707" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyColumnsHeaderEnableRecepient -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:39:32 IST" name="afterEachMethod" finished-at="2020-04-26T01:39:34 IST" duration-ms="1541" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyColumnsHeaderEnableRecepient() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:39:34 IST" name="endTestCase" finished-at="2020-04-26T01:39:34 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyColumnsHeaderEnableRecepient() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:39:34 IST" name="startTestCase" finished-at="2020-04-26T01:39:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyColumnsHeaderDisable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:39:34 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:39:38 IST" duration-ms="3844" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyColumnsHeaderDisable()[pri:4, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:39:38 IST" name="VerifyColumnsHeaderDisable" finished-at="2020-04-26T01:40:00 IST" duration-ms="22475" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyColumnsHeaderDisable -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:40:00 IST" name="afterEachMethod" finished-at="2020-04-26T01:40:02 IST" duration-ms="1711" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyColumnsHeaderDisable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:40:02 IST" name="endTestCase" finished-at="2020-04-26T01:40:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyColumnsHeaderDisable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:40:02 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:40:06 IST" duration-ms="4375" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:40:02 IST" name="startTestCase" finished-at="2020-04-26T01:40:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyCancelButtonAtAddAdhocOptionEnhancementRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="VerifyCancelButtonAtAddAdhocOptionEnhancementRecord()[pri:5, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:40:06 IST" name="VerifyCancelButtonAtAddAdhocOptionEnhancementRecord" finished-at="2020-04-26T01:40:08 IST" duration-ms="1691" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyCancelButtonAtAddAdhocOptionEnhancementRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:40:08 IST" name="afterEachMethod" finished-at="2020-04-26T01:40:09 IST" duration-ms="1380" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyCancelButtonAtAddAdhocOptionEnhancementRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:40:09 IST" name="endTestCase" finished-at="2020-04-26T01:40:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyCancelButtonAtAddAdhocOptionEnhancementRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:40:09 IST" name="startTestCase" finished-at="2020-04-26T01:40:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewRecipientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:40:09 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:40:14 IST" duration-ms="4259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="AddNewRecipientRecord()[pri:6, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:40:14 IST" name="AddNewRecipientRecord" finished-at="2020-04-26T01:40:16 IST" duration-ms="2542" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewRecipientRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:40:16 IST" name="afterEachMethod" finished-at="2020-04-26T01:40:18 IST" duration-ms="1730" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewRecipientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:40:18 IST" name="endTestCase" finished-at="2020-04-26T01:40:18 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewRecipientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:40:18 IST" name="startTestCase" finished-at="2020-04-26T01:40:18 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrailReportForCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:40:18 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:40:22 IST" duration-ms="3895" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyAuditTrailReportForCreate()[pri:7, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:40:22 IST" name="VerifyAuditTrailReportForCreate" finished-at="2020-04-26T01:40:49 IST" duration-ms="27280" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrailReportForCreate -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:40:49 IST" name="afterEachMethod" finished-at="2020-04-26T01:40:51 IST" duration-ms="1501" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrailReportForCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:40:51 IST" name="endTestCase" finished-at="2020-04-26T01:40:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrailReportForCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:40:51 IST" name="startTestCase" finished-at="2020-04-26T01:40:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddDuplicateRecipientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:40:51 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:40:55 IST" duration-ms="4811" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="AddDuplicateRecipientRecord()[pri:8, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:40:55 IST" name="AddDuplicateRecipientRecord" finished-at="2020-04-26T01:40:59 IST" duration-ms="3139" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddDuplicateRecipientRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:40:59 IST" name="afterEachMethod" finished-at="2020-04-26T01:41:00 IST" duration-ms="1663" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddDuplicateRecipientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:41:00 IST" name="endTestCase" finished-at="2020-04-26T01:41:00 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddDuplicateRecipientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:41:00 IST" name="startTestCase" finished-at="2020-04-26T01:41:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewEmptyFaxAddressBookRecipientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:41:00 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:41:04 IST" duration-ms="3846" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="AddNewEmptyFaxAddressBookRecipientRecord()[pri:9, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:41:04 IST" name="AddNewEmptyFaxAddressBookRecipientRecord" finished-at="2020-04-26T01:41:06 IST" duration-ms="2234" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewEmptyFaxAddressBookRecipientRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:41:06 IST" name="afterEachMethod" finished-at="2020-04-26T01:41:08 IST" duration-ms="1698" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewEmptyFaxAddressBookRecipientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:41:08 IST" name="endTestCase" finished-at="2020-04-26T01:41:08 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewEmptyFaxAddressBookRecipientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:41:08 IST" name="startTestCase" finished-at="2020-04-26T01:41:08 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewFaxAddressBookRecipientWithoutFirstNameRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:41:08 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:41:12 IST" duration-ms="3710" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="AddNewFaxAddressBookRecipientWithoutFirstNameRecord()[pri:10, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:41:12 IST" name="AddNewFaxAddressBookRecipientWithoutFirstNameRecord" finished-at="2020-04-26T01:41:15 IST" duration-ms="3231" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewFaxAddressBookRecipientWithoutFirstNameRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:41:15 IST" name="afterEachMethod" finished-at="2020-04-26T01:41:17 IST" duration-ms="1670" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewFaxAddressBookRecipientWithoutFirstNameRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:41:17 IST" name="endTestCase" finished-at="2020-04-26T01:41:17 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewFaxAddressBookRecipientWithoutFirstNameRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:41:17 IST" name="startTestCase" finished-at="2020-04-26T01:41:17 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewFaxAddressBookRecipientWithoutNumberRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:41:17 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:41:20 IST" duration-ms="3592" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="AddNewFaxAddressBookRecipientWithoutNumberRecord()[pri:11, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:41:20 IST" name="AddNewFaxAddressBookRecipientWithoutNumberRecord" finished-at="2020-04-26T01:41:24 IST" duration-ms="3699" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewFaxAddressBookRecipientWithoutNumberRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:41:24 IST" name="afterEachMethod" finished-at="2020-04-26T01:41:25 IST" duration-ms="1476" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewFaxAddressBookRecipientWithoutNumberRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:41:25 IST" name="endTestCase" finished-at="2020-04-26T01:41:25 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewFaxAddressBookRecipientWithoutNumberRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:41:25 IST" name="startTestCase" finished-at="2020-04-26T01:41:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewFaxAddressBookRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:41:25 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:41:29 IST" duration-ms="3967" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="AddNewFaxAddressBookRecord()[pri:13, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:41:29 IST" name="AddNewFaxAddressBookRecord" finished-at="2020-04-26T01:41:36 IST" duration-ms="6612" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewFaxAddressBookRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:41:36 IST" name="afterEachMethod" finished-at="2020-04-26T01:41:38 IST" duration-ms="1586" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewFaxAddressBookRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:41:38 IST" name="endTestCase" finished-at="2020-04-26T01:41:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewFaxAddressBookRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:41:38 IST" name="startTestCase" finished-at="2020-04-26T01:41:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrailReportForAddressCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:41:38 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:41:42 IST" duration-ms="3924" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyAuditTrailReportForAddressCreate()[pri:14, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:41:42 IST" name="VerifyAuditTrailReportForAddressCreate" finished-at="2020-04-26T01:42:08 IST" duration-ms="26692" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrailReportForAddressCreate -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:42:08 IST" name="afterEachMethod" finished-at="2020-04-26T01:42:10 IST" duration-ms="1464" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrailReportForAddressCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:42:10 IST" name="endTestCase" finished-at="2020-04-26T01:42:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrailReportForAddressCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:42:10 IST" name="startTestCase" finished-at="2020-04-26T01:42:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewDuplicateRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:42:10 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:42:14 IST" duration-ms="3974" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="AddNewDuplicateRecord()[pri:15, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:42:14 IST" name="AddNewDuplicateRecord" finished-at="2020-04-26T01:42:20 IST" duration-ms="6180" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewDuplicateRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:42:20 IST" name="afterEachMethod" finished-at="2020-04-26T01:42:21 IST" duration-ms="1451" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewDuplicateRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:42:21 IST" name="endTestCase" finished-at="2020-04-26T01:42:21 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewDuplicateRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:42:21 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:42:26 IST" duration-ms="4543" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:42:21 IST" name="startTestCase" finished-at="2020-04-26T01:42:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewEmptyRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="AddNewEmptyRecord()[pri:16, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:42:26 IST" name="AddNewEmptyRecord" finished-at="2020-04-26T01:42:27 IST" duration-ms="970" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewEmptyRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:42:27 IST" name="afterEachMethod" finished-at="2020-04-26T01:42:28 IST" duration-ms="1566" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewEmptyRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:42:28 IST" name="endTestCase" finished-at="2020-04-26T01:42:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewEmptyRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:42:28 IST" name="startTestCase" finished-at="2020-04-26T01:42:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewRecordWithoutFaxLine() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:42:28 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:42:33 IST" duration-ms="4170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="AddNewRecordWithoutFaxLine()[pri:17, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:42:33 IST" name="AddNewRecordWithoutFaxLine" finished-at="2020-04-26T01:42:36 IST" duration-ms="3624" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewRecordWithoutFaxLine -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:42:36 IST" name="afterEachMethod" finished-at="2020-04-26T01:42:38 IST" duration-ms="1681" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewRecordWithoutFaxLine() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:42:38 IST" name="endTestCase" finished-at="2020-04-26T01:42:38 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewRecordWithoutFaxLine() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:42:38 IST" name="startTestCase" finished-at="2020-04-26T01:42:38 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewRecordWithoutName() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:42:38 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:42:42 IST" duration-ms="3783" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="AddNewRecordWithoutName()[pri:18, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:42:42 IST" name="AddNewRecordWithoutName" finished-at="2020-04-26T01:42:48 IST" duration-ms="6023" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewRecordWithoutName -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:42:48 IST" name="afterEachMethod" finished-at="2020-04-26T01:42:49 IST" duration-ms="1507" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewRecordWithoutName() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:42:49 IST" name="endTestCase" finished-at="2020-04-26T01:42:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewRecordWithoutName() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:42:49 IST" name="startTestCase" finished-at="2020-04-26T01:42:49 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewRecordWithoutRecipients() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:42:49 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:42:53 IST" duration-ms="3936" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="AddNewRecordWithoutRecipients()[pri:19, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:42:53 IST" name="AddNewRecordWithoutRecipients" finished-at="2020-04-26T01:43:16 IST" duration-ms="23244" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of [[ChromeDriver: chrome on WINDOWS (d8c804aef406ebb75d91e5e4fe4724f6)] -> css selector: ul[id='FaxLine_listbox'] li] (tried for 20 second(s) with 500 milliseconds interval)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-O6A5C2O', ip: '10.0.75.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '9.0.4'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 80.0.3987.116, chrome: {chromedriverVersion: 80.0.3987.106 (f68069574609..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:61675}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: d8c804aef406ebb75d91e5e4fe4724f6]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of [[ChromeDriver: chrome on WINDOWS (d8c804aef406ebb75d91e5e4fe4724f6)] -> css selector: ul[id='FaxLine_listbox'] li] (tried for 20 second(s) with 500 milliseconds interval)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-O6A5C2O', ip: '10.0.75.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '9.0.4'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 80.0.3987.116, chrome: {chromedriverVersion: 80.0.3987.106 (f68069574609..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:61675}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: d8c804aef406ebb75d91e5e4fe4724f6
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at com.tetherfi.pages.BasePage.waitUntilWebElementListIsVisible(BasePage.java:139)
at com.tetherfi.pages.BasePage.selectDropdownFromVisibleText(BasePage.java:335)
at com.tetherfi.pages.FaxAddressBookPage.addNewAddressBookRecordWithoutRecipients(FaxAddressBookPage.java:1094)
at com.tetherfi.test.fax.FaxAddressBookTest.AddNewRecordWithoutRecipients(FaxAddressBookTest.java:234)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewRecordWithoutRecipients -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:43:16 IST" name="afterEachMethod" finished-at="2020-04-26T01:43:18 IST" duration-ms="1906" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewRecordWithoutRecipients() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:43:18 IST" name="endTestCase" finished-at="2020-04-26T01:43:18 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewRecordWithoutRecipients() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:43:18 IST" name="startTestCase" finished-at="2020-04-26T01:43:18 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.ExportToExcel() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:43:18 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:43:23 IST" duration-ms="4551" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="ExportToExcel()[pri:20, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:43:23 IST" name="ExportToExcel" finished-at="2020-04-26T01:43:26 IST" duration-ms="3208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ExportToExcel -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:43:26 IST" name="afterEachMethod" finished-at="2020-04-26T01:43:28 IST" duration-ms="1783" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.ExportToExcel() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:43:28 IST" name="endTestCase" finished-at="2020-04-26T01:43:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.ExportToExcel() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:43:28 IST" name="startTestCase" finished-at="2020-04-26T01:43:28 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.ExportToExcelData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:43:28 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:43:32 IST" duration-ms="3960" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="ExportToExcelData()[pri:21, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:43:32 IST" name="ExportToExcelData" finished-at="2020-04-26T01:43:32 IST" duration-ms="446" status="FAIL">
          <exception class="java.lang.ArrayIndexOutOfBoundsException">
            <message>
              <![CDATA[1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArrayIndexOutOfBoundsException: 1
at com.tetherfi.pages.FaxAddressBookPage.getdata(FaxAddressBookPage.java:387)
at com.tetherfi.pages.FaxAddressBookPage.verifyexportToExcelSheet(FaxAddressBookPage.java:325)
at com.tetherfi.test.fax.FaxAddressBookTest.ExportToExcelData(FaxAddressBookTest.java:253)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArrayIndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ExportToExcelData -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:43:32 IST" name="afterEachMethod" finished-at="2020-04-26T01:43:34 IST" duration-ms="1745" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.ExportToExcelData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:43:34 IST" name="endTestCase" finished-at="2020-04-26T01:43:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.ExportToExcelData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:43:34 IST" name="startTestCase" finished-at="2020-04-26T01:43:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.SortingByAscending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:43:34 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:43:38 IST" duration-ms="3934" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="SortingByAscending()[pri:22, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:43:38 IST" name="SortingByAscending" finished-at="2020-04-26T01:43:43 IST" duration-ms="4669" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SortingByAscending -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:43:43 IST" name="afterEachMethod" finished-at="2020-04-26T01:43:44 IST" duration-ms="1591" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.SortingByAscending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:43:44 IST" name="endTestCase" finished-at="2020-04-26T01:43:44 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.SortingByAscending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:43:44 IST" name="startTestCase" finished-at="2020-04-26T01:43:44 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.SortingByDescending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:43:44 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:43:48 IST" duration-ms="3922" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="SortingByDescending()[pri:23, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:43:48 IST" name="SortingByDescending" finished-at="2020-04-26T01:43:53 IST" duration-ms="4980" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SortingByDescending -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:43:53 IST" name="afterEachMethod" finished-at="2020-04-26T01:43:55 IST" duration-ms="1589" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.SortingByDescending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:43:55 IST" name="endTestCase" finished-at="2020-04-26T01:43:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.SortingByDescending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:43:55 IST" name="startTestCase" finished-at="2020-04-26T01:43:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddressBookExportToExcel() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:43:55 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:43:59 IST" duration-ms="3899" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="AddressBookExportToExcel()[pri:24, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:43:59 IST" name="AddressBookExportToExcel" finished-at="2020-04-26T01:44:02 IST" duration-ms="3881" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddressBookExportToExcel -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:44:02 IST" name="afterEachMethod" finished-at="2020-04-26T01:44:04 IST" duration-ms="1649" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddressBookExportToExcel() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:44:04 IST" name="endTestCase" finished-at="2020-04-26T01:44:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddressBookExportToExcel() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:44:04 IST" name="startTestCase" finished-at="2020-04-26T01:44:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddressBookExportToExcelData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:44:04 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:44:08 IST" duration-ms="3924" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="AddressBookExportToExcelData()[pri:25, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:44:08 IST" name="AddressBookExportToExcelData" finished-at="2020-04-26T01:44:08 IST" duration-ms="54" status="FAIL">
          <exception class="java.lang.ArrayIndexOutOfBoundsException">
            <message>
              <![CDATA[1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArrayIndexOutOfBoundsException: 1
at com.tetherfi.pages.FaxAddressBookPage.getAddressBookdata(FaxAddressBookPage.java:355)
at com.tetherfi.pages.FaxAddressBookPage.verifyAddressBookexportToExcelSheet(FaxAddressBookPage.java:340)
at com.tetherfi.test.fax.FaxAddressBookTest.AddressBookExportToExcelData(FaxAddressBookTest.java:289)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArrayIndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddressBookExportToExcelData -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:44:08 IST" name="afterEachMethod" finished-at="2020-04-26T01:44:11 IST" duration-ms="2717" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddressBookExportToExcelData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:44:11 IST" name="endTestCase" finished-at="2020-04-26T01:44:11 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddressBookExportToExcelData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:44:11 IST" name="startTestCase" finished-at="2020-04-26T01:44:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddressBookSortingByAscending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:44:11 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:44:15 IST" duration-ms="3987" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="AddressBookSortingByAscending()[pri:26, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:44:15 IST" name="AddressBookSortingByAscending" finished-at="2020-04-26T01:44:22 IST" duration-ms="7279" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddressBookSortingByAscending -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:44:22 IST" name="afterEachMethod" finished-at="2020-04-26T01:44:24 IST" duration-ms="1597" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddressBookSortingByAscending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:44:24 IST" name="endTestCase" finished-at="2020-04-26T01:44:24 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddressBookSortingByAscending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:44:24 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:44:28 IST" duration-ms="4321" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:44:24 IST" name="startTestCase" finished-at="2020-04-26T01:44:24 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddressBookSortingByDescending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="AddressBookSortingByDescending()[pri:27, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:44:28 IST" name="AddressBookSortingByDescending" finished-at="2020-04-26T01:44:36 IST" duration-ms="7944" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddressBookSortingByDescending -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:44:36 IST" name="afterEachMethod" finished-at="2020-04-26T01:44:38 IST" duration-ms="1608" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddressBookSortingByDescending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:44:38 IST" name="endTestCase" finished-at="2020-04-26T01:44:38 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddressBookSortingByDescending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:44:38 IST" name="startTestCase" finished-at="2020-04-26T01:44:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.EditRecipientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:44:38 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:44:42 IST" duration-ms="4017" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="EditRecipientRecord()[pri:28, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:44:42 IST" name="EditRecipientRecord" finished-at="2020-04-26T01:44:48 IST" duration-ms="6598" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EditRecipientRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:44:48 IST" name="afterEachMethod" finished-at="2020-04-26T01:44:50 IST" duration-ms="1682" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.EditRecipientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:44:50 IST" name="endTestCase" finished-at="2020-04-26T01:44:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.EditRecipientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:44:50 IST" name="startTestCase" finished-at="2020-04-26T01:44:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrialReportForRecipientUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:44:50 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:44:54 IST" duration-ms="4463" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyAuditTrialReportForRecipientUpdate()[pri:29, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:44:54 IST" name="VerifyAuditTrialReportForRecipientUpdate" finished-at="2020-04-26T01:45:19 IST" depends-on-methods="com.tetherfi.test.fax.FaxAddressBookTest.EditRecipientRecord" duration-ms="25099" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrialReportForRecipientUpdate -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:45:19 IST" name="afterEachMethod" finished-at="2020-04-26T01:45:21 IST" duration-ms="1508" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrialReportForRecipientUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:45:21 IST" name="endTestCase" finished-at="2020-04-26T01:45:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrialReportForRecipientUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:45:21 IST" name="startTestCase" finished-at="2020-04-26T01:45:21 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.EditWithoutModifyReasonRecipientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:45:21 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:45:26 IST" duration-ms="4704" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="EditWithoutModifyReasonRecipientRecord()[pri:30, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:45:26 IST" name="EditWithoutModifyReasonRecipientRecord" finished-at="2020-04-26T01:45:29 IST" duration-ms="3511" status="FAIL">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index 6 out-of-bounds for length 6]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index 6 out-of-bounds for length 6
at java.base/jdk.internal.util.Preconditions.outOfBounds(Unknown Source)
at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Unknown Source)
at java.base/jdk.internal.util.Preconditions.checkIndex(Unknown Source)
at java.base/java.util.Objects.checkIndex(Unknown Source)
at java.base/java.util.ArrayList.get(Unknown Source)
at java.base/jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementListHandler.invoke(LocatingElementListHandler.java:39)
at com.sun.proxy.$Proxy17.get(Unknown Source)
at com.tetherfi.pages.FaxAddressBookPage.editRecipientWithoutModifyReason(FaxAddressBookPage.java:882)
at com.tetherfi.test.fax.FaxAddressBookTest.EditWithoutModifyReasonRecipientRecord(FaxAddressBookTest.java:343)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EditWithoutModifyReasonRecipientRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:45:29 IST" name="afterEachMethod" finished-at="2020-04-26T01:45:31 IST" duration-ms="1608" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.EditWithoutModifyReasonRecipientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:45:31 IST" name="endTestCase" finished-at="2020-04-26T01:45:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.EditWithoutModifyReasonRecipientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:45:31 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:45:35 IST" duration-ms="4622" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:45:31 IST" name="startTestCase" finished-at="2020-04-26T01:45:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyCancelBtnAtEditRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="VerifyCancelBtnAtEditRecord()[pri:31, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:45:35 IST" name="VerifyCancelBtnAtEditRecord" finished-at="2020-04-26T01:45:39 IST" duration-ms="3993" status="FAIL">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index 6 out-of-bounds for length 6]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index 6 out-of-bounds for length 6
at java.base/jdk.internal.util.Preconditions.outOfBounds(Unknown Source)
at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Unknown Source)
at java.base/jdk.internal.util.Preconditions.checkIndex(Unknown Source)
at java.base/java.util.Objects.checkIndex(Unknown Source)
at java.base/java.util.ArrayList.get(Unknown Source)
at java.base/jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementListHandler.invoke(LocatingElementListHandler.java:39)
at com.sun.proxy.$Proxy17.get(Unknown Source)
at com.tetherfi.pages.FaxAddressBookPage.clickOnEditButtonrecepient(FaxAddressBookPage.java:779)
at com.tetherfi.test.fax.FaxAddressBookTest.VerifyCancelBtnAtEditRecord(FaxAddressBookTest.java:354)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyCancelBtnAtEditRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:45:39 IST" name="afterEachMethod" finished-at="2020-04-26T01:45:41 IST" duration-ms="1431" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyCancelBtnAtEditRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:45:41 IST" name="endTestCase" finished-at="2020-04-26T01:45:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyCancelBtnAtEditRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:45:41 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:45:45 IST" duration-ms="4504" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:45:41 IST" name="startTestCase" finished-at="2020-04-26T01:45:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.EditFaxAddressBookRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="EditFaxAddressBookRecord()[pri:32, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:45:45 IST" name="EditFaxAddressBookRecord" finished-at="2020-04-26T01:45:50 IST" duration-ms="5185" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EditFaxAddressBookRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:45:50 IST" name="afterEachMethod" finished-at="2020-04-26T01:45:52 IST" duration-ms="1618" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.EditFaxAddressBookRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:45:52 IST" name="endTestCase" finished-at="2020-04-26T01:45:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.EditFaxAddressBookRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:45:52 IST" name="startTestCase" finished-at="2020-04-26T01:45:52 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrialReportForFaxAddressBookUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:45:52 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:45:57 IST" duration-ms="4699" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyAuditTrialReportForFaxAddressBookUpdate()[pri:33, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:45:57 IST" name="VerifyAuditTrialReportForFaxAddressBookUpdate" finished-at="2020-04-26T01:46:21 IST" depends-on-methods="com.tetherfi.test.fax.FaxAddressBookTest.EditFaxAddressBookRecord" duration-ms="24695" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrialReportForFaxAddressBookUpdate(FaxAddressBookTest.java:381)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrialReportForFaxAddressBookUpdate -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:46:21 IST" name="afterEachMethod" finished-at="2020-04-26T01:46:23 IST" duration-ms="1486" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrialReportForFaxAddressBookUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:46:23 IST" name="endTestCase" finished-at="2020-04-26T01:46:23 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrialReportForFaxAddressBookUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:46:23 IST" name="startTestCase" finished-at="2020-04-26T01:46:23 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.EditWithoutModifyReasonAddressBookRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:46:23 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:46:28 IST" duration-ms="4786" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="EditWithoutModifyReasonAddressBookRecord()[pri:34, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:46:28 IST" name="EditWithoutModifyReasonAddressBookRecord" finished-at="2020-04-26T01:47:11 IST" duration-ms="43589" status="FAIL">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index 0 out-of-bounds for length 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index 0 out-of-bounds for length 0
at java.base/jdk.internal.util.Preconditions.outOfBounds(Unknown Source)
at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Unknown Source)
at java.base/jdk.internal.util.Preconditions.checkIndex(Unknown Source)
at java.base/java.util.Objects.checkIndex(Unknown Source)
at java.base/java.util.ArrayList.get(Unknown Source)
at java.base/jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementListHandler.invoke(LocatingElementListHandler.java:39)
at com.sun.proxy.$Proxy17.get(Unknown Source)
at com.tetherfi.pages.FaxAddressBookPage.editAddressBookWithoutModifyReason(FaxAddressBookPage.java:1118)
at com.tetherfi.test.fax.FaxAddressBookTest.EditWithoutModifyReasonAddressBookRecord(FaxAddressBookTest.java:390)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EditWithoutModifyReasonAddressBookRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:47:11 IST" name="afterEachMethod" finished-at="2020-04-26T01:47:13 IST" duration-ms="1728" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.EditWithoutModifyReasonAddressBookRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:47:13 IST" name="endTestCase" finished-at="2020-04-26T01:47:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.EditWithoutModifyReasonAddressBookRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:47:13 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:47:17 IST" duration-ms="4363" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:47:13 IST" name="startTestCase" finished-at="2020-04-26T01:47:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyCancelBtnAtEditAddressBookRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="VerifyCancelBtnAtEditAddressBookRecord()[pri:35, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:47:17 IST" name="VerifyCancelBtnAtEditAddressBookRecord" finished-at="2020-04-26T01:47:20 IST" duration-ms="2635" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <span unselectable="on" class="k-select" aria-label="select">...</span> is not clickable at point (828, 175). Other element would receive the click: <span title="Please select the criteria" class="k-widget k-dropdown" unselectable="on" role="listbox" aria-haspopup="true" aria-expanded="false" aria-owns="1001sCriteria_listbox" aria-live="polite" aria-disabled="true" style="">...</span>
  (Session info: chrome=80.0.3987.116)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-O6A5C2O', ip: '10.0.75.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '9.0.4'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 80.0.3987.116, chrome: {chromedriverVersion: 80.0.3987.106 (f68069574609..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:61675}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: d8c804aef406ebb75d91e5e4fe4724f6]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <span unselectable="on" class="k-select" aria-label="select">...</span> is not clickable at point (828, 175). Other element would receive the click: <span title="Please select the criteria" class="k-widget k-dropdown" unselectable="on" role="listbox" aria-haspopup="true" aria-expanded="false" aria-owns="1001sCriteria_listbox" aria-live="polite" aria-disabled="true" style="">...</span>
  (Session info: chrome=80.0.3987.116)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-O6A5C2O', ip: '10.0.75.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '9.0.4'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 80.0.3987.116, chrome: {chromedriverVersion: 80.0.3987.106 (f68069574609..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:61675}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: d8c804aef406ebb75d91e5e4fe4724f6
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at com.tetherfi.pages.BasePage.selectWebElement(BasePage.java:202)
at com.tetherfi.pages.FaxAddressBookPage.searchRecipientRecord(FaxAddressBookPage.java:869)
at com.tetherfi.pages.FaxAddressBookPage.clickOnEditButtonAddress(FaxAddressBookPage.java:784)
at com.tetherfi.test.fax.FaxAddressBookTest.VerifyCancelBtnAtEditAddressBookRecord(FaxAddressBookTest.java:400)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyCancelBtnAtEditAddressBookRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:47:20 IST" name="afterEachMethod" finished-at="2020-04-26T01:47:22 IST" duration-ms="1615" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyCancelBtnAtEditAddressBookRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:47:22 IST" name="endTestCase" finished-at="2020-04-26T01:47:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyCancelBtnAtEditAddressBookRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:47:22 IST" name="startTestCase" finished-at="2020-04-26T01:47:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.DeleteWithoutDeleteReasonAddressBookRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:47:22 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:47:26 IST" duration-ms="3877" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="DeleteWithoutDeleteReasonAddressBookRecord()[pri:36, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:47:26 IST" name="DeleteWithoutDeleteReasonAddressBookRecord" finished-at="2020-04-26T01:47:31 IST" duration-ms="5147" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteWithoutDeleteReasonAddressBookRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:47:31 IST" name="afterEachMethod" finished-at="2020-04-26T01:47:32 IST" duration-ms="1572" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.DeleteWithoutDeleteReasonAddressBookRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:47:32 IST" name="endTestCase" finished-at="2020-04-26T01:47:32 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.DeleteWithoutDeleteReasonAddressBookRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:47:32 IST" name="startTestCase" finished-at="2020-04-26T01:47:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyCancelBtnAtDeleteAddressRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:47:32 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:47:36 IST" duration-ms="3858" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyCancelBtnAtDeleteAddressRecord()[pri:37, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:47:36 IST" name="VerifyCancelBtnAtDeleteAddressRecord" finished-at="2020-04-26T01:47:40 IST" duration-ms="4137" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyCancelBtnAtDeleteAddressRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:47:40 IST" name="afterEachMethod" finished-at="2020-04-26T01:47:42 IST" duration-ms="1509" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyCancelBtnAtDeleteAddressRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:47:42 IST" name="endTestCase" finished-at="2020-04-26T01:47:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyCancelBtnAtDeleteAddressRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:47:42 IST" name="startTestCase" finished-at="2020-04-26T01:47:42 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.DeleteAddressBookRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:47:42 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:47:46 IST" duration-ms="3999" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="DeleteAddressBookRecord()[pri:38, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:47:46 IST" name="DeleteAddressBookRecord" finished-at="2020-04-26T01:47:50 IST" duration-ms="4559" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteAddressBookRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:47:50 IST" name="afterEachMethod" finished-at="2020-04-26T01:47:52 IST" duration-ms="1707" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.DeleteAddressBookRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:47:52 IST" name="endTestCase" finished-at="2020-04-26T01:47:52 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.DeleteAddressBookRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:47:52 IST" name="startTestCase" finished-at="2020-04-26T01:47:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrialReportForAddressBookDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:47:52 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:47:56 IST" duration-ms="3885" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyAuditTrialReportForAddressBookDelete()[pri:39, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:47:56 IST" name="VerifyAuditTrialReportForAddressBookDelete" finished-at="2020-04-26T01:48:20 IST" duration-ms="24510" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrialReportForAddressBookDelete(FaxAddressBookTest.java:448)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrialReportForAddressBookDelete -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:48:20 IST" name="afterEachMethod" finished-at="2020-04-26T01:48:22 IST" duration-ms="1533" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrialReportForAddressBookDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:48:22 IST" name="endTestCase" finished-at="2020-04-26T01:48:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrialReportForAddressBookDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:48:22 IST" name="startTestCase" finished-at="2020-04-26T01:48:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.DeleteRecepientWithoutDeleteReasonRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:48:22 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:48:26 IST" duration-ms="4344" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="DeleteRecepientWithoutDeleteReasonRecord()[pri:40, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:48:26 IST" name="DeleteRecepientWithoutDeleteReasonRecord" finished-at="2020-04-26T01:48:30 IST" duration-ms="3953" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteRecepientWithoutDeleteReasonRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:48:30 IST" name="afterEachMethod" finished-at="2020-04-26T01:48:32 IST" duration-ms="1630" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.DeleteRecepientWithoutDeleteReasonRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:48:32 IST" name="endTestCase" finished-at="2020-04-26T01:48:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.DeleteRecepientWithoutDeleteReasonRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:48:32 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:48:37 IST" duration-ms="4586" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:48:32 IST" name="startTestCase" finished-at="2020-04-26T01:48:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyCancelBtnAtDeleteRecepientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="VerifyCancelBtnAtDeleteRecepientRecord()[pri:41, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:48:37 IST" name="VerifyCancelBtnAtDeleteRecepientRecord" finished-at="2020-04-26T01:48:37 IST" duration-ms="45" status="FAIL">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index 1 out-of-bounds for length 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index 1 out-of-bounds for length 1
at java.base/jdk.internal.util.Preconditions.outOfBounds(Unknown Source)
at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Unknown Source)
at java.base/jdk.internal.util.Preconditions.checkIndex(Unknown Source)
at java.base/java.util.Objects.checkIndex(Unknown Source)
at java.base/java.util.ArrayList.get(Unknown Source)
at com.tetherfi.test.fax.FaxAddressBookTest.VerifyCancelBtnAtDeleteRecepientRecord(FaxAddressBookTest.java:464)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyCancelBtnAtDeleteRecepientRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:48:37 IST" name="afterEachMethod" finished-at="2020-04-26T01:48:38 IST" duration-ms="1596" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyCancelBtnAtDeleteRecepientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:48:38 IST" name="endTestCase" finished-at="2020-04-26T01:48:38 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyCancelBtnAtDeleteRecepientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:48:38 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:48:43 IST" duration-ms="4402" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:48:38 IST" name="startTestCase" finished-at="2020-04-26T01:48:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.DeleteRecipientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="DeleteRecipientRecord()[pri:42, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:48:43 IST" name="DeleteRecipientRecord" finished-at="2020-04-26T01:48:47 IST" duration-ms="4514" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteRecipientRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:48:47 IST" name="afterEachMethod" finished-at="2020-04-26T01:48:49 IST" duration-ms="2143" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.DeleteRecipientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:48:49 IST" name="endTestCase" finished-at="2020-04-26T01:48:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.DeleteRecipientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:48:49 IST" name="startTestCase" finished-at="2020-04-26T01:48:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrialReportForDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:48:49 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:48:53 IST" duration-ms="3853" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyAuditTrialReportForDelete()[pri:43, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:48:53 IST" name="VerifyAuditTrialReportForDelete" finished-at="2020-04-26T01:49:19 IST" duration-ms="26064" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrialReportForDelete(FaxAddressBookTest.java:494)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrialReportForDelete -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:49:19 IST" name="afterEachMethod" finished-at="2020-04-26T01:49:21 IST" duration-ms="1540" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrialReportForDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:49:21 IST" name="endTestCase" finished-at="2020-04-26T01:49:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrialReportForDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:49:21 IST" name="startTestCase" finished-at="2020-04-26T01:49:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyRecipientArrowMoveForPreviousAndNextPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:49:21 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:49:25 IST" duration-ms="4643" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyRecipientArrowMoveForPreviousAndNextPage()[pri:44, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:49:25 IST" name="VerifyRecipientArrowMoveForPreviousAndNextPage" finished-at="2020-04-26T01:49:26 IST" duration-ms="321" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyRecipientArrowMoveForPreviousAndNextPage -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:49:26 IST" name="afterEachMethod" finished-at="2020-04-26T01:49:27 IST" duration-ms="1768" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyRecipientArrowMoveForPreviousAndNextPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:49:27 IST" name="endTestCase" finished-at="2020-04-26T01:49:27 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyRecipientArrowMoveForPreviousAndNextPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:49:27 IST" name="startTestCase" finished-at="2020-04-26T01:49:27 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyRecipientArrowMoveForFirstAndLastPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:49:27 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:49:31 IST" duration-ms="4023" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyRecipientArrowMoveForFirstAndLastPage()[pri:45, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:49:31 IST" name="VerifyRecipientArrowMoveForFirstAndLastPage" finished-at="2020-04-26T01:49:32 IST" duration-ms="355" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyRecipientArrowMoveForFirstAndLastPage -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:49:32 IST" name="afterEachMethod" finished-at="2020-04-26T01:49:34 IST" duration-ms="1816" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyRecipientArrowMoveForFirstAndLastPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:49:34 IST" name="endTestCase" finished-at="2020-04-26T01:49:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyRecipientArrowMoveForFirstAndLastPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:49:34 IST" name="startTestCase" finished-at="2020-04-26T01:49:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyRecipientTotalNumberOfItemsPerPageDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:49:34 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:49:38 IST" duration-ms="3930" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyRecipientTotalNumberOfItemsPerPageDetails()[pri:46, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:49:38 IST" name="VerifyRecipientTotalNumberOfItemsPerPageDetails" finished-at="2020-04-26T01:49:38 IST" duration-ms="353" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyRecipientTotalNumberOfItemsPerPageDetails -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:49:38 IST" name="afterEachMethod" finished-at="2020-04-26T01:49:40 IST" duration-ms="1629" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyRecipientTotalNumberOfItemsPerPageDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:49:40 IST" name="endTestCase" finished-at="2020-04-26T01:49:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyRecipientTotalNumberOfItemsPerPageDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:49:40 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:49:44 IST" duration-ms="4615" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:49:40 IST" name="startTestCase" finished-at="2020-04-26T01:49:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyRecipientNumberOfItemsPerPageSelection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="VerifyRecipientNumberOfItemsPerPageSelection()[pri:47, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:49:44 IST" name="VerifyRecipientNumberOfItemsPerPageSelection" finished-at="2020-04-26T01:49:44 IST" duration-ms="264" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[item per page assertion failed did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: item per page assertion failed did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at com.tetherfi.test.fax.FaxAddressBookTest.VerifyRecipientNumberOfItemsPerPageSelection(FaxAddressBookTest.java:522)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyRecipientNumberOfItemsPerPageSelection -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:49:44 IST" name="afterEachMethod" finished-at="2020-04-26T01:49:46 IST" duration-ms="1851" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyRecipientNumberOfItemsPerPageSelection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:49:46 IST" name="endTestCase" finished-at="2020-04-26T01:49:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyRecipientNumberOfItemsPerPageSelection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:49:46 IST" name="startTestCase" finished-at="2020-04-26T01:49:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.searchRecipientPageClose() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:49:46 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:49:50 IST" duration-ms="3725" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="searchRecipientPageClose()[pri:48, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:49:50 IST" name="searchRecipientPageClose" finished-at="2020-04-26T01:49:53 IST" duration-ms="3436" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchRecipientPageClose -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:49:53 IST" name="afterEachMethod" finished-at="2020-04-26T01:49:55 IST" duration-ms="1572" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.searchRecipientPageClose() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:49:55 IST" name="endTestCase" finished-at="2020-04-26T01:49:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.searchRecipientPageClose() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:49:55 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:49:59 IST" duration-ms="3903" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:49:55 IST" name="startTestCase" finished-at="2020-04-26T01:49:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.searchRecipientwithoutSearchTextbox() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="searchRecipientwithoutSearchTextbox()[pri:49, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:49:59 IST" name="searchRecipientwithoutSearchTextbox" finished-at="2020-04-26T01:50:03 IST" duration-ms="4545" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchRecipientwithoutSearchTextbox -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:50:03 IST" name="afterEachMethod" finished-at="2020-04-26T01:50:05 IST" duration-ms="1652" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.searchRecipientwithoutSearchTextbox() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:50:05 IST" name="endTestCase" finished-at="2020-04-26T01:50:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.searchRecipientwithoutSearchTextbox() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:50:05 IST" name="startTestCase" finished-at="2020-04-26T01:50:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyRecipientDragAndDrop() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:50:05 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:50:10 IST" duration-ms="4432" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyRecipientDragAndDrop()[pri:50, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:50:10 IST" name="VerifyRecipientDragAndDrop" finished-at="2020-04-26T01:50:12 IST" duration-ms="2416" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[drag and drop assertion failed did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: drag and drop assertion failed did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at com.tetherfi.test.fax.FaxAddressBookTest.VerifyRecipientDragAndDrop(FaxAddressBookTest.java:551)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyRecipientDragAndDrop -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:50:12 IST" name="afterEachMethod" finished-at="2020-04-26T01:50:14 IST" duration-ms="1533" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyRecipientDragAndDrop() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:50:14 IST" name="endTestCase" finished-at="2020-04-26T01:50:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyRecipientDragAndDrop() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:50:14 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:50:18 IST" duration-ms="3990" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:50:14 IST" name="startTestCase" finished-at="2020-04-26T01:50:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyRecipientDragAndDropofAlreadyGroupedHeader() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="VerifyRecipientDragAndDropofAlreadyGroupedHeader()[pri:51, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:50:18 IST" name="VerifyRecipientDragAndDropofAlreadyGroupedHeader" finished-at="2020-04-26T01:50:21 IST" duration-ms="3181" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[drag and drop assertion failed did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: drag and drop assertion failed did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at com.tetherfi.test.fax.FaxAddressBookTest.VerifyRecipientDragAndDropofAlreadyGroupedHeader(FaxAddressBookTest.java:561)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyRecipientDragAndDropofAlreadyGroupedHeader -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:50:21 IST" name="afterEachMethod" finished-at="2020-04-26T01:50:22 IST" duration-ms="1661" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyRecipientDragAndDropofAlreadyGroupedHeader() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:50:22 IST" name="endTestCase" finished-at="2020-04-26T01:50:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyRecipientDragAndDropofAlreadyGroupedHeader() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:50:22 IST" name="startTestCase" finished-at="2020-04-26T01:50:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyDragAndDrop() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:50:22 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:50:26 IST" duration-ms="3777" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyDragAndDrop()[pri:52, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:50:26 IST" name="VerifyDragAndDrop" finished-at="2020-04-26T01:50:29 IST" duration-ms="2901" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyDragAndDrop -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:50:29 IST" name="afterEachMethod" finished-at="2020-04-26T01:50:31 IST" duration-ms="1706" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyDragAndDrop() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:50:31 IST" name="endTestCase" finished-at="2020-04-26T01:50:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyDragAndDrop() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:50:31 IST" name="startTestCase" finished-at="2020-04-26T01:50:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyDragAndDropofAlreadyGroupedHeader() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:50:31 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:50:34 IST" duration-ms="3634" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyDragAndDropofAlreadyGroupedHeader()[pri:53, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:50:34 IST" name="VerifyDragAndDropofAlreadyGroupedHeader" finished-at="2020-04-26T01:50:38 IST" duration-ms="3458" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyDragAndDropofAlreadyGroupedHeader -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:50:38 IST" name="afterEachMethod" finished-at="2020-04-26T01:50:39 IST" duration-ms="1559" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyDragAndDropofAlreadyGroupedHeader() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:50:39 IST" name="endTestCase" finished-at="2020-04-26T01:50:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyDragAndDropofAlreadyGroupedHeader() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:50:39 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:50:43 IST" duration-ms="3999" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:50:39 IST" name="startTestCase" finished-at="2020-04-26T01:50:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAddressBookDropdownForAllTheColumns()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="VerifyAddressBookDropdownForAllTheColumns()[pri:54, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:50:43 IST" name="VerifyAddressBookDropdownForAllTheColumns" finished-at="2020-04-26T01:50:44 IST" duration-ms="376" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Columns dropdown assertion failed did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Columns dropdown assertion failed did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at com.tetherfi.test.fax.FaxAddressBookTest.VerifyAddressBookDropdownForAllTheColumns(FaxAddressBookTest.java:584)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAddressBookDropdownForAllTheColumns -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:50:44 IST" name="afterEachMethod" finished-at="2020-04-26T01:50:46 IST" duration-ms="2415" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAddressBookDropdownForAllTheColumns()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:50:46 IST" name="endTestCase" finished-at="2020-04-26T01:50:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAddressBookDropdownForAllTheColumns()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:50:46 IST" name="startTestCase" finished-at="2020-04-26T01:50:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAddressBookColumnsHeaderEnable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:50:46 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:50:50 IST" duration-ms="3841" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyAddressBookColumnsHeaderEnable()[pri:55, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:50:50 IST" name="VerifyAddressBookColumnsHeaderEnable" finished-at="2020-04-26T01:51:20 IST" duration-ms="30140" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of [[ChromeDriver: chrome on WINDOWS (d8c804aef406ebb75d91e5e4fe4724f6)] -> css selector: th a[class='k-header-column-menu']] (tried for 30 second(s) with 500 milliseconds interval)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-O6A5C2O', ip: '10.0.75.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '9.0.4'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 80.0.3987.116, chrome: {chromedriverVersion: 80.0.3987.106 (f68069574609..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:61675}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: d8c804aef406ebb75d91e5e4fe4724f6]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of [[ChromeDriver: chrome on WINDOWS (d8c804aef406ebb75d91e5e4fe4724f6)] -> css selector: th a[class='k-header-column-menu']] (tried for 30 second(s) with 500 milliseconds interval)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-O6A5C2O', ip: '10.0.75.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '9.0.4'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 80.0.3987.116, chrome: {chromedriverVersion: 80.0.3987.106 (f68069574609..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:61675}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: d8c804aef406ebb75d91e5e4fe4724f6
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at com.tetherfi.pages.BasePage.waitUntilWebElementIsVisible(BasePage.java:127)
at com.tetherfi.pages.FaxAddressBookPage.verifycolumnsHeaderEnabled(FaxAddressBookPage.java:704)
at com.tetherfi.test.fax.FaxAddressBookTest.VerifyAddressBookColumnsHeaderEnable(FaxAddressBookTest.java:590)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAddressBookColumnsHeaderEnable -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:51:20 IST" name="afterEachMethod" finished-at="2020-04-26T01:51:22 IST" duration-ms="1674" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAddressBookColumnsHeaderEnable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:51:22 IST" name="endTestCase" finished-at="2020-04-26T01:51:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAddressBookColumnsHeaderEnable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:51:22 IST" name="startTestCase" finished-at="2020-04-26T01:51:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAddressBookColumnsHeaderDisable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:51:22 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:51:26 IST" duration-ms="3865" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyAddressBookColumnsHeaderDisable()[pri:56, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:51:26 IST" name="VerifyAddressBookColumnsHeaderDisable" finished-at="2020-04-26T01:51:33 IST" duration-ms="7001" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAddressBookColumnsHeaderDisable -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:51:33 IST" name="afterEachMethod" finished-at="2020-04-26T01:51:34 IST" duration-ms="1592" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAddressBookColumnsHeaderDisable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:51:34 IST" name="endTestCase" finished-at="2020-04-26T01:51:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAddressBookColumnsHeaderDisable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:51:34 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:51:38 IST" duration-ms="4090" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:51:34 IST" name="startTestCase" finished-at="2020-04-26T01:51:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.SearchRecipientClearSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="SearchRecipientClearSearch()[pri:57, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:51:38 IST" name="SearchRecipientClearSearch" finished-at="2020-04-26T01:51:43 IST" duration-ms="4706" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchRecipientClearSearch -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:51:43 IST" name="afterEachMethod" finished-at="2020-04-26T01:51:45 IST" duration-ms="1809" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.SearchRecipientClearSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:51:45 IST" name="endTestCase" finished-at="2020-04-26T01:51:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.SearchRecipientClearSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:51:45 IST" name="startTestCase" finished-at="2020-04-26T01:51:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.searchRecipientPage() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:51:45 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:51:48 IST" duration-ms="3482" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="searchRecipientPage()[pri:58, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:51:48 IST" name="searchRecipientPage" finished-at="2020-04-26T01:51:53 IST" duration-ms="4847" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchRecipientPage -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:51:53 IST" name="afterEachMethod" finished-at="2020-04-26T01:51:55 IST" duration-ms="1559" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.searchRecipientPage() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:51:55 IST" name="endTestCase" finished-at="2020-04-26T01:51:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.searchRecipientPage() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:51:55 IST" name="startTestCase" finished-at="2020-04-26T01:51:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.searchAddressBookwithoutSearchTextbox() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:51:55 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:51:59 IST" duration-ms="3928" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="searchAddressBookwithoutSearchTextbox()[pri:59, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:51:59 IST" name="searchAddressBookwithoutSearchTextbox" finished-at="2020-04-26T01:52:02 IST" duration-ms="3186" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchAddressBookwithoutSearchTextbox -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:52:02 IST" name="afterEachMethod" finished-at="2020-04-26T01:52:04 IST" duration-ms="1672" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.searchAddressBookwithoutSearchTextbox() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:52:04 IST" name="endTestCase" finished-at="2020-04-26T01:52:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.searchAddressBookwithoutSearchTextbox() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:52:04 IST" name="startTestCase" finished-at="2020-04-26T01:52:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.SearchClearSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:52:04 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:52:07 IST" duration-ms="3898" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="SearchClearSearch()[pri:60, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:52:07 IST" name="SearchClearSearch" finished-at="2020-04-26T01:52:12 IST" duration-ms="4974" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchClearSearch -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:52:12 IST" name="afterEachMethod" finished-at="2020-04-26T01:52:14 IST" duration-ms="1604" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.SearchClearSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:52:14 IST" name="endTestCase" finished-at="2020-04-26T01:52:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.SearchClearSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:52:14 IST" name="startTestCase" finished-at="2020-04-26T01:52:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyArrowMoveForPreviousAndNextPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:52:14 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:52:18 IST" duration-ms="3917" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyArrowMoveForPreviousAndNextPage()[pri:61, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:52:18 IST" name="VerifyArrowMoveForPreviousAndNextPage" finished-at="2020-04-26T01:52:18 IST" duration-ms="26" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyArrowMoveForPreviousAndNextPage -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:52:18 IST" name="afterEachMethod" finished-at="2020-04-26T01:52:20 IST" duration-ms="1651" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyArrowMoveForPreviousAndNextPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:52:20 IST" name="endTestCase" finished-at="2020-04-26T01:52:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyArrowMoveForPreviousAndNextPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:52:20 IST" name="startTestCase" finished-at="2020-04-26T01:52:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyArrowMoveForFirstAndLastPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:52:20 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:52:24 IST" duration-ms="3904" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyArrowMoveForFirstAndLastPage()[pri:62, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:52:24 IST" name="VerifyArrowMoveForFirstAndLastPage" finished-at="2020-04-26T01:52:24 IST" duration-ms="31" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyArrowMoveForFirstAndLastPage -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:52:24 IST" name="afterEachMethod" finished-at="2020-04-26T01:52:25 IST" duration-ms="1744" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyArrowMoveForFirstAndLastPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:52:25 IST" name="endTestCase" finished-at="2020-04-26T01:52:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyArrowMoveForFirstAndLastPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:52:25 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:52:30 IST" duration-ms="4249" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:52:25 IST" name="startTestCase" finished-at="2020-04-26T01:52:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyTotalNumberOfItemsPerPageDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="VerifyTotalNumberOfItemsPerPageDetails()[pri:63, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:52:30 IST" name="VerifyTotalNumberOfItemsPerPageDetails" finished-at="2020-04-26T01:52:30 IST" duration-ms="51" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyTotalNumberOfItemsPerPageDetails -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:52:30 IST" name="afterEachMethod" finished-at="2020-04-26T01:52:31 IST" duration-ms="1704" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyTotalNumberOfItemsPerPageDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:52:31 IST" name="endTestCase" finished-at="2020-04-26T01:52:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyTotalNumberOfItemsPerPageDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:52:31 IST" name="startTestCase" finished-at="2020-04-26T01:52:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyNumberOfItemsPerPageSelection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:52:31 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-26T01:52:35 IST" duration-ms="3883" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyNumberOfItemsPerPageSelection()[pri:64, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:52:35 IST" name="VerifyNumberOfItemsPerPageSelection" finished-at="2020-04-26T01:52:39 IST" duration-ms="3602" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[item per page assertion failed did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: item per page assertion failed did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at com.tetherfi.test.fax.FaxAddressBookTest.VerifyNumberOfItemsPerPageSelection(FaxAddressBookTest.java:661)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyNumberOfItemsPerPageSelection -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:52:39 IST" name="afterEachMethod" finished-at="2020-04-26T01:52:40 IST" duration-ms="1570" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyNumberOfItemsPerPageSelection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:52:40 IST" name="endTestCase" finished-at="2020-04-26T01:52:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyNumberOfItemsPerPageSelection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@7e62cfa3]" started-at="2020-04-26T01:52:40 IST" name="tearDown" finished-at="2020-04-26T01:52:46 IST" duration-ms="5802" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.tetherfi.test.fax.FaxAddressBookTest -->
    </test> <!-- FaxAddressBookTest -->
  </suite> <!-- Tetherfi Test Automation -->
</testng-results>
