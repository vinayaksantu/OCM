<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite skipped="3" hostname="TTF-BLR-SANTOSHKOUJALAGI" name="com.tetherfi.test.ivr.VIPListManagementTest" tests="27" failures="2" timestamp="2021-10-20T07:13:34 IST" time="414.835" errors="0">
  <testcase name="AddNewVIPListRecord" time="17.271" classname="com.tetherfi.test.ivr.VIPListManagementTest"/>
  <testcase name="AddDuplicateVIPListRecord" time="16.795" classname="com.tetherfi.test.ivr.VIPListManagementTest"/>
  <testcase name="AddEmptyRecord" time="10.487" classname="com.tetherfi.test.ivr.VIPListManagementTest"/>
  <testcase name="AddRecordWithoutCallerID" time="15.632" classname="com.tetherfi.test.ivr.VIPListManagementTest"/>
  <testcase name="AddRecordWithoutEmailId" time="16.430" classname="com.tetherfi.test.ivr.VIPListManagementTest"/>
  <testcase name="AddRecordWithoutFBHandle" time="14.083" classname="com.tetherfi.test.ivr.VIPListManagementTest">
    <failure type="java.lang.AssertionError" message="Add New record assertion failed expected [Record Created Successfully] but found [Record Creation Failed, Already Exist]">
      <![CDATA[java.lang.AssertionError: Add New record assertion failed expected [Record Created Successfully] but found [Record Creation Failed, Already Exist]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at com.tetherfi.test.ivr.VIPListManagementTest.AddRecordWithoutFBHandle(VIPListManagementTest.java:151)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- AddRecordWithoutFBHandle -->
  <testcase name="AddRecordWithoutMessengerID" time="15.048" classname="com.tetherfi.test.ivr.VIPListManagementTest"/>
  <testcase name="AddRecordWithoutCustomerIDType" time="14.393" classname="com.tetherfi.test.ivr.VIPListManagementTest"/>
  <testcase name="AddRecordWithoutCustomerIDNo" time="15.637" classname="com.tetherfi.test.ivr.VIPListManagementTest"/>
  <testcase name="AddRecordWithoutCountry" time="14.014" classname="com.tetherfi.test.ivr.VIPListManagementTest"/>
  <testcase name="AddRecordWithoutContactType" time="16.481" classname="com.tetherfi.test.ivr.VIPListManagementTest"/>
  <testcase name="AddRecordWithoutInclusionFlag" time="14.042" classname="com.tetherfi.test.ivr.VIPListManagementTest"/>
  <testcase name="AddRecordWithoutExclusionFlag" time="14.033" classname="com.tetherfi.test.ivr.VIPListManagementTest"/>
  <testcase name="AddRecordWithoutOtherData" time="14.831" classname="com.tetherfi.test.ivr.VIPListManagementTest"/>
  <testcase name="VerifyCancelBtnAtAddRecord" time="31.755" classname="com.tetherfi.test.ivr.VIPListManagementTest"/>
  <testcase name="EditVIPListRecord" time="18.243" classname="com.tetherfi.test.ivr.VIPListManagementTest"/>
  <testcase name="EditWithoutModifyReasonRecord" time="15.769" classname="com.tetherfi.test.ivr.VIPListManagementTest"/>
  <testcase name="VerifyCancelBtnAtEditConfigRecord" time="37.085" classname="com.tetherfi.test.ivr.VIPListManagementTest"/>
  <testcase name="ExportToExcel" time="9.947" classname="com.tetherfi.test.ivr.VIPListManagementTest"/>
  <testcase name="ExportToExcelData" time="10.213" classname="com.tetherfi.test.ivr.VIPListManagementTest"/>
  <testcase name="DeleteWithoutDeleteReasonRecord" time="14.728" classname="com.tetherfi.test.ivr.VIPListManagementTest"/>
  <testcase name="VerifyCancelBtnAtDeleteVIPListRecord" time="35.915" classname="com.tetherfi.test.ivr.VIPListManagementTest"/>
  <testcase name="DeleteVIPListRecord" time="17.973" classname="com.tetherfi.test.ivr.VIPListManagementTest"/>
  <testcase name="database" time="14.030" classname="com.tetherfi.test.ivr.VIPListManagementTest">
    <failure type="java.lang.AssertionError" message="did not expect to find [true] but found [false]">
      <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at com.tetherfi.test.ivr.VIPListManagementTest.database(VIPListManagementTest.java:487)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- database -->
  <testcase name="VerifyAuditTrialReportForDelete" classname="com.tetherfi.test.ivr.VIPListManagementTest">
    <skipped/>
  </testcase> <!-- VerifyAuditTrialReportForDelete -->
  <testcase name="VerifyAuditTrialReportForCreate" classname="com.tetherfi.test.ivr.VIPListManagementTest">
    <skipped/>
  </testcase> <!-- VerifyAuditTrialReportForCreate -->
  <testcase name="VerifyAuditTrialReportForUpdate" classname="com.tetherfi.test.ivr.VIPListManagementTest">
    <skipped/>
  </testcase> <!-- VerifyAuditTrialReportForUpdate -->
</testsuite> <!-- com.tetherfi.test.ivr.VIPListManagementTest -->
