<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<<<<<<< HEAD
<testsuite hostname="DESKTOP-SNCCD49" ignored="0" name="Default test" tests="34" failures="0" timestamp="2019-09-05T10:24:10 IST" time="41.854" errors="0">
  <testcase name="@BeforeMethod NavigateToCallBackAnnouncementPage" time="30.982" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <failure type="org.openqa.selenium.TimeoutException" message="Expected condition failed: waiting for visibility of [[ChromeDriver: chrome on XP (5461c482909331eb4c6d2a539a4548b9)] -&amp;gt; xpath: //a[@class=&amp;apos;OCM-sidebar-toggle white-color&amp;apos;]] (tried for 30 second(s) with 500 milliseconds interval)
Build info: version: &amp;apos;3.141.59&amp;apos;, revision: &amp;apos;e82be7d358&amp;apos;, time: &amp;apos;2018-11-14T08:17:03&amp;apos;
System info: host: &amp;apos;DESKTOP-SNCCD49&amp;apos;, ip: &amp;apos;192.168.1.10&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;1.8.0_181&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 76.0.3809.132, chrome: {chromedriverVersion: 76.0.3809.68 (420c9498db8ce..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:50979}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 5461c482909331eb4c6d2a539a4548b9">
      <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of [[ChromeDriver: chrome on XP (5461c482909331eb4c6d2a539a4548b9)] -> xpath: //a[@class='OCM-sidebar-toggle white-color']] (tried for 30 second(s) with 500 milliseconds interval)
=======
<testsuite ignored="0" hostname="admin" failures="15" tests="35" name="Default test" time="738.821" errors="0" timestamp="2019-09-04T12:55:47 IST">
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="CepEventMappingPage" time="1.081"/>
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="VerifyDropdownForAllTheColumns" time="14.218"/>
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="VerifyColumnsHeaderEnable" time="9.027"/>
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="VerifyColumnsHeaderDisable" time="0.076"/>
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="AddCepEventMappingRecord" time="4.389">
    <failure type="java.lang.AssertionError" message="Add New record assertion failed expected [Record Created Successfully] but found [Please Provide CEP Event]">
      <![CDATA[java.lang.AssertionError: Add New record assertion failed expected [Record Created Successfully] but found [Please Provide CEP Event]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at com.tetherfi.test.CEPEventMappingTest.AddCepEventMappingRecord(CEPEventMappingTest.java:70)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- AddCepEventMappingRecord -->
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="VerifyAuditTrialReportForCreate" time="26.862"/>
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="DuplicateRecord" time="123.144">
    <failure type="org.openqa.selenium.TimeoutException" message="Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator &amp;apos;By.cssSelector: #toast-container .toast-message&amp;apos; (tried for 30 second(s) with 500 milliseconds interval)">
      <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.cssSelector: #toast-container .toast-message' (tried for 30 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at com.tetherfi.pages.BasePage.waitUntilWebElementIsVisible(BasePage.java:127)
at com.tetherfi.pages.CepEventMappingPage.getMessage(CepEventMappingPage.java:617)
at com.tetherfi.test.CEPEventMappingTest.DuplicateRecord(CEPEventMappingTest.java:95)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"#toast-container .toast-message"}
  (Session info: chrome=76.0.3809.132)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
>>>>>>> branch 'Palak3' of https://git.tetherfi.com:1443/tetherfi-product-qa/automation-testing/ocm/scripts.git
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-SNCCD49', ip: '192.168.1.10', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
<<<<<<< HEAD
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 76.0.3809.132, chrome: {chromedriverVersion: 76.0.3809.68 (420c9498db8ce..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:50979}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 5461c482909331eb4c6d2a539a4548b9
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at com.tetherfi.pages.BasePage.waitUntilWebElementIsVisible(BasePage.java:127)
at com.tetherfi.pages.BasePage.selectWebElement(BasePage.java:191)
at com.tetherfi.pages.HomePage.navigateToOCMPage(HomePage.java:60)
at com.tetherfi.test.ivr.CallBackAnnouncementTest.NavigateToCallBackAnnouncementPage(CallBackAnnouncementTest.java:36)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:340)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:294)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:683)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:510)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
=======
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 76.0.3809.132, chrome: {chromedriverVersion: 76.0.3809.68 (420c9498db8ce..., userDataDir: C:\Users\ADMINP~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:55615}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: daa3cdaeac7a3f5af411ca0e08630e66
*** Element info: {Using=css selector, value=#toast-container .toast-message}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByCssSelector(RemoteWebDriver.java:420)
at org.openqa.selenium.By$ByCssSelector.findElement(By.java:431)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy14.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:314)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:43)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:300)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:297)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
... 31 more
]]>
    </failure>
  </testcase> <!-- DuplicateRecord -->
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="VerifyCancelBtnAtAddRecord" time="43.788"/>
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="AddRecordWithoutCEPEvent" time="2.624">
    <failure type="java.lang.AssertionError" message="Invalid record assertion failed expected [Please provide a valid CEP Event] but found [Please Provide CEP Event]">
      <![CDATA[java.lang.AssertionError: Invalid record assertion failed expected [Please provide a valid CEP Event] but found [Please Provide CEP Event]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at com.tetherfi.test.CEPEventMappingTest.AddRecordWithoutCEPEvent(CEPEventMappingTest.java:113)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- AddRecordWithoutCEPEvent -->
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="AddRecordWithoutDescription" time="2.461">
    <failure type="java.lang.AssertionError" message="Invalid record assertion failed expected [Please provide a valid description] but found [Please Provide Description]">
      <![CDATA[java.lang.AssertionError: Invalid record assertion failed expected [Please provide a valid description] but found [Please Provide Description]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at com.tetherfi.test.CEPEventMappingTest.AddRecordWithoutDescription(CEPEventMappingTest.java:123)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- AddRecordWithoutDescription -->
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="AddRecordWithoutBins" time="3.075">
    <failure type="java.lang.AssertionError" message="Invalid record assertion failed expected [Please provide a valid BINS] but found [Please Provide BINS]">
      <![CDATA[java.lang.AssertionError: Invalid record assertion failed expected [Please provide a valid BINS] but found [Please Provide BINS]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at com.tetherfi.test.CEPEventMappingTest.AddRecordWithoutBins(CEPEventMappingTest.java:133)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- AddRecordWithoutBins -->
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="AddRecordWithoutTransferFlag" time="2.211">
    <failure type="java.lang.AssertionError" message="Invalid record assertion failed expected [Please select a transfer flag] but found [Please Provide Transfer flag]">
      <![CDATA[java.lang.AssertionError: Invalid record assertion failed expected [Please select a transfer flag] but found [Please Provide Transfer flag]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at com.tetherfi.test.CEPEventMappingTest.AddRecordWithoutTransferFlag(CEPEventMappingTest.java:143)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- AddRecordWithoutTransferFlag -->
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="AddRecordWithoutIntent" time="3.244"/>
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="EditCepEventMappingRecord" time="12.518">
    <failure type="java.lang.AssertionError" message="Edit record assertion failed expected [Record Updated Successfully] but found [Please enter the modify reason]">
      <![CDATA[java.lang.AssertionError: Edit record assertion failed expected [Record Updated Successfully] but found [Please enter the modify reason]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at com.tetherfi.test.CEPEventMappingTest.EditCepEventMappingRecord(CEPEventMappingTest.java:163)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- EditCepEventMappingRecord -->
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="VerifyAuditTrialReportForUpdate" time="26.14">
    <failure type="java.lang.IndexOutOfBoundsException" message="Index 1 out-of-bounds for length 1">
      <![CDATA[java.lang.IndexOutOfBoundsException: Index 1 out-of-bounds for length 1
at java.base/jdk.internal.util.Preconditions.outOfBounds(Unknown Source)
at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Unknown Source)
at java.base/jdk.internal.util.Preconditions.checkIndex(Unknown Source)
at java.base/java.util.Objects.checkIndex(Unknown Source)
at java.base/java.util.ArrayList.get(Unknown Source)
at com.tetherfi.pages.OCMReportsPage.getFirstRowDatafromTable1(OCMReportsPage.java:1157)
at com.tetherfi.pages.OCMReportsPage.verifyCepEventMappingUpdate(OCMReportsPage.java:4645)
at com.tetherfi.test.CEPEventMappingTest.VerifyAuditTrialReportForUpdate(CEPEventMappingTest.java:178)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- VerifyAuditTrialReportForUpdate -->
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="EditWithoutModifyReasonRecord" time="6.754"/>
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="VerifyCancelBtnAtEditRecord" time="54.29"/>
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="searchPage" time="6.146"/>
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="ExportToExcel" time="2.467"/>
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="ExportToExcelData" time="3.583">
    <failure type="java.lang.AssertionError" message="did not expect to find [true] but found [false]">
      <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at com.tetherfi.test.CEPEventMappingTest.ExportToExcelData(CEPEventMappingTest.java:226)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- ExportToExcelData -->
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="DeleteWithoutDeleteReasonRecord" time="5.722"/>
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="VerifyCancelBtnAtDeleteCEPEventMappingRecord" time="50.668"/>
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="DeleteRecord" time="7.93"/>
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="VerifyAuditTrialReportForDelete" time="27.611">
    <failure type="java.lang.IndexOutOfBoundsException" message="Index 1 out-of-bounds for length 1">
      <![CDATA[java.lang.IndexOutOfBoundsException: Index 1 out-of-bounds for length 1
at java.base/jdk.internal.util.Preconditions.outOfBounds(Unknown Source)
at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Unknown Source)
at java.base/jdk.internal.util.Preconditions.checkIndex(Unknown Source)
at java.base/java.util.Objects.checkIndex(Unknown Source)
at java.base/java.util.ArrayList.get(Unknown Source)
at com.tetherfi.pages.OCMReportsPage.getFirstRowDatafromTable1(OCMReportsPage.java:1157)
at com.tetherfi.pages.OCMReportsPage.verifyCepEventMappingdelete(OCMReportsPage.java:4715)
at com.tetherfi.test.CEPEventMappingTest.VerifyAuditTrialReportForDelete(CEPEventMappingTest.java:270)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- VerifyAuditTrialReportForDelete -->
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="SearchClearSearch" time="45.768">
    <failure type="org.openqa.selenium.NoSuchElementException" message="no such element: Unable to locate element: {&amp;quot;method&amp;quot;:&amp;quot;xpath&amp;quot;,&amp;quot;selector&amp;quot;:&amp;quot;//div[text()=&amp;apos;No records to display&amp;apos;]&amp;quot;}
  (Session info: chrome=76.0.3809.132)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: &amp;apos;3.141.59&amp;apos;, revision: &amp;apos;e82be7d358&amp;apos;, time: &amp;apos;2018-11-14T08:17:03&amp;apos;
System info: host: &amp;apos;ADMIN&amp;apos;, ip: &amp;apos;192.168.1.13&amp;apos;, os.name: &amp;apos;Windows 8.1&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;6.3&amp;apos;, java.version: &amp;apos;9.0.4&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 76.0.3809.132, chrome: {chromedriverVersion: 76.0.3809.68 (420c9498db8ce..., userDataDir: C:\Users\ADMINP~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:55615}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: daa3cdaeac7a3f5af411ca0e08630e66
*** Element info: {Using=xpath, value=//div[text()=&amp;apos;No records to display&amp;apos;]}">
      <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div[text()='No records to display']"}
  (Session info: chrome=76.0.3809.132)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'ADMIN', ip: '192.168.1.13', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '9.0.4'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 76.0.3809.132, chrome: {chromedriverVersion: 76.0.3809.68 (420c9498db8ce..., userDataDir: C:\Users\ADMINP~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:55615}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: daa3cdaeac7a3f5af411ca0e08630e66
*** Element info: {Using=xpath, value=//div[text()='No records to display']}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy14.isDisplayed(Unknown Source)
at com.tetherfi.pages.CepEventMappingPage.verifyinvalidsearchwithwrongdata(CepEventMappingPage.java:579)
at com.tetherfi.test.CEPEventMappingTest.SearchClearSearch(CEPEventMappingTest.java:280)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
>>>>>>> branch 'Palak3' of https://git.tetherfi.com:1443/tetherfi-product-qa/automation-testing/ocm/scripts.git
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
<<<<<<< HEAD
  </testcase> <!-- @BeforeMethod NavigateToCallBackAnnouncementPage -->
  <testcase name="@AfterMethod afterEachMethod" time="-1.567659249791E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachMethod -->
  <testcase name="@AfterMethod endTestCase" time="-1.567659249795E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod endTestCase -->
  <testcase name="@BeforeMethod startTestCase" time="-1.567659249804E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTestCase -->
  <testcase name="@BeforeMethod NavigateToCallBackAnnouncementPage" time="-1.567659249806E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod NavigateToCallBackAnnouncementPage -->
  <testcase name="@AfterMethod afterEachMethod" time="-1.567659249816E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachMethod -->
  <testcase name="@AfterMethod endTestCase" time="-1.567659249823E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod endTestCase -->
  <testcase name="@BeforeMethod startTestCase" time="-1.567659249829E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTestCase -->
  <testcase name="@BeforeMethod NavigateToCallBackAnnouncementPage" time="-1.567659249835E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod NavigateToCallBackAnnouncementPage -->
  <testcase name="@AfterMethod afterEachMethod" time="-1.567659249845E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachMethod -->
  <testcase name="@AfterMethod endTestCase" time="-1.567659249847E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod endTestCase -->
  <testcase name="@BeforeMethod startTestCase" time="-1.567659249857E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTestCase -->
  <testcase name="@BeforeMethod NavigateToCallBackAnnouncementPage" time="-1.567659249863E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod NavigateToCallBackAnnouncementPage -->
  <testcase name="@AfterMethod afterEachMethod" time="-1.567659249891E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachMethod -->
  <testcase name="@AfterMethod endTestCase" time="-1.567659249897E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod endTestCase -->
  <testcase name="@BeforeMethod startTestCase" time="-1.567659249905E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTestCase -->
  <testcase name="@BeforeMethod NavigateToCallBackAnnouncementPage" time="-1.56765924991E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod NavigateToCallBackAnnouncementPage -->
  <testcase name="@AfterMethod afterEachMethod" time="-1.567659249934E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachMethod -->
  <testcase name="@AfterMethod endTestCase" time="-1.56765924994E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod endTestCase -->
  <testcase name="@BeforeMethod startTestCase" time="-1.567659249945E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTestCase -->
  <testcase name="@BeforeMethod NavigateToCallBackAnnouncementPage" time="-1.567659249947E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod NavigateToCallBackAnnouncementPage -->
  <testcase name="@AfterMethod afterEachMethod" time="-1.567659249963E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachMethod -->
  <testcase name="@AfterMethod endTestCase" time="-1.567659249971E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod endTestCase -->
  <testcase name="@BeforeMethod startTestCase" time="-1.567659250014E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTestCase -->
  <testcase name="@BeforeMethod NavigateToCallBackAnnouncementPage" time="-1.567659250021E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod NavigateToCallBackAnnouncementPage -->
  <testcase name="@AfterMethod afterEachMethod" time="-1.567659250045E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachMethod -->
  <testcase name="@AfterMethod endTestCase" time="-1.567659250047E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod endTestCase -->
  <testcase name="@BeforeMethod startTestCase" time="-1.567659250055E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTestCase -->
  <testcase name="@BeforeMethod NavigateToCallBackAnnouncementPage" time="-1.567659250056E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod NavigateToCallBackAnnouncementPage -->
  <testcase name="@AfterMethod afterEachMethod" time="-1.567659250068E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachMethod -->
  <testcase name="@AfterMethod endTestCase" time="-1.56765925007E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod endTestCase -->
  <testcase name="@BeforeMethod startTestCase" time="-1.567659250073E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTestCase -->
  <testcase name="@BeforeMethod NavigateToCallBackAnnouncementPage" time="-1.567659250077E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod NavigateToCallBackAnnouncementPage -->
  <testcase name="@AfterMethod afterEachMethod" time="-1.567659250083E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachMethod -->
  <testcase name="@AfterMethod endTestCase" time="-1.567659250086E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod endTestCase -->
  <testcase name="@BeforeMethod startTestCase" time="-1.567659250091E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTestCase -->
  <testcase name="@BeforeMethod NavigateToCallBackAnnouncementPage" time="-1.567659250093E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod NavigateToCallBackAnnouncementPage -->
  <testcase name="@AfterMethod afterEachMethod" time="-1.567659250107E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachMethod -->
  <testcase name="@AfterMethod endTestCase" time="-1.567659250109E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod endTestCase -->
  <testcase name="@BeforeMethod startTestCase" time="-1.567659250121E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTestCase -->
  <testcase name="@BeforeMethod NavigateToCallBackAnnouncementPage" time="-1.567659250128E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod NavigateToCallBackAnnouncementPage -->
  <testcase name="@AfterMethod afterEachMethod" time="-1.567659250137E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachMethod -->
  <testcase name="@AfterMethod endTestCase" time="-1.567659250138E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod endTestCase -->
  <testcase name="@BeforeMethod startTestCase" time="-1.567659250141E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTestCase -->
  <testcase name="@BeforeMethod NavigateToCallBackAnnouncementPage" time="-1.567659250143E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod NavigateToCallBackAnnouncementPage -->
  <testcase name="@AfterMethod afterEachMethod" time="-1.56765925015E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachMethod -->
  <testcase name="@AfterMethod endTestCase" time="-1.567659250151E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod endTestCase -->
  <testcase name="@BeforeMethod startTestCase" time="-1.567659250168E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTestCase -->
  <testcase name="@BeforeMethod NavigateToCallBackAnnouncementPage" time="-1.567659250174E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod NavigateToCallBackAnnouncementPage -->
  <testcase name="@AfterMethod afterEachMethod" time="-1.567659250187E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachMethod -->
  <testcase name="@AfterMethod endTestCase" time="-1.567659250188E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod endTestCase -->
  <testcase name="@BeforeMethod startTestCase" time="-1.567659250195E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTestCase -->
  <testcase name="@BeforeMethod NavigateToCallBackAnnouncementPage" time="-1.567659250208E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod NavigateToCallBackAnnouncementPage -->
  <testcase name="@AfterMethod afterEachMethod" time="-1.567659250217E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachMethod -->
  <testcase name="@AfterMethod endTestCase" time="-1.56765925022E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod endTestCase -->
  <testcase name="@BeforeMethod startTestCase" time="-1.567659250225E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTestCase -->
  <testcase name="@BeforeMethod NavigateToCallBackAnnouncementPage" time="-1.567659250227E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod NavigateToCallBackAnnouncementPage -->
  <testcase name="@AfterMethod afterEachMethod" time="-1.567659250238E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachMethod -->
  <testcase name="@AfterMethod endTestCase" time="-1.567659250239E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod endTestCase -->
  <testcase name="@BeforeMethod startTestCase" time="-1.567659250247E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTestCase -->
  <testcase name="@BeforeMethod NavigateToCallBackAnnouncementPage" time="-1.567659250249E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod NavigateToCallBackAnnouncementPage -->
  <testcase name="@AfterMethod afterEachMethod" time="-1.567659250256E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachMethod -->
  <testcase name="@AfterMethod endTestCase" time="-1.567659250257E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod endTestCase -->
  <testcase name="@BeforeMethod startTestCase" time="-1.567659250261E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTestCase -->
  <testcase name="@BeforeMethod NavigateToCallBackAnnouncementPage" time="-1.567659250263E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod NavigateToCallBackAnnouncementPage -->
  <testcase name="@AfterMethod afterEachMethod" time="-1.567659250271E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachMethod -->
  <testcase name="@AfterMethod endTestCase" time="-1.567659250273E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod endTestCase -->
  <testcase name="@BeforeMethod startTestCase" time="-1.567659250301E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTestCase -->
  <testcase name="@BeforeMethod NavigateToCallBackAnnouncementPage" time="-1.567659250302E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod NavigateToCallBackAnnouncementPage -->
  <testcase name="@AfterMethod afterEachMethod" time="-1.567659250311E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachMethod -->
  <testcase name="@AfterMethod endTestCase" time="-1.567659250314E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod endTestCase -->
  <testcase name="@BeforeMethod startTestCase" time="-1.567659250321E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTestCase -->
  <testcase name="@BeforeMethod NavigateToCallBackAnnouncementPage" time="-1.567659250326E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod NavigateToCallBackAnnouncementPage -->
  <testcase name="@AfterMethod afterEachMethod" time="-1.567659250332E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachMethod -->
  <testcase name="@AfterMethod endTestCase" time="-1.567659250334E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod endTestCase -->
  <testcase name="@BeforeMethod startTestCase" time="-1.567659250337E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTestCase -->
  <testcase name="@BeforeMethod NavigateToCallBackAnnouncementPage" time="-1.567659250339E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod NavigateToCallBackAnnouncementPage -->
  <testcase name="@AfterMethod afterEachMethod" time="-1.567659250345E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachMethod -->
  <testcase name="@AfterMethod endTestCase" time="-1.567659250346E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod endTestCase -->
  <testcase name="@BeforeMethod startTestCase" time="-1.567659250348E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTestCase -->
  <testcase name="@BeforeMethod NavigateToCallBackAnnouncementPage" time="-1.567659250349E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod NavigateToCallBackAnnouncementPage -->
  <testcase name="@AfterMethod afterEachMethod" time="-1.567659250355E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachMethod -->
  <testcase name="@AfterMethod endTestCase" time="-1.567659250356E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod endTestCase -->
  <testcase name="@BeforeMethod startTestCase" time="-1.56765925036E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTestCase -->
  <testcase name="@BeforeMethod NavigateToCallBackAnnouncementPage" time="-1.567659250363E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod NavigateToCallBackAnnouncementPage -->
  <testcase name="@AfterMethod afterEachMethod" time="-1.567659250372E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachMethod -->
  <testcase name="@AfterMethod endTestCase" time="-1.567659250374E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod endTestCase -->
  <testcase name="@BeforeMethod startTestCase" time="-1.567659250381E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTestCase -->
  <testcase name="@BeforeMethod NavigateToCallBackAnnouncementPage" time="-1.567659250383E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod NavigateToCallBackAnnouncementPage -->
  <testcase name="@AfterMethod afterEachMethod" time="-1.567659250393E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachMethod -->
  <testcase name="@AfterMethod endTestCase" time="-1.567659250397E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod endTestCase -->
  <testcase name="@BeforeMethod startTestCase" time="-1.567659250402E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTestCase -->
  <testcase name="@BeforeMethod NavigateToCallBackAnnouncementPage" time="-1.567659250404E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod NavigateToCallBackAnnouncementPage -->
  <testcase name="@AfterMethod afterEachMethod" time="-1.56765925041E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachMethod -->
  <testcase name="@AfterMethod endTestCase" time="-1.567659250413E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod endTestCase -->
  <testcase name="@BeforeMethod startTestCase" time="-1.567659250415E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTestCase -->
  <testcase name="@BeforeMethod NavigateToCallBackAnnouncementPage" time="-1.567659250416E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod NavigateToCallBackAnnouncementPage -->
  <testcase name="@AfterMethod afterEachMethod" time="-1.567659250421E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachMethod -->
  <testcase name="@AfterMethod endTestCase" time="-1.567659250422E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod endTestCase -->
  <testcase name="@BeforeMethod startTestCase" time="-1.567659250425E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTestCase -->
  <testcase name="@BeforeMethod NavigateToCallBackAnnouncementPage" time="-1.567659250427E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod NavigateToCallBackAnnouncementPage -->
  <testcase name="@AfterMethod afterEachMethod" time="-1.567659250438E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachMethod -->
  <testcase name="@AfterMethod endTestCase" time="-1.567659250448E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod endTestCase -->
  <testcase name="@BeforeMethod startTestCase" time="-1.567659250456E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTestCase -->
  <testcase name="@BeforeMethod NavigateToCallBackAnnouncementPage" time="-1.567659250457E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod NavigateToCallBackAnnouncementPage -->
  <testcase name="@AfterMethod afterEachMethod" time="-1.567659250524E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachMethod -->
  <testcase name="@AfterMethod endTestCase" time="-1.567659250529E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod endTestCase -->
  <testcase name="@BeforeMethod startTestCase" time="-1.567659250541E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTestCase -->
  <testcase name="@BeforeMethod NavigateToCallBackAnnouncementPage" time="-1.567659250542E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod NavigateToCallBackAnnouncementPage -->
  <testcase name="@AfterMethod afterEachMethod" time="-1.567659250557E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachMethod -->
  <testcase name="@AfterMethod endTestCase" time="-1.567659250562E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod endTestCase -->
  <testcase name="@BeforeMethod startTestCase" time="-1.567659250565E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTestCase -->
  <testcase name="@BeforeMethod NavigateToCallBackAnnouncementPage" time="-1.567659250566E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod NavigateToCallBackAnnouncementPage -->
  <testcase name="@AfterMethod afterEachMethod" time="-1.567659250577E9" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachMethod -->
  <testcase name="@AfterMethod endTestCase" time="-1.567659250579E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod endTestCase -->
  <testcase name="@AfterClass tearDown" time="-1.567659250582E9" classname="com.tetherfi.test.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase name="CallbackAnnouncementPage" time="0.0" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- CallbackAnnouncementPage -->
  <testcase name="VerifyDropdownForAllTheColumns" time="0.0" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- VerifyDropdownForAllTheColumns -->
  <testcase name="VerifyColumnsHeaderEnable" time="0.0" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- VerifyColumnsHeaderEnable -->
  <testcase name="VerifyColumnsHeaderDisable" time="0.0" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- VerifyColumnsHeaderDisable -->
  <testcase name="AddNewCallbackAnnouncementCancelRecord" time="0.0" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- AddNewCallbackAnnouncementCancelRecord -->
  <testcase name="AddNewCallbackAnnouncementRecord" time="0.0" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- AddNewCallbackAnnouncementRecord -->
  <testcase name="VerifyAuditTrialReportForCreate" time="0.0" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- VerifyAuditTrialReportForCreate -->
  <testcase name="AddDuplicateCallBackAnnouncementRecord" time="0.0" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- AddDuplicateCallBackAnnouncementRecord -->
  <testcase name="AddNewCallbackAnnouncementWithoutWavFile" time="0.003" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- AddNewCallbackAnnouncementWithoutWavFile -->
  <testcase name="AddNewCallbackAnnouncementWithoutStartTime" time="0.0" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- AddNewCallbackAnnouncementWithoutStartTime -->
  <testcase name="AddNewCallbackAnnouncementWithoutEndTime" time="0.0" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- AddNewCallbackAnnouncementWithoutEndTime -->
  <testcase name="AddNewCallbackAnnouncementWithoutLanguage" time="0.0" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- AddNewCallbackAnnouncementWithoutLanguage -->
  <testcase name="EditCallBackAnnouncementRecord" time="0.0" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- EditCallBackAnnouncementRecord -->
  <testcase name="VerifyAuditTrialReportForUpdate" time="0.0" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- VerifyAuditTrialReportForUpdate -->
  <testcase name="EditWithoutModifyReasonCallbackannouncementRecord" time="0.0" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- EditWithoutModifyReasonCallbackannouncementRecord -->
  <testcase name="VerifyCancelButtonAtEditCallbackAnnouncementRecord" time="0.0" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- VerifyCancelButtonAtEditCallbackAnnouncementRecord -->
  <testcase name="searchPage" time="0.0" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- searchPage -->
  <testcase name="searchwithoutSearchTextbox" time="0.0" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- searchwithoutSearchTextbox -->
  <testcase name="DeleteWithoutDeleteReasonRecord" time="0.0" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- DeleteWithoutDeleteReasonRecord -->
  <testcase name="VerifyCancelButtonDeleteRecord" time="0.0" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- VerifyCancelButtonDeleteRecord -->
  <testcase name="DeleteCallbackAnnouncementRecord" time="0.0" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- DeleteCallbackAnnouncementRecord -->
  <testcase name="VerifyAuditTrialReportForDelete" time="0.0" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- VerifyAuditTrialReportForDelete -->
  <testcase name="ExportToExcel" time="0.0" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- ExportToExcel -->
  <testcase name="ExportToExcelData" time="0.0" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- ExportToExcelData -->
  <testcase name="SearchClearSearch" time="0.0" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- SearchClearSearch -->
  <testcase name="ExporttoExcelWithoutData" time="0.0" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- ExporttoExcelWithoutData -->
  <testcase name="SortingByAscending" time="0.0" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- SortingByAscending -->
  <testcase name="SortingByDescending" time="0.0" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
=======
  </testcase> <!-- SearchClearSearch -->
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="ExporttoExcelWithoutData" time="47.019">
    <failure type="java.lang.IndexOutOfBoundsException" message="Index 0 out-of-bounds for length 0">
      <![CDATA[java.lang.IndexOutOfBoundsException: Index 0 out-of-bounds for length 0
at java.base/jdk.internal.util.Preconditions.outOfBounds(Unknown Source)
at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Unknown Source)
at java.base/jdk.internal.util.Preconditions.checkIndex(Unknown Source)
at java.base/java.util.Objects.checkIndex(Unknown Source)
at java.base/java.util.ArrayList.get(Unknown Source)
at java.base/jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementListHandler.invoke(LocatingElementListHandler.java:39)
at com.sun.proxy.$Proxy15.get(Unknown Source)
at com.tetherfi.pages.CepEventMappingPage.ExporttoExcelWithoutData(CepEventMappingPage.java:597)
at com.tetherfi.test.CEPEventMappingTest.ExporttoExcelWithoutData(CEPEventMappingTest.java:293)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- ExporttoExcelWithoutData -->
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="SortingByAscending" time="5.393">
    <failure type="java.lang.AssertionError" message="did not expect to find [true] but found [false]">
      <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at com.tetherfi.test.CEPEventMappingTest.SortingByAscending(CEPEventMappingTest.java:302)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- SortingByAscending -->
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="SortingByDescending" time="5.619">
    <failure type="java.lang.AssertionError" message="did not expect to find [true] but found [false]">
      <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at com.tetherfi.test.CEPEventMappingTest.SortingByDescending(CEPEventMappingTest.java:310)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
>>>>>>> branch 'Palak3' of https://git.tetherfi.com:1443/tetherfi-product-qa/automation-testing/ocm/scripts.git
  </testcase> <!-- SortingByDescending -->
<<<<<<< HEAD
  <testcase name="GroupBy" time="0.0" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- GroupBy -->
  <testcase name="VerifyArrowMoveForPreviousAndNextPage" time="0.0" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- VerifyArrowMoveForPreviousAndNextPage -->
  <testcase name="VerifyArrowMoveForFirstAndLastPage" time="0.0" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- VerifyArrowMoveForFirstAndLastPage -->
  <testcase name="VerifyTotalNumberOfItemsPerPageDetails" time="0.0" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- VerifyTotalNumberOfItemsPerPageDetails -->
  <testcase name="VerifyNumberOfItemsPerPageSelection" time="0.0" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- VerifyNumberOfItemsPerPageSelection -->
  <testcase name="database" time="0.001" classname="com.tetherfi.test.ivr.CallBackAnnouncementTest">
    <skipped/>
  </testcase> <!-- database -->
=======
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="GroupBy" time="3.135"/>
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="VerifyArrowMoveForPreviousAndNextPage" time="0.028"/>
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="VerifyArrowMoveForFirstAndLastPage" time="0.036"/>
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="VerifyTotalNumberOfItemsPerPageDetails" time="0.068"/>
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="VerifyNumberOfItemsPerPageSelection" time="2.569">
    <failure type="java.lang.AssertionError" message="item per page assertion failed did not expect to find [true] but found [false]">
      <![CDATA[java.lang.AssertionError: item per page assertion failed did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at com.tetherfi.test.CEPEventMappingTest.VerifyNumberOfItemsPerPageSelection(CEPEventMappingTest.java:343)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- VerifyNumberOfItemsPerPageSelection -->
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="searchwithoutSearchTextbox" time="6.044"/>
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="database" time="2.985"/>
>>>>>>> branch 'Palak3' of https://git.tetherfi.com:1443/tetherfi-product-qa/automation-testing/ocm/scripts.git
</testsuite> <!-- Default test -->
