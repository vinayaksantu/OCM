<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="5" ignored="2" total="24" passed="17">
  <reporter-output>
  </reporter-output>
  <suite name="OCM Reports Test Automation" duration-ms="858933" started-at="2021-05-17T12:42:32 IST" finished-at="2021-05-17T12:56:51 IST">
    <groups>
    </groups>
    <test name="ReportsRegression" duration-ms="858933" started-at="2021-05-17T12:42:32 IST" finished-at="2021-05-17T12:56:51 IST">
      <class name="com.tetherfi.test.reports.OCMAgentAuxReportTest">
        <test-method status="PASS" signature="openApplication()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="openApplication" is-config="true" duration-ms="14767" started-at="2021-05-17T12:42:32 IST" finished-at="2021-05-17T12:42:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="2" started-at="2021-05-17T12:42:47 IST" finished-at="2021-05-17T12:42:47 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.ShowReport() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="1883" started-at="2021-05-17T12:42:47 IST" finished-at="2021-05-17T12:42:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="PASS" signature="ShowReport()[pri:1, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="ShowReport" duration-ms="21891" started-at="2021-05-17T12:42:49 IST" description="To verify Show Report for Single Date" finished-at="2021-05-17T12:43:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShowReport -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="694" started-at="2021-05-17T12:43:11 IST" finished-at="2021-05-17T12:43:11 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.ShowReport() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="1" started-at="2021-05-17T12:43:11 IST" finished-at="2021-05-17T12:43:11 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.ShowReport() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="0" started-at="2021-05-17T12:43:11 IST" finished-at="2021-05-17T12:43:11 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.ShowReportInNewPage() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="3708" started-at="2021-05-17T12:43:11 IST" finished-at="2021-05-17T12:43:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="PASS" signature="ShowReportInNewPage()[pri:2, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="ShowReportInNewPage" duration-ms="20571" started-at="2021-05-17T12:43:15 IST" description="To verify Show Report in New Tab for Single Date" finished-at="2021-05-17T12:43:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShowReportInNewPage -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="544" started-at="2021-05-17T12:43:36 IST" finished-at="2021-05-17T12:43:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.ShowReportInNewPage() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="1" started-at="2021-05-17T12:43:36 IST" finished-at="2021-05-17T12:43:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.ShowReportInNewPage() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="0" started-at="2021-05-17T12:43:36 IST" finished-at="2021-05-17T12:43:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.database() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="2217" started-at="2021-05-17T12:43:36 IST" finished-at="2021-05-17T12:43:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="FAIL" signature="database()[pri:3, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="database" duration-ms="33105" started-at="2021-05-17T12:43:38 IST" description="To verify Agent Aux report UI data against DB" finished-at="2021-05-17T12:44:12 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[UI and Database data mismatch did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: UI and Database data mismatch did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at com.tetherfi.test.reports.OCMAgentAuxReportTest.database(OCMAgentAuxReportTest.java:69)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- database -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="830" started-at="2021-05-17T12:44:12 IST" finished-at="2021-05-17T12:44:12 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.database() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="0" started-at="2021-05-17T12:44:12 IST" finished-at="2021-05-17T12:44:12 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.database() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="0" started-at="2021-05-17T12:44:12 IST" finished-at="2021-05-17T12:44:12 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.verifyAdvancedSearchIsEqualTo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="3877" started-at="2021-05-17T12:44:12 IST" finished-at="2021-05-17T12:44:16 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="PASS" signature="verifyAdvancedSearchIsEqualTo()[pri:4, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="verifyAdvancedSearchIsEqualTo" duration-ms="33009" started-at="2021-05-17T12:44:16 IST" description="To verify Advanced search Is equal to Criteria" finished-at="2021-05-17T12:44:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAdvancedSearchIsEqualTo -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="842" started-at="2021-05-17T12:44:49 IST" finished-at="2021-05-17T12:44:50 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.verifyAdvancedSearchIsEqualTo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="1" started-at="2021-05-17T12:44:50 IST" finished-at="2021-05-17T12:44:50 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.verifyAdvancedSearchIsNotEqualTo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="0" started-at="2021-05-17T12:44:50 IST" finished-at="2021-05-17T12:44:50 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.verifyAdvancedSearchIsEqualTo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="3482" started-at="2021-05-17T12:44:50 IST" finished-at="2021-05-17T12:44:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="PASS" signature="verifyAdvancedSearchIsNotEqualTo()[pri:5, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="verifyAdvancedSearchIsNotEqualTo" duration-ms="28564" started-at="2021-05-17T12:44:54 IST" description="To verify Advanced search Is not equal to search Criteria" finished-at="2021-05-17T12:45:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAdvancedSearchIsNotEqualTo -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="734" started-at="2021-05-17T12:45:22 IST" finished-at="2021-05-17T12:45:23 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.verifyAdvancedSearchIsNotEqualTo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="1" started-at="2021-05-17T12:45:23 IST" finished-at="2021-05-17T12:45:23 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.verifyAdvancedSearchIsNotEqualTo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="4246" started-at="2021-05-17T12:45:23 IST" finished-at="2021-05-17T12:45:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="0" started-at="2021-05-17T12:45:23 IST" finished-at="2021-05-17T12:45:23 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.verifyAdvancedSearchcontains() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="verifyAdvancedSearchcontains()[pri:6, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="verifyAdvancedSearchcontains" duration-ms="28363" started-at="2021-05-17T12:45:27 IST" description="To verify Advanced search Contains search Criteria" finished-at="2021-05-17T12:45:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAdvancedSearchcontains -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="720" started-at="2021-05-17T12:45:56 IST" finished-at="2021-05-17T12:45:56 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.verifyAdvancedSearchcontains() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="1" started-at="2021-05-17T12:45:56 IST" finished-at="2021-05-17T12:45:56 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.verifyAdvancedSearchcontains() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="7159" started-at="2021-05-17T12:45:56 IST" finished-at="2021-05-17T12:46:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="0" started-at="2021-05-17T12:45:56 IST" finished-at="2021-05-17T12:45:56 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.verifyAdvancedSearchDoesnotcontains() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="verifyAdvancedSearchDoesnotcontains()[pri:7, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="verifyAdvancedSearchDoesnotcontains" duration-ms="27934" started-at="2021-05-17T12:46:03 IST" description="To verify Advanced search Does not Contain Criteria" finished-at="2021-05-17T12:46:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAdvancedSearchDoesnotcontains -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="804" started-at="2021-05-17T12:46:31 IST" finished-at="2021-05-17T12:46:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.verifyAdvancedSearchDoesnotcontains() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="0" started-at="2021-05-17T12:46:32 IST" finished-at="2021-05-17T12:46:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.verifyAdvancedSearchDoesnotcontains() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="0" started-at="2021-05-17T12:46:32 IST" finished-at="2021-05-17T12:46:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.verifyAdvancedSearchStartswith() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="3740" started-at="2021-05-17T12:46:32 IST" finished-at="2021-05-17T12:46:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="FAIL" signature="verifyAdvancedSearchStartswith()[pri:8, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="verifyAdvancedSearchStartswith" duration-ms="28033" started-at="2021-05-17T12:46:36 IST" description="To verify Advanced search Starts with Criteria" finished-at="2021-05-17T12:47:04 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at com.tetherfi.test.reports.OCMAgentAuxReportTest.verifyAdvancedSearchStartswith(OCMAgentAuxReportTest.java:125)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAdvancedSearchStartswith -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="703" started-at="2021-05-17T12:47:04 IST" finished-at="2021-05-17T12:47:05 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.verifyAdvancedSearchStartswith() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="1" started-at="2021-05-17T12:47:05 IST" finished-at="2021-05-17T12:47:05 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.verifyAdvancedSearchStartswith() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="4132" started-at="2021-05-17T12:47:05 IST" finished-at="2021-05-17T12:47:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="0" started-at="2021-05-17T12:47:05 IST" finished-at="2021-05-17T12:47:05 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.verifyAdvancedSearchEndswith() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="FAIL" signature="verifyAdvancedSearchEndswith()[pri:9, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="verifyAdvancedSearchEndswith" duration-ms="27144" started-at="2021-05-17T12:47:09 IST" description="To verify Advanced search Ends with Criteria" finished-at="2021-05-17T12:47:36 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at com.tetherfi.test.reports.OCMAgentAuxReportTest.verifyAdvancedSearchEndswith(OCMAgentAuxReportTest.java:136)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAdvancedSearchEndswith -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="675" started-at="2021-05-17T12:47:36 IST" finished-at="2021-05-17T12:47:37 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.verifyAdvancedSearchEndswith() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="0" started-at="2021-05-17T12:47:37 IST" finished-at="2021-05-17T12:47:37 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.verifyAdvancedSearchEndswith() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="1" started-at="2021-05-17T12:47:37 IST" finished-at="2021-05-17T12:47:37 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.verifyAdvancedSearchANDCriteria() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="4460" started-at="2021-05-17T12:47:37 IST" finished-at="2021-05-17T12:47:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="FAIL" signature="verifyAdvancedSearchANDCriteria()[pri:10, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="verifyAdvancedSearchANDCriteria" duration-ms="38568" started-at="2021-05-17T12:47:41 IST" description="To verify Advanced search with AND Search Criteria" finished-at="2021-05-17T12:48:20 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at com.tetherfi.test.reports.OCMAgentAuxReportTest.verifyAdvancedSearchANDCriteria(OCMAgentAuxReportTest.java:147)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAdvancedSearchANDCriteria -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="1335" started-at="2021-05-17T12:48:20 IST" finished-at="2021-05-17T12:48:21 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.verifyAdvancedSearchANDCriteria() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="0" started-at="2021-05-17T12:48:21 IST" finished-at="2021-05-17T12:48:21 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.verifyAdvancedSearchANDCriteria() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="0" started-at="2021-05-17T12:48:21 IST" finished-at="2021-05-17T12:48:21 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.verifyAdvancedSearchORCriteria() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="5619" started-at="2021-05-17T12:48:21 IST" finished-at="2021-05-17T12:48:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="PASS" signature="verifyAdvancedSearchORCriteria()[pri:11, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="verifyAdvancedSearchORCriteria" duration-ms="38115" started-at="2021-05-17T12:48:27 IST" description="To verify Advanced search with OR Search Criteria" finished-at="2021-05-17T12:49:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAdvancedSearchORCriteria -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="857" started-at="2021-05-17T12:49:05 IST" finished-at="2021-05-17T12:49:06 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.verifyAdvancedSearchORCriteria() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="0" started-at="2021-05-17T12:49:06 IST" finished-at="2021-05-17T12:49:06 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.ClearfiltersAdvSrch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="3546" started-at="2021-05-17T12:49:06 IST" finished-at="2021-05-17T12:49:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="0" started-at="2021-05-17T12:49:06 IST" finished-at="2021-05-17T12:49:06 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.verifyAdvancedSearchORCriteria() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="ClearfiltersAdvSrch()[pri:12, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="ClearfiltersAdvSrch" duration-ms="19837" started-at="2021-05-17T12:49:09 IST" description="Clear filters for Advance search" finished-at="2021-05-17T12:49:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClearfiltersAdvSrch -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="611" started-at="2021-05-17T12:49:29 IST" finished-at="2021-05-17T12:49:30 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.ClearfiltersAdvSrch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="0" started-at="2021-05-17T12:49:30 IST" finished-at="2021-05-17T12:49:30 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.ClearfiltersAdvSrch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="0" started-at="2021-05-17T12:49:30 IST" finished-at="2021-05-17T12:49:30 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.ClearAll() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="1667" started-at="2021-05-17T12:49:30 IST" finished-at="2021-05-17T12:49:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="PASS" signature="ClearAll()[pri:13, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="ClearAll" duration-ms="13993" started-at="2021-05-17T12:49:31 IST" description="Report page clear All button " finished-at="2021-05-17T12:49:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClearAll -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="672" started-at="2021-05-17T12:49:45 IST" finished-at="2021-05-17T12:49:46 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.ClearAll() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="1" started-at="2021-05-17T12:49:46 IST" finished-at="2021-05-17T12:49:46 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.ClearAll() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="1" started-at="2021-05-17T12:49:46 IST" finished-at="2021-05-17T12:49:46 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.OCMWindow() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="2745" started-at="2021-05-17T12:49:46 IST" finished-at="2021-05-17T12:49:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="PASS" signature="OCMWindow()[pri:14, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="OCMWindow" duration-ms="20971" started-at="2021-05-17T12:49:49 IST" description="To verify Maximize and minimize OCM Screen" finished-at="2021-05-17T12:50:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OCMWindow -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="733" started-at="2021-05-17T12:50:10 IST" finished-at="2021-05-17T12:50:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.OCMWindow() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="1" started-at="2021-05-17T12:50:10 IST" finished-at="2021-05-17T12:50:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.OCMWindow() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="1" started-at="2021-05-17T12:50:10 IST" finished-at="2021-05-17T12:50:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.VerifyDropdownForAllTheColumns() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="3715" started-at="2021-05-17T12:50:10 IST" finished-at="2021-05-17T12:50:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="PASS" signature="VerifyDropdownForAllTheColumns()[pri:15, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="VerifyDropdownForAllTheColumns" duration-ms="29782" started-at="2021-05-17T12:50:14 IST" description="Verify dropdown of all the column headers" finished-at="2021-05-17T12:50:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyDropdownForAllTheColumns -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="674" started-at="2021-05-17T12:50:44 IST" finished-at="2021-05-17T12:50:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.VerifyDropdownForAllTheColumns() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="1" started-at="2021-05-17T12:50:44 IST" finished-at="2021-05-17T12:50:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.VerifyColumnsHeaderEnable() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="0" started-at="2021-05-17T12:50:44 IST" finished-at="2021-05-17T12:50:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.VerifyDropdownForAllTheColumns() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="4644" started-at="2021-05-17T12:50:44 IST" finished-at="2021-05-17T12:50:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="PASS" signature="VerifyColumnsHeaderEnable()[pri:16, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="VerifyColumnsHeaderEnable" duration-ms="24842" started-at="2021-05-17T12:50:49 IST" description="Verify column header Enable" finished-at="2021-05-17T12:51:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyColumnsHeaderEnable -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="694" started-at="2021-05-17T12:51:14 IST" finished-at="2021-05-17T12:51:15 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.VerifyColumnsHeaderEnable() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="1" started-at="2021-05-17T12:51:15 IST" finished-at="2021-05-17T12:51:15 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.VerifyColumnsHeaderEnable() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="1" started-at="2021-05-17T12:51:15 IST" finished-at="2021-05-17T12:51:15 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.VerifyColumnsHeaderDisable() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="4088" started-at="2021-05-17T12:51:15 IST" finished-at="2021-05-17T12:51:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="PASS" signature="VerifyColumnsHeaderDisable()[pri:17, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="VerifyColumnsHeaderDisable" duration-ms="24225" started-at="2021-05-17T12:51:19 IST" description="Verify column header disable" finished-at="2021-05-17T12:51:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyColumnsHeaderDisable -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="768" started-at="2021-05-17T12:51:43 IST" finished-at="2021-05-17T12:51:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.VerifyColumnsHeaderDisable() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="0" started-at="2021-05-17T12:51:44 IST" finished-at="2021-05-17T12:51:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.VerifyColumnsHeaderDisable() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="0" started-at="2021-05-17T12:51:44 IST" finished-at="2021-05-17T12:51:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.VerifyArrowMoveForPreviousAndNextPage() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="3404" started-at="2021-05-17T12:51:44 IST" finished-at="2021-05-17T12:51:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="PASS" signature="VerifyArrowMoveForPreviousAndNextPage()[pri:18, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="VerifyArrowMoveForPreviousAndNextPage" duration-ms="18898" started-at="2021-05-17T12:51:47 IST" description="Verify Pagination, Move to previous and next page" finished-at="2021-05-17T12:52:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyArrowMoveForPreviousAndNextPage -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="758" started-at="2021-05-17T12:52:06 IST" finished-at="2021-05-17T12:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.VerifyArrowMoveForPreviousAndNextPage() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="0" started-at="2021-05-17T12:52:07 IST" finished-at="2021-05-17T12:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.VerifyArrowMoveForPreviousAndNextPage() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="3984" started-at="2021-05-17T12:52:07 IST" finished-at="2021-05-17T12:52:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="0" started-at="2021-05-17T12:52:07 IST" finished-at="2021-05-17T12:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.VerifyArrowMoveForFirstAndLastPage() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="VerifyArrowMoveForFirstAndLastPage()[pri:19, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="VerifyArrowMoveForFirstAndLastPage" duration-ms="20904" started-at="2021-05-17T12:52:11 IST" description="Verify Pagination, Move to First and Last Page" finished-at="2021-05-17T12:52:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyArrowMoveForFirstAndLastPage -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="729" started-at="2021-05-17T12:52:32 IST" finished-at="2021-05-17T12:52:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.VerifyArrowMoveForFirstAndLastPage() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="0" started-at="2021-05-17T12:52:32 IST" finished-at="2021-05-17T12:52:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.VerifyArrowMoveForFirstAndLastPage() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="3989" started-at="2021-05-17T12:52:32 IST" finished-at="2021-05-17T12:52:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="0" started-at="2021-05-17T12:52:32 IST" finished-at="2021-05-17T12:52:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.VerifyTotalNumberOfItemsPerPageDetails() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="VerifyTotalNumberOfItemsPerPageDetails()[pri:20, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="VerifyTotalNumberOfItemsPerPageDetails" duration-ms="18547" started-at="2021-05-17T12:52:36 IST" description="Verify total number of items per page" finished-at="2021-05-17T12:52:55 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyTotalNumberOfItemsPerPageDetails -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="727" started-at="2021-05-17T12:52:55 IST" finished-at="2021-05-17T12:52:56 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.VerifyTotalNumberOfItemsPerPageDetails() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="0" started-at="2021-05-17T12:52:56 IST" finished-at="2021-05-17T12:52:56 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.VerifyTotalNumberOfItemsPerPageDetails() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="0" started-at="2021-05-17T12:52:56 IST" finished-at="2021-05-17T12:52:56 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.VerifySearchByFeature() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="4401" started-at="2021-05-17T12:52:56 IST" finished-at="2021-05-17T12:53:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="PASS" signature="VerifySearchByFeature()[pri:22, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="VerifySearchByFeature" duration-ms="31456" started-at="2021-05-17T12:53:00 IST" description="To verify Search by feature using Agent Name" finished-at="2021-05-17T12:53:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifySearchByFeature -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="775" started-at="2021-05-17T12:53:32 IST" finished-at="2021-05-17T12:53:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.VerifySearchByFeature() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="0" started-at="2021-05-17T12:53:32 IST" finished-at="2021-05-17T12:53:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.VerifySearchByFeature() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="0" started-at="2021-05-17T12:53:32 IST" finished-at="2021-05-17T12:53:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.VerifySearchIsEqualTo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="3770" started-at="2021-05-17T12:53:32 IST" finished-at="2021-05-17T12:53:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="FAIL" signature="VerifySearchIsEqualTo()[pri:23, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="VerifySearchIsEqualTo" duration-ms="112993" started-at="2021-05-17T12:53:36 IST" description="To Verify the search Is equal to criteria" finished-at="2021-05-17T12:55:29 IST">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.cssSelector: .fa-search' (tried for 30 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.cssSelector: .fa-search' (tried for 30 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at com.tetherfi.pages.BasePage.waitUntilWebElementIsVisible(BasePage.java:129)
at com.tetherfi.pages.BasePage.selectWebElement(BasePage.java:196)
at com.tetherfi.pages.OCMAgentAuxReportPage.verifySearchIsEqualTo(OCMAgentAuxReportPage.java:1284)
at com.tetherfi.test.reports.OCMAgentAuxReportTest.VerifySearchIsEqualTo(OCMAgentAuxReportTest.java:290)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":".fa-search"}
  (Session info: chrome=90.0.4430.212)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-NKH1C2HF', ip: '192.168.50.18', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.212, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\AMITHA~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:57844}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: c9e5e1a093be22e78e6b6b91ddd53431
*** Element info: {Using=css selector, value=.fa-search}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByCssSelector(RemoteWebDriver.java:420)
at org.openqa.selenium.By$ByCssSelector.findElement(By.java:431)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy11.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:314)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:43)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:300)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:297)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
... 32 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifySearchIsEqualTo -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="21159" started-at="2021-05-17T12:55:29 IST" finished-at="2021-05-17T12:55:50 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.VerifySearchIsEqualTo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="1" started-at="2021-05-17T12:55:50 IST" finished-at="2021-05-17T12:55:50 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.VerifySearchIsNotEqualTo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="0" started-at="2021-05-17T12:55:50 IST" finished-at="2021-05-17T12:55:50 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.reports.OCMAgentAuxReportTest.VerifySearchIsEqualTo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="FAIL" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="60618" started-at="2021-05-17T12:55:50 IST" finished-at="2021-05-17T12:56:51 IST">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.cssSelector: .navbar-header span' (tried for 30 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.cssSelector: .navbar-header span' (tried for 30 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at com.tetherfi.pages.BasePage.waitUntilWebElementIsVisible(BasePage.java:129)
at com.tetherfi.pages.BasePage.selectWebElement(BasePage.java:196)
at com.tetherfi.pages.HomePage.navigateToOCMIconImg(HomePage.java:70)
at com.tetherfi.test.reports.OCMAgentAuxReportTest.NavigateToOcmReportsPage(OCMAgentAuxReportTest.java:32)
at sun.reflect.GeneratedMethodAccessor10.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:340)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:294)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:683)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:510)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":".navbar-header span"}
  (Session info: chrome=90.0.4430.212)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-NKH1C2HF', ip: '192.168.50.18', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.212, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\AMITHA~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:57844}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: c9e5e1a093be22e78e6b6b91ddd53431
*** Element info: {Using=css selector, value=.navbar-header span}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByCssSelector(RemoteWebDriver.java:420)
at org.openqa.selenium.By$ByCssSelector.findElement(By.java:431)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy11.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:314)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:43)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:300)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:297)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
... 35 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="SKIP" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="-1621236411412" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="SKIP" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="-1621236411412" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="SKIP" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="-1621236411412" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="SKIP" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="-1621236411412" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="SKIP" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="-1621236411412" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="SKIP" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="-1621236411412" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="SKIP" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="-1621236411412" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="SKIP" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="-1621236411412" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="SKIP" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="-1621236411412" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="SKIP" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="-1621236411412" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="SKIP" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="-1621236411412" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="SKIP" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="-1621236411412" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="SKIP" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="-1621236411428" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="SKIP" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="-1621236411428" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="SKIP" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="-1621236411428" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="SKIP" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="-1621236411428" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="SKIP" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="-1621236411428" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="SKIP" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="-1621236411428" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="SKIP" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="-1621236411428" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="SKIP" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="-1621236411428" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="SKIP" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="-1621236411428" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="SKIP" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="-1621236411444" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="SKIP" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="-1621236411444" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="SKIP" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="-1621236411444" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="SKIP" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="-1621236411444" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="SKIP" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="-1621236411444" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="SKIP" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="-1621236411444" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="SKIP" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="-1621236411444" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="SKIP" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="-1621236411444" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="SKIP" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="-1621236411444" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="SKIP" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="-1621236411444" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="SKIP" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="-1621236411444" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="SKIP" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="-1621236411459" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="SKIP" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="-1621236411459" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="SKIP" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="-1621236411459" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="SKIP" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="-1621236411459" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="SKIP" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="-1621236411459" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="SKIP" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="-1621236411459" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="SKIP" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="-1621236411459" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="SKIP" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="-1621236411459" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="SKIP" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="-1621236411459" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="SKIP" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="-1621236411459" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="SKIP" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="-1621236411459" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="SKIP" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="-1621236411459" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="SKIP" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="-1621236411475" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="SKIP" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="-1621236411475" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="SKIP" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="-1621236411475" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="SKIP" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="-1621236411475" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="SKIP" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="-1621236411475" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="SKIP" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="-1621236411475" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="SKIP" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="-1621236411475" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="SKIP" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="-1621236411475" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="SKIP" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="-1621236411475" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="SKIP" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="-1621236411475" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="SKIP" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="-1621236411475" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="SKIP" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="-1621236411475" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="SKIP" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="-1621236411490" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="SKIP" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="-1621236411490" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="SKIP" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="-1621236411490" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="SKIP" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="-1621236411490" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="SKIP" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="-1621236411490" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="SKIP" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="-1621236411490" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="SKIP" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="-1621236411490" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="SKIP" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="-1621236411490" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="SKIP" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="-1621236411490" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="SKIP" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="-1621236411490" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="SKIP" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="-1621236411506" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="SKIP" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="-1621236411506" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="SKIP" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="-1621236411506" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="SKIP" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="-1621236411506" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="SKIP" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="-1621236411506" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="SKIP" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="-1621236411506" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="SKIP" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="-1621236411506" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="SKIP" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="-1621236411506" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="SKIP" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="-1621236411506" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="SKIP" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="-1621236411506" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="SKIP" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="-1621236411506" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="SKIP" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="-1621236411522" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="SKIP" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="-1621236411522" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="SKIP" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="-1621236411522" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="SKIP" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="-1621236411522" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="SKIP" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="-1621236411522" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="SKIP" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="-1621236411522" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="SKIP" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="-1621236411522" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="SKIP" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="-1621236411522" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="SKIP" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="-1621236411522" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="SKIP" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="-1621236411537" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="SKIP" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="-1621236411537" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="SKIP" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="-1621236411537" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="SKIP" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="-1621236411537" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="SKIP" signature="NavigateToOcmReportsPage()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="NavigateToOcmReportsPage" is-config="true" duration-ms="-1621236411553" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToOcmReportsPage -->
        <test-method status="SKIP" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="endTestCase" is-config="true" duration-ms="-1621236411553" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="SKIP" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="afterEachMethod" is-config="true" duration-ms="-1621236411553" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="SKIP" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="startTestCase" is-config="true" duration-ms="-1621236411553" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:com.tetherfi.test.reports.OCMAgentAuxReportTest@285005b8]" name="tearDown" is-config="true" duration-ms="-1621236411553" started-at="2021-05-17T12:56:51 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.tetherfi.test.reports.OCMAgentAuxReportTest -->
    </test> <!-- ReportsRegression -->
  </suite> <!-- OCM Reports Test Automation -->
</testng-results>
