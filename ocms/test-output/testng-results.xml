<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="15" passed="8" failed="7" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-03-30T09:28:15 IST" name="Default suite" finished-at="2020-03-30T09:32:25 IST" duration-ms="250111">
    <groups>
    </groups>
    <test started-at="2020-03-30T09:28:15 IST" name="Default test" finished-at="2020-03-30T09:32:25 IST" duration-ms="250111">
      <class name="com.tetherfi.test.fax.FaxAddressBookTest">
        <test-method is-config="true" signature="openApplication()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:28:15 IST" name="openApplication" finished-at="2020-03-30T09:28:46 IST" duration-ms="31101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:28:46 IST" name="startTestCase" finished-at="2020-03-30T09:28:46 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewFaxAddressBookRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:28:46 IST" name="NavigatetoFaxAddressPage" finished-at="2020-03-30T09:28:51 IST" duration-ms="4918" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="AddNewFaxAddressBookRecord()[pri:13, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:28:51 IST" name="AddNewFaxAddressBookRecord" finished-at="2020-03-30T09:28:58 IST" duration-ms="6673" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewFaxAddressBookRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:28:58 IST" name="afterEachMethod" finished-at="2020-03-30T09:28:59 IST" duration-ms="766" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewFaxAddressBookRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:28:59 IST" name="endTestCase" finished-at="2020-03-30T09:28:59 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewFaxAddressBookRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:28:59 IST" name="NavigatetoFaxAddressPage" finished-at="2020-03-30T09:29:06 IST" duration-ms="7063" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:28:59 IST" name="startTestCase" finished-at="2020-03-30T09:28:59 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrailReportForAddressCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="VerifyAuditTrailReportForAddressCreate()[pri:14, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:29:06 IST" name="VerifyAuditTrailReportForAddressCreate" finished-at="2020-03-30T09:29:39 IST" depends-on-methods="com.tetherfi.test.fax.FaxAddressBookTest.AddNewFaxAddressBookRecord" duration-ms="33582" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrailReportForAddressCreate -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:29:39 IST" name="afterEachMethod" finished-at="2020-03-30T09:29:41 IST" duration-ms="1932" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrailReportForAddressCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:29:41 IST" name="endTestCase" finished-at="2020-03-30T09:29:41 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrailReportForAddressCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:29:41 IST" name="startTestCase" finished-at="2020-03-30T09:29:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewDuplicateRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:29:41 IST" name="NavigatetoFaxAddressPage" finished-at="2020-03-30T09:29:47 IST" duration-ms="5512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="AddNewDuplicateRecord()[pri:15, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:29:47 IST" name="AddNewDuplicateRecord" finished-at="2020-03-30T09:29:51 IST" duration-ms="4802" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewDuplicateRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:29:51 IST" name="afterEachMethod" finished-at="2020-03-30T09:29:53 IST" duration-ms="1720" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewDuplicateRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:29:53 IST" name="endTestCase" finished-at="2020-03-30T09:29:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewDuplicateRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:29:53 IST" name="startTestCase" finished-at="2020-03-30T09:29:53 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewEmptyRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:29:53 IST" name="NavigatetoFaxAddressPage" finished-at="2020-03-30T09:29:59 IST" duration-ms="5754" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="AddNewEmptyRecord()[pri:16, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:29:59 IST" name="AddNewEmptyRecord" finished-at="2020-03-30T09:30:00 IST" duration-ms="1000" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Please Provide FaxLine, Name, Recepient] but found [Please Provide FaxLine, Name, Recipient]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Please Provide FaxLine, Name, Recepient] but found [Please Provide FaxLine, Name, Recipient]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at com.tetherfi.test.fax.FaxAddressBookTest.AddNewEmptyRecord(FaxAddressBookTest.java:205)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewEmptyRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:30:00 IST" name="afterEachMethod" finished-at="2020-03-30T09:30:02 IST" duration-ms="1751" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewEmptyRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:30:02 IST" name="endTestCase" finished-at="2020-03-30T09:30:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewEmptyRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:30:02 IST" name="startTestCase" finished-at="2020-03-30T09:30:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewRecordWithoutFaxLine() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:30:02 IST" name="NavigatetoFaxAddressPage" finished-at="2020-03-30T09:30:08 IST" duration-ms="5900" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="AddNewRecordWithoutFaxLine()[pri:17, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:30:08 IST" name="AddNewRecordWithoutFaxLine" finished-at="2020-03-30T09:30:13 IST" duration-ms="5225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewRecordWithoutFaxLine -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:30:13 IST" name="afterEachMethod" finished-at="2020-03-30T09:30:15 IST" duration-ms="1840" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewRecordWithoutFaxLine() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:30:15 IST" name="endTestCase" finished-at="2020-03-30T09:30:15 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewRecordWithoutFaxLine() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:30:15 IST" name="NavigatetoFaxAddressPage" finished-at="2020-03-30T09:30:21 IST" duration-ms="5871" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:30:15 IST" name="startTestCase" finished-at="2020-03-30T09:30:15 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewRecordWithoutName() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="AddNewRecordWithoutName()[pri:18, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:30:21 IST" name="AddNewRecordWithoutName" finished-at="2020-03-30T09:30:26 IST" duration-ms="5209" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewRecordWithoutName -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:30:26 IST" name="afterEachMethod" finished-at="2020-03-30T09:30:26 IST" duration-ms="592" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewRecordWithoutName() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:30:26 IST" name="startTestCase" finished-at="2020-03-30T09:30:26 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewRecordWithoutRecipients() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:30:26 IST" name="endTestCase" finished-at="2020-03-30T09:30:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewRecordWithoutName() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:30:26 IST" name="NavigatetoFaxAddressPage" finished-at="2020-03-30T09:30:33 IST" duration-ms="6438" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="AddNewRecordWithoutRecipients()[pri:19, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:30:33 IST" name="AddNewRecordWithoutRecipients" finished-at="2020-03-30T09:30:35 IST" duration-ms="2172" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewRecordWithoutRecipients -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:30:35 IST" name="afterEachMethod" finished-at="2020-03-30T09:30:37 IST" duration-ms="1947" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewRecordWithoutRecipients() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:30:37 IST" name="endTestCase" finished-at="2020-03-30T09:30:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewRecordWithoutRecipients() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:30:37 IST" name="startTestCase" finished-at="2020-03-30T09:30:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.ExportToExcel() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:30:37 IST" name="NavigatetoFaxAddressPage" finished-at="2020-03-30T09:30:43 IST" duration-ms="5919" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="ExportToExcel()[pri:20, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:30:43 IST" name="ExportToExcel" finished-at="2020-03-30T09:30:46 IST" duration-ms="3360" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ExportToExcel -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:30:46 IST" name="afterEachMethod" finished-at="2020-03-30T09:30:47 IST" duration-ms="438" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.ExportToExcel() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:30:47 IST" name="startTestCase" finished-at="2020-03-30T09:30:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.ExportToExcelData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:30:47 IST" name="NavigatetoFaxAddressPage" finished-at="2020-03-30T09:30:54 IST" duration-ms="7750" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:30:47 IST" name="endTestCase" finished-at="2020-03-30T09:30:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.ExportToExcel() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method signature="ExportToExcelData()[pri:21, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:30:54 IST" name="ExportToExcelData" finished-at="2020-03-30T09:30:55 IST" duration-ms="373" status="FAIL">
          <exception class="java.lang.ArrayIndexOutOfBoundsException">
            <message>
              <![CDATA[1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArrayIndexOutOfBoundsException: 1
at com.tetherfi.pages.FaxAddressBookPage.getdata(FaxAddressBookPage.java:380)
at com.tetherfi.pages.FaxAddressBookPage.verifyexportToExcelSheet(FaxAddressBookPage.java:318)
at com.tetherfi.test.fax.FaxAddressBookTest.ExportToExcelData(FaxAddressBookTest.java:253)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArrayIndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ExportToExcelData -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:30:55 IST" name="afterEachMethod" finished-at="2020-03-30T09:30:56 IST" duration-ms="1594" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.ExportToExcelData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:30:56 IST" name="endTestCase" finished-at="2020-03-30T09:30:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.ExportToExcelData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:30:56 IST" name="startTestCase" finished-at="2020-03-30T09:30:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.SortingByAscending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:30:56 IST" name="NavigatetoFaxAddressPage" finished-at="2020-03-30T09:31:02 IST" duration-ms="5405" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="SortingByAscending()[pri:22, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:31:02 IST" name="SortingByAscending" finished-at="2020-03-30T09:31:10 IST" duration-ms="7899" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at com.tetherfi.test.fax.FaxAddressBookTest.SortingByAscending(FaxAddressBookTest.java:263)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SortingByAscending -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:31:10 IST" name="afterEachMethod" finished-at="2020-03-30T09:31:11 IST" duration-ms="1739" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.SortingByAscending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:31:11 IST" name="endTestCase" finished-at="2020-03-30T09:31:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.SortingByAscending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:31:11 IST" name="NavigatetoFaxAddressPage" finished-at="2020-03-30T09:31:17 IST" duration-ms="5954" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:31:11 IST" name="startTestCase" finished-at="2020-03-30T09:31:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.SortingByDescending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="SortingByDescending()[pri:23, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:31:17 IST" name="SortingByDescending" finished-at="2020-03-30T09:31:26 IST" duration-ms="8419" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at com.tetherfi.test.fax.FaxAddressBookTest.SortingByDescending(FaxAddressBookTest.java:273)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SortingByDescending -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:31:26 IST" name="afterEachMethod" finished-at="2020-03-30T09:31:28 IST" duration-ms="1709" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.SortingByDescending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:31:28 IST" name="endTestCase" finished-at="2020-03-30T09:31:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.SortingByDescending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:31:28 IST" name="startTestCase" finished-at="2020-03-30T09:31:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddressBookExportToExcel() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:31:28 IST" name="NavigatetoFaxAddressPage" finished-at="2020-03-30T09:31:34 IST" duration-ms="6390" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="AddressBookExportToExcel()[pri:24, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:31:34 IST" name="AddressBookExportToExcel" finished-at="2020-03-30T09:31:36 IST" duration-ms="2586" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddressBookExportToExcel -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:31:37 IST" name="afterEachMethod" finished-at="2020-03-30T09:31:38 IST" duration-ms="1646" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddressBookExportToExcel() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:31:38 IST" name="endTestCase" finished-at="2020-03-30T09:31:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddressBookExportToExcel() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:31:38 IST" name="startTestCase" finished-at="2020-03-30T09:31:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddressBookExportToExcelData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:31:38 IST" name="NavigatetoFaxAddressPage" finished-at="2020-03-30T09:31:44 IST" duration-ms="5808" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="AddressBookExportToExcelData()[pri:25, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:31:44 IST" name="AddressBookExportToExcelData" finished-at="2020-03-30T09:31:48 IST" duration-ms="4247" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at com.tetherfi.test.fax.FaxAddressBookTest.AddressBookExportToExcelData(FaxAddressBookTest.java:289)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddressBookExportToExcelData -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:31:48 IST" name="afterEachMethod" finished-at="2020-03-30T09:31:50 IST" duration-ms="1672" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddressBookExportToExcelData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:31:50 IST" name="endTestCase" finished-at="2020-03-30T09:31:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddressBookExportToExcelData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:31:50 IST" name="NavigatetoFaxAddressPage" finished-at="2020-03-30T09:31:55 IST" duration-ms="5565" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:31:50 IST" name="startTestCase" finished-at="2020-03-30T09:31:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddressBookSortingByAscending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="AddressBookSortingByAscending()[pri:26, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:31:55 IST" name="AddressBookSortingByAscending" finished-at="2020-03-30T09:32:02 IST" duration-ms="6784" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at com.tetherfi.test.fax.FaxAddressBookTest.AddressBookSortingByAscending(FaxAddressBookTest.java:298)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddressBookSortingByAscending -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:32:02 IST" name="afterEachMethod" finished-at="2020-03-30T09:32:04 IST" duration-ms="1623" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddressBookSortingByAscending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:32:04 IST" name="endTestCase" finished-at="2020-03-30T09:32:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddressBookSortingByAscending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:32:04 IST" name="startTestCase" finished-at="2020-03-30T09:32:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddressBookSortingByDescending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:32:04 IST" name="NavigatetoFaxAddressPage" finished-at="2020-03-30T09:32:10 IST" duration-ms="6215" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="AddressBookSortingByDescending()[pri:27, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:32:10 IST" name="AddressBookSortingByDescending" finished-at="2020-03-30T09:32:18 IST" duration-ms="7494" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at com.tetherfi.test.fax.FaxAddressBookTest.AddressBookSortingByDescending(FaxAddressBookTest.java:307)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddressBookSortingByDescending -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:32:18 IST" name="afterEachMethod" finished-at="2020-03-30T09:32:19 IST" duration-ms="1658" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddressBookSortingByDescending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:32:19 IST" name="endTestCase" finished-at="2020-03-30T09:32:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddressBookSortingByDescending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1c3259fa]" started-at="2020-03-30T09:32:19 IST" name="tearDown" finished-at="2020-03-30T09:32:25 IST" duration-ms="5900" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.tetherfi.test.fax.FaxAddressBookTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
