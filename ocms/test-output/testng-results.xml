<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="63" passed="52" failed="11" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-04-27T13:03:28 IST" name="Default suite" finished-at="2020-04-27T13:18:05 IST" duration-ms="877666">
    <groups>
    </groups>
    <test started-at="2020-04-27T13:03:28 IST" name="Default test" finished-at="2020-04-27T13:18:05 IST" duration-ms="877666">
      <class name="com.tetherfi.test.fax.FaxAddressBookTest">
        <test-method is-config="true" signature="openApplication()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:03:28 IST" name="openApplication" finished-at="2020-04-27T13:03:55 IST" duration-ms="26903" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:03:55 IST" name="startTestCase" finished-at="2020-04-27T13:03:55 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.FaxSendersPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:03:55 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:03:59 IST" duration-ms="4591" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="FaxSendersPage()[pri:1, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:03:59 IST" name="FaxSendersPage" finished-at="2020-04-27T13:04:00 IST" duration-ms="681" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FaxSendersPage -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:04:00 IST" name="afterEachMethod" finished-at="2020-04-27T13:04:02 IST" duration-ms="1555" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.FaxSendersPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:04:02 IST" name="endTestCase" finished-at="2020-04-27T13:04:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.FaxSendersPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:04:02 IST" name="startTestCase" finished-at="2020-04-27T13:04:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyDropdownForAllTheColumnsRecipient()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:04:02 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:04:06 IST" duration-ms="4291" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyDropdownForAllTheColumnsRecipient()[pri:2, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:04:06 IST" name="VerifyDropdownForAllTheColumnsRecipient" finished-at="2020-04-27T13:04:36 IST" duration-ms="30486" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Columns dropdown assertion failed did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Columns dropdown assertion failed did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at com.tetherfi.test.fax.FaxAddressBookTest.VerifyDropdownForAllTheColumnsRecipient(FaxAddressBookTest.java:67)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyDropdownForAllTheColumnsRecipient -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:04:36 IST" name="afterEachMethod" finished-at="2020-04-27T13:04:38 IST" duration-ms="1662" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyDropdownForAllTheColumnsRecipient()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:04:38 IST" name="endTestCase" finished-at="2020-04-27T13:04:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyDropdownForAllTheColumnsRecipient()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:04:38 IST" name="startTestCase" finished-at="2020-04-27T13:04:38 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyColumnsHeaderEnableRecepient() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:04:38 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:04:42 IST" duration-ms="4158" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyColumnsHeaderEnableRecepient()[pri:3, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:04:42 IST" name="VerifyColumnsHeaderEnableRecepient" finished-at="2020-04-27T13:04:49 IST" duration-ms="6642" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyColumnsHeaderEnableRecepient -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:04:49 IST" name="afterEachMethod" finished-at="2020-04-27T13:04:50 IST" duration-ms="1556" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyColumnsHeaderEnableRecepient() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:04:50 IST" name="endTestCase" finished-at="2020-04-27T13:04:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyColumnsHeaderEnableRecepient() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:04:50 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:04:54 IST" duration-ms="3861" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:04:50 IST" name="startTestCase" finished-at="2020-04-27T13:04:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyColumnsHeaderDisable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="VerifyColumnsHeaderDisable()[pri:4, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:04:54 IST" name="VerifyColumnsHeaderDisable" finished-at="2020-04-27T13:05:03 IST" duration-ms="8711" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyColumnsHeaderDisable -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:05:03 IST" name="afterEachMethod" finished-at="2020-04-27T13:05:05 IST" duration-ms="1678" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyColumnsHeaderDisable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:05:05 IST" name="endTestCase" finished-at="2020-04-27T13:05:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyColumnsHeaderDisable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:05:05 IST" name="startTestCase" finished-at="2020-04-27T13:05:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyCancelButtonAtAddAdhocOptionEnhancementRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:05:05 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:05:09 IST" duration-ms="4624" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyCancelButtonAtAddAdhocOptionEnhancementRecord()[pri:5, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:05:09 IST" name="VerifyCancelButtonAtAddAdhocOptionEnhancementRecord" finished-at="2020-04-27T13:05:11 IST" duration-ms="2225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyCancelButtonAtAddAdhocOptionEnhancementRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:05:12 IST" name="afterEachMethod" finished-at="2020-04-27T13:05:14 IST" duration-ms="2040" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyCancelButtonAtAddAdhocOptionEnhancementRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:05:14 IST" name="endTestCase" finished-at="2020-04-27T13:05:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyCancelButtonAtAddAdhocOptionEnhancementRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:05:14 IST" name="startTestCase" finished-at="2020-04-27T13:05:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewRecipientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:05:14 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:05:17 IST" duration-ms="3901" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="AddNewRecipientRecord()[pri:6, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:05:17 IST" name="AddNewRecipientRecord" finished-at="2020-04-27T13:05:20 IST" duration-ms="2682" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewRecipientRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:05:20 IST" name="afterEachMethod" finished-at="2020-04-27T13:05:22 IST" duration-ms="1737" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewRecipientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:05:22 IST" name="endTestCase" finished-at="2020-04-27T13:05:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewRecipientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:05:22 IST" name="startTestCase" finished-at="2020-04-27T13:05:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrailReportForCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:05:22 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:05:26 IST" duration-ms="3915" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyAuditTrailReportForCreate()[pri:7, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:05:26 IST" name="VerifyAuditTrailReportForCreate" finished-at="2020-04-27T13:05:53 IST" duration-ms="26725" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrailReportForCreate -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:05:53 IST" name="afterEachMethod" finished-at="2020-04-27T13:05:54 IST" duration-ms="1661" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrailReportForCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:05:54 IST" name="endTestCase" finished-at="2020-04-27T13:05:54 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrailReportForCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:05:54 IST" name="startTestCase" finished-at="2020-04-27T13:05:54 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddDuplicateRecipientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:05:54 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:05:58 IST" duration-ms="3991" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="AddDuplicateRecipientRecord()[pri:8, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:05:58 IST" name="AddDuplicateRecipientRecord" finished-at="2020-04-27T13:06:01 IST" duration-ms="2578" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddDuplicateRecipientRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:06:01 IST" name="afterEachMethod" finished-at="2020-04-27T13:06:02 IST" duration-ms="1677" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddDuplicateRecipientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:06:02 IST" name="endTestCase" finished-at="2020-04-27T13:06:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddDuplicateRecipientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:06:02 IST" name="startTestCase" finished-at="2020-04-27T13:06:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewEmptyFaxAddressBookRecipientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:06:02 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:06:06 IST" duration-ms="4051" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="AddNewEmptyFaxAddressBookRecipientRecord()[pri:9, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:06:06 IST" name="AddNewEmptyFaxAddressBookRecipientRecord" finished-at="2020-04-27T13:06:09 IST" duration-ms="2650" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewEmptyFaxAddressBookRecipientRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:06:09 IST" name="afterEachMethod" finished-at="2020-04-27T13:06:11 IST" duration-ms="1460" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewEmptyFaxAddressBookRecipientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:06:11 IST" name="endTestCase" finished-at="2020-04-27T13:06:11 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewEmptyFaxAddressBookRecipientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:06:11 IST" name="startTestCase" finished-at="2020-04-27T13:06:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewFaxAddressBookRecipientWithoutFirstNameRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:06:11 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:06:15 IST" duration-ms="4172" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="AddNewFaxAddressBookRecipientWithoutFirstNameRecord()[pri:10, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:06:15 IST" name="AddNewFaxAddressBookRecipientWithoutFirstNameRecord" finished-at="2020-04-27T13:06:17 IST" duration-ms="2080" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewFaxAddressBookRecipientWithoutFirstNameRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:06:17 IST" name="afterEachMethod" finished-at="2020-04-27T13:06:18 IST" duration-ms="1448" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewFaxAddressBookRecipientWithoutFirstNameRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:06:18 IST" name="endTestCase" finished-at="2020-04-27T13:06:18 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewFaxAddressBookRecipientWithoutFirstNameRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:06:18 IST" name="startTestCase" finished-at="2020-04-27T13:06:18 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewFaxAddressBookRecipientWithoutNumberRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:06:18 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:06:22 IST" duration-ms="3871" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="AddNewFaxAddressBookRecipientWithoutNumberRecord()[pri:11, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:06:22 IST" name="AddNewFaxAddressBookRecipientWithoutNumberRecord" finished-at="2020-04-27T13:06:25 IST" duration-ms="2634" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewFaxAddressBookRecipientWithoutNumberRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:06:25 IST" name="afterEachMethod" finished-at="2020-04-27T13:06:26 IST" duration-ms="1461" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewFaxAddressBookRecipientWithoutNumberRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:06:26 IST" name="endTestCase" finished-at="2020-04-27T13:06:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewFaxAddressBookRecipientWithoutNumberRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:06:26 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:06:30 IST" duration-ms="3893" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:06:26 IST" name="startTestCase" finished-at="2020-04-27T13:06:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewFaxAddressBookRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="AddNewFaxAddressBookRecord()[pri:13, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:06:30 IST" name="AddNewFaxAddressBookRecord" finished-at="2020-04-27T13:06:39 IST" duration-ms="8562" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewFaxAddressBookRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:06:39 IST" name="afterEachMethod" finished-at="2020-04-27T13:06:40 IST" duration-ms="1455" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewFaxAddressBookRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:06:40 IST" name="endTestCase" finished-at="2020-04-27T13:06:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewFaxAddressBookRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:06:40 IST" name="startTestCase" finished-at="2020-04-27T13:06:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrailReportForAddressCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:06:40 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:06:44 IST" duration-ms="3869" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyAuditTrailReportForAddressCreate()[pri:14, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:06:44 IST" name="VerifyAuditTrailReportForAddressCreate" finished-at="2020-04-27T13:07:10 IST" duration-ms="25881" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrailReportForAddressCreate -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:07:10 IST" name="afterEachMethod" finished-at="2020-04-27T13:07:11 IST" duration-ms="1391" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrailReportForAddressCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:07:11 IST" name="endTestCase" finished-at="2020-04-27T13:07:11 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrailReportForAddressCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:07:11 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:07:15 IST" duration-ms="4116" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:07:11 IST" name="startTestCase" finished-at="2020-04-27T13:07:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewDuplicateRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="AddNewDuplicateRecord()[pri:15, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:07:15 IST" name="AddNewDuplicateRecord" finished-at="2020-04-27T13:07:22 IST" duration-ms="6945" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewDuplicateRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:07:22 IST" name="afterEachMethod" finished-at="2020-04-27T13:07:24 IST" duration-ms="1426" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewDuplicateRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:07:24 IST" name="endTestCase" finished-at="2020-04-27T13:07:24 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewDuplicateRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:07:24 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:07:28 IST" duration-ms="3902" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:07:24 IST" name="startTestCase" finished-at="2020-04-27T13:07:24 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewEmptyRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="AddNewEmptyRecord()[pri:16, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:07:28 IST" name="AddNewEmptyRecord" finished-at="2020-04-27T13:07:29 IST" duration-ms="927" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewEmptyRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:07:29 IST" name="afterEachMethod" finished-at="2020-04-27T13:07:30 IST" duration-ms="1500" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewEmptyRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:07:30 IST" name="endTestCase" finished-at="2020-04-27T13:07:30 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewEmptyRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:07:30 IST" name="startTestCase" finished-at="2020-04-27T13:07:30 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewRecordWithoutFaxLine() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:07:30 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:07:34 IST" duration-ms="3866" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="AddNewRecordWithoutFaxLine()[pri:17, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:07:34 IST" name="AddNewRecordWithoutFaxLine" finished-at="2020-04-27T13:07:40 IST" duration-ms="5567" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewRecordWithoutFaxLine -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:07:40 IST" name="afterEachMethod" finished-at="2020-04-27T13:07:41 IST" duration-ms="1483" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewRecordWithoutFaxLine() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:07:41 IST" name="endTestCase" finished-at="2020-04-27T13:07:41 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewRecordWithoutFaxLine() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:07:41 IST" name="startTestCase" finished-at="2020-04-27T13:07:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewRecordWithoutName() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:07:41 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:07:45 IST" duration-ms="4080" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="AddNewRecordWithoutName()[pri:18, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:07:45 IST" name="AddNewRecordWithoutName" finished-at="2020-04-27T13:08:08 IST" duration-ms="22495" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of [[ChromeDriver: chrome on WINDOWS (cea9a43c8759c361ce2276dd0b14a78e)] -> css selector: ul[id='FaxLine_listbox'] li] (tried for 20 second(s) with 500 milliseconds interval)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-O6A5C2O', ip: '10.0.75.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '9.0.4'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 80.0.3987.116, chrome: {chromedriverVersion: 80.0.3987.106 (f68069574609..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:61694}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: cea9a43c8759c361ce2276dd0b14a78e]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of [[ChromeDriver: chrome on WINDOWS (cea9a43c8759c361ce2276dd0b14a78e)] -> css selector: ul[id='FaxLine_listbox'] li] (tried for 20 second(s) with 500 milliseconds interval)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-O6A5C2O', ip: '10.0.75.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '9.0.4'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 80.0.3987.116, chrome: {chromedriverVersion: 80.0.3987.106 (f68069574609..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:61694}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: cea9a43c8759c361ce2276dd0b14a78e
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at com.tetherfi.pages.BasePage.waitUntilWebElementListIsVisible(BasePage.java:139)
at com.tetherfi.pages.BasePage.selectDropdownFromVisibleText(BasePage.java:335)
at com.tetherfi.pages.FaxAddressBookPage.addNewAddressBookRecordWithoutName(FaxAddressBookPage.java:1138)
at com.tetherfi.test.fax.FaxAddressBookTest.AddNewRecordWithoutName(FaxAddressBookTest.java:224)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewRecordWithoutName -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:08:08 IST" name="afterEachMethod" finished-at="2020-04-27T13:08:09 IST" duration-ms="1656" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewRecordWithoutName() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:08:09 IST" name="endTestCase" finished-at="2020-04-27T13:08:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewRecordWithoutName() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:08:09 IST" name="startTestCase" finished-at="2020-04-27T13:08:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewRecordWithoutRecipients() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:08:09 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:08:13 IST" duration-ms="3807" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="AddNewRecordWithoutRecipients()[pri:19, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:08:13 IST" name="AddNewRecordWithoutRecipients" finished-at="2020-04-27T13:08:20 IST" duration-ms="7372" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewRecordWithoutRecipients -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:08:20 IST" name="afterEachMethod" finished-at="2020-04-27T13:08:22 IST" duration-ms="1770" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewRecordWithoutRecipients() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:08:22 IST" name="endTestCase" finished-at="2020-04-27T13:08:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddNewRecordWithoutRecipients() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:08:22 IST" name="startTestCase" finished-at="2020-04-27T13:08:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.ExportToExcel() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:08:22 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:08:26 IST" duration-ms="3568" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="ExportToExcel()[pri:20, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:08:26 IST" name="ExportToExcel" finished-at="2020-04-27T13:08:29 IST" duration-ms="3303" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ExportToExcel -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:08:29 IST" name="afterEachMethod" finished-at="2020-04-27T13:08:31 IST" duration-ms="1397" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.ExportToExcel() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:08:31 IST" name="endTestCase" finished-at="2020-04-27T13:08:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.ExportToExcel() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:08:31 IST" name="startTestCase" finished-at="2020-04-27T13:08:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.ExportToExcelData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:08:31 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:08:35 IST" duration-ms="4248" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="ExportToExcelData()[pri:21, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:08:35 IST" name="ExportToExcelData" finished-at="2020-04-27T13:08:35 IST" duration-ms="403" status="FAIL">
          <exception class="java.lang.ArrayIndexOutOfBoundsException">
            <message>
              <![CDATA[1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArrayIndexOutOfBoundsException: 1
at com.tetherfi.pages.FaxAddressBookPage.getdata(FaxAddressBookPage.java:387)
at com.tetherfi.pages.FaxAddressBookPage.verifyexportToExcelSheet(FaxAddressBookPage.java:325)
at com.tetherfi.test.fax.FaxAddressBookTest.ExportToExcelData(FaxAddressBookTest.java:253)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArrayIndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ExportToExcelData -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:08:35 IST" name="afterEachMethod" finished-at="2020-04-27T13:08:37 IST" duration-ms="1549" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.ExportToExcelData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:08:37 IST" name="endTestCase" finished-at="2020-04-27T13:08:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.ExportToExcelData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:08:37 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:08:41 IST" duration-ms="4089" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:08:37 IST" name="startTestCase" finished-at="2020-04-27T13:08:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.SortingByAscending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="SortingByAscending()[pri:22, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:08:41 IST" name="SortingByAscending" finished-at="2020-04-27T13:08:45 IST" duration-ms="4608" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SortingByAscending -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:08:45 IST" name="afterEachMethod" finished-at="2020-04-27T13:08:47 IST" duration-ms="1724" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.SortingByAscending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:08:47 IST" name="endTestCase" finished-at="2020-04-27T13:08:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.SortingByAscending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:08:47 IST" name="startTestCase" finished-at="2020-04-27T13:08:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.SortingByDescending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:08:47 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:08:51 IST" duration-ms="4214" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="SortingByDescending()[pri:23, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:08:51 IST" name="SortingByDescending" finished-at="2020-04-27T13:08:56 IST" duration-ms="4872" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SortingByDescending -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:08:56 IST" name="afterEachMethod" finished-at="2020-04-27T13:08:58 IST" duration-ms="1539" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.SortingByDescending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:08:58 IST" name="endTestCase" finished-at="2020-04-27T13:08:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.SortingByDescending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:08:58 IST" name="startTestCase" finished-at="2020-04-27T13:08:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddressBookExportToExcel() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:08:58 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:09:02 IST" duration-ms="4444" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="AddressBookExportToExcel()[pri:24, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:09:02 IST" name="AddressBookExportToExcel" finished-at="2020-04-27T13:09:05 IST" duration-ms="2447" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddressBookExportToExcel -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:09:05 IST" name="afterEachMethod" finished-at="2020-04-27T13:09:06 IST" duration-ms="1573" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddressBookExportToExcel() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:09:06 IST" name="endTestCase" finished-at="2020-04-27T13:09:06 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddressBookExportToExcel() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:09:06 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:09:11 IST" duration-ms="4451" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:09:06 IST" name="startTestCase" finished-at="2020-04-27T13:09:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddressBookExportToExcelData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="AddressBookExportToExcelData()[pri:25, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:09:11 IST" name="AddressBookExportToExcelData" finished-at="2020-04-27T13:09:11 IST" duration-ms="64" status="FAIL">
          <exception class="java.lang.ArrayIndexOutOfBoundsException">
            <message>
              <![CDATA[1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArrayIndexOutOfBoundsException: 1
at com.tetherfi.pages.FaxAddressBookPage.getAddressBookdata(FaxAddressBookPage.java:355)
at com.tetherfi.pages.FaxAddressBookPage.verifyAddressBookexportToExcelSheet(FaxAddressBookPage.java:340)
at com.tetherfi.test.fax.FaxAddressBookTest.AddressBookExportToExcelData(FaxAddressBookTest.java:289)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArrayIndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddressBookExportToExcelData -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:09:11 IST" name="afterEachMethod" finished-at="2020-04-27T13:09:13 IST" duration-ms="2153" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddressBookExportToExcelData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:09:13 IST" name="endTestCase" finished-at="2020-04-27T13:09:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddressBookExportToExcelData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:09:13 IST" name="startTestCase" finished-at="2020-04-27T13:09:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddressBookSortingByAscending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:09:13 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:09:17 IST" duration-ms="4132" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="AddressBookSortingByAscending()[pri:26, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:09:17 IST" name="AddressBookSortingByAscending" finished-at="2020-04-27T13:09:25 IST" duration-ms="7647" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddressBookSortingByAscending -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:09:25 IST" name="afterEachMethod" finished-at="2020-04-27T13:09:26 IST" duration-ms="1557" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddressBookSortingByAscending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:09:26 IST" name="endTestCase" finished-at="2020-04-27T13:09:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddressBookSortingByAscending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:09:26 IST" name="startTestCase" finished-at="2020-04-27T13:09:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddressBookSortingByDescending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:09:26 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:09:30 IST" duration-ms="3896" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="AddressBookSortingByDescending()[pri:27, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:09:30 IST" name="AddressBookSortingByDescending" finished-at="2020-04-27T13:09:38 IST" duration-ms="8242" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddressBookSortingByDescending -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:09:38 IST" name="afterEachMethod" finished-at="2020-04-27T13:09:40 IST" duration-ms="1534" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddressBookSortingByDescending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:09:40 IST" name="endTestCase" finished-at="2020-04-27T13:09:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.AddressBookSortingByDescending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:09:40 IST" name="startTestCase" finished-at="2020-04-27T13:09:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.EditWithoutModifyReasonRecipientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:09:40 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:09:44 IST" duration-ms="3906" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="EditWithoutModifyReasonRecipientRecord()[pri:28, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:09:44 IST" name="EditWithoutModifyReasonRecipientRecord" finished-at="2020-04-27T13:09:49 IST" duration-ms="5281" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EditWithoutModifyReasonRecipientRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:09:49 IST" name="afterEachMethod" finished-at="2020-04-27T13:09:51 IST" duration-ms="1581" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.EditWithoutModifyReasonRecipientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:09:51 IST" name="endTestCase" finished-at="2020-04-27T13:09:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.EditWithoutModifyReasonRecipientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:09:51 IST" name="startTestCase" finished-at="2020-04-27T13:09:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyCancelBtnAtEditRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:09:51 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:09:55 IST" duration-ms="3936" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyCancelBtnAtEditRecord()[pri:29, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:09:55 IST" name="VerifyCancelBtnAtEditRecord" finished-at="2020-04-27T13:10:00 IST" duration-ms="5399" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyCancelBtnAtEditRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:10:00 IST" name="afterEachMethod" finished-at="2020-04-27T13:10:02 IST" duration-ms="1514" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyCancelBtnAtEditRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:10:02 IST" name="endTestCase" finished-at="2020-04-27T13:10:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyCancelBtnAtEditRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:10:02 IST" name="startTestCase" finished-at="2020-04-27T13:10:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.EditRecipientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:10:02 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:10:05 IST" duration-ms="3883" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="EditRecipientRecord()[pri:30, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:10:05 IST" name="EditRecipientRecord" finished-at="2020-04-27T13:10:11 IST" duration-ms="5869" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EditRecipientRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:10:11 IST" name="afterEachMethod" finished-at="2020-04-27T13:10:13 IST" duration-ms="1589" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.EditRecipientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:10:13 IST" name="endTestCase" finished-at="2020-04-27T13:10:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.EditRecipientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:10:13 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:10:17 IST" duration-ms="3967" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:10:13 IST" name="startTestCase" finished-at="2020-04-27T13:10:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrialReportForRecipientUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="VerifyAuditTrialReportForRecipientUpdate()[pri:31, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:10:17 IST" name="VerifyAuditTrialReportForRecipientUpdate" finished-at="2020-04-27T13:10:43 IST" duration-ms="26081" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrialReportForRecipientUpdate -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:10:43 IST" name="afterEachMethod" finished-at="2020-04-27T13:10:44 IST" duration-ms="1476" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrialReportForRecipientUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:10:44 IST" name="endTestCase" finished-at="2020-04-27T13:10:44 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrialReportForRecipientUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:10:44 IST" name="startTestCase" finished-at="2020-04-27T13:10:44 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.EditWithoutModifyReasonAddressBookRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:10:44 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:10:49 IST" duration-ms="4091" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="EditWithoutModifyReasonAddressBookRecord()[pri:32, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:10:49 IST" name="EditWithoutModifyReasonAddressBookRecord" finished-at="2020-04-27T13:10:55 IST" duration-ms="6656" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EditWithoutModifyReasonAddressBookRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:10:55 IST" name="afterEachMethod" finished-at="2020-04-27T13:10:57 IST" duration-ms="1603" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.EditWithoutModifyReasonAddressBookRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:10:57 IST" name="endTestCase" finished-at="2020-04-27T13:10:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.EditWithoutModifyReasonAddressBookRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:10:57 IST" name="startTestCase" finished-at="2020-04-27T13:10:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyCancelBtnAtEditAddressBookRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:10:57 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:11:01 IST" duration-ms="3942" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyCancelBtnAtEditAddressBookRecord()[pri:33, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:11:01 IST" name="VerifyCancelBtnAtEditAddressBookRecord" finished-at="2020-04-27T13:11:06 IST" duration-ms="4821" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyCancelBtnAtEditAddressBookRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:11:06 IST" name="afterEachMethod" finished-at="2020-04-27T13:11:07 IST" duration-ms="1510" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyCancelBtnAtEditAddressBookRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:11:07 IST" name="endTestCase" finished-at="2020-04-27T13:11:07 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyCancelBtnAtEditAddressBookRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:11:07 IST" name="startTestCase" finished-at="2020-04-27T13:11:07 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.EditFaxAddressBookRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:11:07 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:11:11 IST" duration-ms="3924" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="EditFaxAddressBookRecord()[pri:34, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:11:11 IST" name="EditFaxAddressBookRecord" finished-at="2020-04-27T13:11:17 IST" duration-ms="5948" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EditFaxAddressBookRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:11:17 IST" name="afterEachMethod" finished-at="2020-04-27T13:11:19 IST" duration-ms="1605" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.EditFaxAddressBookRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:11:19 IST" name="endTestCase" finished-at="2020-04-27T13:11:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.EditFaxAddressBookRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:11:19 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:11:22 IST" duration-ms="3899" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:11:19 IST" name="startTestCase" finished-at="2020-04-27T13:11:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrialReportForFaxAddressBookUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="VerifyAuditTrialReportForFaxAddressBookUpdate()[pri:35, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:11:22 IST" name="VerifyAuditTrialReportForFaxAddressBookUpdate" finished-at="2020-04-27T13:11:48 IST" duration-ms="25605" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrialReportForFaxAddressBookUpdate(FaxAddressBookTest.java:402)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrialReportForFaxAddressBookUpdate -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:11:48 IST" name="afterEachMethod" finished-at="2020-04-27T13:11:50 IST" duration-ms="1463" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrialReportForFaxAddressBookUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:11:50 IST" name="endTestCase" finished-at="2020-04-27T13:11:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrialReportForFaxAddressBookUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:11:50 IST" name="startTestCase" finished-at="2020-04-27T13:11:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.DeleteWithoutDeleteReasonAddressBookRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:11:50 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:11:54 IST" duration-ms="4039" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="DeleteWithoutDeleteReasonAddressBookRecord()[pri:36, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:11:54 IST" name="DeleteWithoutDeleteReasonAddressBookRecord" finished-at="2020-04-27T13:11:58 IST" duration-ms="4692" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteWithoutDeleteReasonAddressBookRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:11:58 IST" name="afterEachMethod" finished-at="2020-04-27T13:12:00 IST" duration-ms="1586" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.DeleteWithoutDeleteReasonAddressBookRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:12:00 IST" name="endTestCase" finished-at="2020-04-27T13:12:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.DeleteWithoutDeleteReasonAddressBookRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:12:00 IST" name="startTestCase" finished-at="2020-04-27T13:12:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyCancelBtnAtDeleteAddressRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:12:00 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:12:05 IST" duration-ms="4916" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyCancelBtnAtDeleteAddressRecord()[pri:37, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:12:05 IST" name="VerifyCancelBtnAtDeleteAddressRecord" finished-at="2020-04-27T13:12:09 IST" duration-ms="4117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyCancelBtnAtDeleteAddressRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:12:09 IST" name="afterEachMethod" finished-at="2020-04-27T13:12:11 IST" duration-ms="1793" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyCancelBtnAtDeleteAddressRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:12:11 IST" name="endTestCase" finished-at="2020-04-27T13:12:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyCancelBtnAtDeleteAddressRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:12:11 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:12:15 IST" duration-ms="4383" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:12:11 IST" name="startTestCase" finished-at="2020-04-27T13:12:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.DeleteAddressBookRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="DeleteAddressBookRecord()[pri:38, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:12:15 IST" name="DeleteAddressBookRecord" finished-at="2020-04-27T13:12:19 IST" duration-ms="3918" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteAddressBookRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:12:19 IST" name="afterEachMethod" finished-at="2020-04-27T13:12:21 IST" duration-ms="1699" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.DeleteAddressBookRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:12:21 IST" name="endTestCase" finished-at="2020-04-27T13:12:21 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.DeleteAddressBookRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:12:21 IST" name="startTestCase" finished-at="2020-04-27T13:12:21 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrialReportForAddressBookDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:12:21 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:12:25 IST" duration-ms="3943" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyAuditTrialReportForAddressBookDelete()[pri:39, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:12:25 IST" name="VerifyAuditTrialReportForAddressBookDelete" finished-at="2020-04-27T13:12:50 IST" duration-ms="24961" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrialReportForAddressBookDelete(FaxAddressBookTest.java:449)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrialReportForAddressBookDelete -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:12:50 IST" name="afterEachMethod" finished-at="2020-04-27T13:12:51 IST" duration-ms="1484" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrialReportForAddressBookDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:12:51 IST" name="endTestCase" finished-at="2020-04-27T13:12:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrialReportForAddressBookDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:12:51 IST" name="startTestCase" finished-at="2020-04-27T13:12:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.DeleteRecepientWithoutDeleteReasonRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:12:51 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:12:55 IST" duration-ms="4047" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="DeleteRecepientWithoutDeleteReasonRecord()[pri:40, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:12:55 IST" name="DeleteRecepientWithoutDeleteReasonRecord" finished-at="2020-04-27T13:13:01 IST" duration-ms="5419" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteRecepientWithoutDeleteReasonRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:13:01 IST" name="afterEachMethod" finished-at="2020-04-27T13:13:02 IST" duration-ms="1573" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.DeleteRecepientWithoutDeleteReasonRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:13:02 IST" name="endTestCase" finished-at="2020-04-27T13:13:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.DeleteRecepientWithoutDeleteReasonRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:13:02 IST" name="startTestCase" finished-at="2020-04-27T13:13:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyCancelBtnAtDeleteRecepientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:13:02 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:13:06 IST" duration-ms="3882" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyCancelBtnAtDeleteRecepientRecord()[pri:41, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:13:06 IST" name="VerifyCancelBtnAtDeleteRecepientRecord" finished-at="2020-04-27T13:13:11 IST" duration-ms="4907" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyCancelBtnAtDeleteRecepientRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:13:11 IST" name="afterEachMethod" finished-at="2020-04-27T13:13:13 IST" duration-ms="1601" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyCancelBtnAtDeleteRecepientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:13:13 IST" name="endTestCase" finished-at="2020-04-27T13:13:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyCancelBtnAtDeleteRecepientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:13:13 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:13:16 IST" duration-ms="3886" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:13:13 IST" name="startTestCase" finished-at="2020-04-27T13:13:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.DeleteRecipientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="DeleteRecipientRecord()[pri:42, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:13:16 IST" name="DeleteRecipientRecord" finished-at="2020-04-27T13:13:23 IST" duration-ms="6344" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteRecipientRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:13:23 IST" name="afterEachMethod" finished-at="2020-04-27T13:13:25 IST" duration-ms="1824" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.DeleteRecipientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:13:25 IST" name="endTestCase" finished-at="2020-04-27T13:13:25 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.DeleteRecipientRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:13:25 IST" name="startTestCase" finished-at="2020-04-27T13:13:25 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrialReportForDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:13:25 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:13:28 IST" duration-ms="3612" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyAuditTrialReportForDelete()[pri:43, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:13:28 IST" name="VerifyAuditTrialReportForDelete" finished-at="2020-04-27T13:13:53 IST" duration-ms="24893" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.tetherfi.pages.OCMReportsPage.verifyRecipientdelete(OCMReportsPage.java:5196)
at com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrialReportForDelete(FaxAddressBookTest.java:495)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrialReportForDelete -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:13:53 IST" name="afterEachMethod" finished-at="2020-04-27T13:13:54 IST" duration-ms="1398" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrialReportForDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:13:54 IST" name="endTestCase" finished-at="2020-04-27T13:13:54 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAuditTrialReportForDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:13:54 IST" name="startTestCase" finished-at="2020-04-27T13:13:54 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyRecipientArrowMoveForPreviousAndNextPageRecipient()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:13:54 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:13:59 IST" duration-ms="4322" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyRecipientArrowMoveForPreviousAndNextPageRecipient()[pri:44, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:13:59 IST" name="VerifyRecipientArrowMoveForPreviousAndNextPageRecipient" finished-at="2020-04-27T13:13:59 IST" duration-ms="251" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyRecipientArrowMoveForPreviousAndNextPageRecipient -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:13:59 IST" name="afterEachMethod" finished-at="2020-04-27T13:14:01 IST" duration-ms="1566" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyRecipientArrowMoveForPreviousAndNextPageRecipient()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:14:01 IST" name="endTestCase" finished-at="2020-04-27T13:14:01 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyRecipientArrowMoveForPreviousAndNextPageRecipient()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:14:01 IST" name="startTestCase" finished-at="2020-04-27T13:14:01 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyRecipientArrowMoveForFirstAndLastPageRecipient()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:14:01 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:14:05 IST" duration-ms="3909" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyRecipientArrowMoveForFirstAndLastPageRecipient()[pri:45, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:14:05 IST" name="VerifyRecipientArrowMoveForFirstAndLastPageRecipient" finished-at="2020-04-27T13:14:06 IST" duration-ms="966" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyRecipientArrowMoveForFirstAndLastPageRecipient -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:14:06 IST" name="afterEachMethod" finished-at="2020-04-27T13:14:07 IST" duration-ms="1534" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyRecipientArrowMoveForFirstAndLastPageRecipient()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:14:07 IST" name="endTestCase" finished-at="2020-04-27T13:14:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyRecipientArrowMoveForFirstAndLastPageRecipient()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:14:07 IST" name="startTestCase" finished-at="2020-04-27T13:14:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyRecipientTotalNumberOfItemsPerPageDetailsRecipient()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:14:07 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:14:11 IST" duration-ms="4163" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyRecipientTotalNumberOfItemsPerPageDetailsRecipient()[pri:46, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:14:11 IST" name="VerifyRecipientTotalNumberOfItemsPerPageDetailsRecipient" finished-at="2020-04-27T13:14:12 IST" duration-ms="300" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[item per page assertion failed did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: item per page assertion failed did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at com.tetherfi.test.fax.FaxAddressBookTest.VerifyRecipientTotalNumberOfItemsPerPageDetailsRecipient(FaxAddressBookTest.java:516)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyRecipientTotalNumberOfItemsPerPageDetailsRecipient -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:14:12 IST" name="afterEachMethod" finished-at="2020-04-27T13:14:13 IST" duration-ms="1495" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyRecipientTotalNumberOfItemsPerPageDetailsRecipient()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:14:13 IST" name="endTestCase" finished-at="2020-04-27T13:14:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyRecipientTotalNumberOfItemsPerPageDetailsRecipient()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:14:13 IST" name="startTestCase" finished-at="2020-04-27T13:14:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyRecipientNumberOfItemsPerPageSelectionRecipient()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:14:13 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:14:17 IST" duration-ms="3706" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyRecipientNumberOfItemsPerPageSelectionRecipient()[pri:47, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:14:17 IST" name="VerifyRecipientNumberOfItemsPerPageSelectionRecipient" finished-at="2020-04-27T13:14:17 IST" duration-ms="275" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[item per page assertion failed did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: item per page assertion failed did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at com.tetherfi.test.fax.FaxAddressBookTest.VerifyRecipientNumberOfItemsPerPageSelectionRecipient(FaxAddressBookTest.java:523)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyRecipientNumberOfItemsPerPageSelectionRecipient -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:14:17 IST" name="afterEachMethod" finished-at="2020-04-27T13:14:19 IST" duration-ms="1666" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyRecipientNumberOfItemsPerPageSelectionRecipient()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:14:19 IST" name="endTestCase" finished-at="2020-04-27T13:14:19 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyRecipientNumberOfItemsPerPageSelectionRecipient()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:14:19 IST" name="startTestCase" finished-at="2020-04-27T13:14:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.searchRecipientPageClose() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:14:19 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:14:22 IST" duration-ms="3601" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="searchRecipientPageClose()[pri:48, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:14:22 IST" name="searchRecipientPageClose" finished-at="2020-04-27T13:14:27 IST" duration-ms="5213" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchRecipientPageClose -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:14:27 IST" name="afterEachMethod" finished-at="2020-04-27T13:14:29 IST" duration-ms="1518" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.searchRecipientPageClose() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:14:29 IST" name="endTestCase" finished-at="2020-04-27T13:14:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.searchRecipientPageClose() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:14:29 IST" name="startTestCase" finished-at="2020-04-27T13:14:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.searchRecipientwithoutSearchTextbox() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:14:29 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:14:33 IST" duration-ms="4119" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="searchRecipientwithoutSearchTextbox()[pri:49, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:14:33 IST" name="searchRecipientwithoutSearchTextbox" finished-at="2020-04-27T13:14:36 IST" duration-ms="2904" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchRecipientwithoutSearchTextbox -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:14:36 IST" name="afterEachMethod" finished-at="2020-04-27T13:14:38 IST" duration-ms="1819" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.searchRecipientwithoutSearchTextbox() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:14:38 IST" name="endTestCase" finished-at="2020-04-27T13:14:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.searchRecipientwithoutSearchTextbox() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:14:38 IST" name="startTestCase" finished-at="2020-04-27T13:14:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyRecipientDragAndDrop() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:14:38 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:14:42 IST" duration-ms="4099" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyRecipientDragAndDrop()[pri:50, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:14:42 IST" name="VerifyRecipientDragAndDrop" finished-at="2020-04-27T13:14:45 IST" duration-ms="3078" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyRecipientDragAndDrop -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:14:45 IST" name="afterEachMethod" finished-at="2020-04-27T13:14:47 IST" duration-ms="1565" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyRecipientDragAndDrop() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:14:47 IST" name="endTestCase" finished-at="2020-04-27T13:14:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyRecipientDragAndDrop() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:14:47 IST" name="startTestCase" finished-at="2020-04-27T13:14:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyRecipientDragAndDropofAlreadyGroupedHeader() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:14:47 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:14:51 IST" duration-ms="4151" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyRecipientDragAndDropofAlreadyGroupedHeader()[pri:51, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:14:51 IST" name="VerifyRecipientDragAndDropofAlreadyGroupedHeader" finished-at="2020-04-27T13:14:54 IST" duration-ms="3655" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyRecipientDragAndDropofAlreadyGroupedHeader -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:14:54 IST" name="afterEachMethod" finished-at="2020-04-27T13:14:56 IST" duration-ms="1498" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyRecipientDragAndDropofAlreadyGroupedHeader() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:14:56 IST" name="endTestCase" finished-at="2020-04-27T13:14:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyRecipientDragAndDropofAlreadyGroupedHeader() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:14:56 IST" name="startTestCase" finished-at="2020-04-27T13:14:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyDragAndDrop() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:14:56 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:15:00 IST" duration-ms="4183" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyDragAndDrop()[pri:52, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:15:00 IST" name="VerifyDragAndDrop" finished-at="2020-04-27T13:15:03 IST" duration-ms="2852" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyDragAndDrop -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:15:03 IST" name="afterEachMethod" finished-at="2020-04-27T13:15:04 IST" duration-ms="1531" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyDragAndDrop() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:15:04 IST" name="endTestCase" finished-at="2020-04-27T13:15:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyDragAndDrop() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:15:04 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:15:08 IST" duration-ms="3925" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:15:04 IST" name="startTestCase" finished-at="2020-04-27T13:15:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyDragAndDropofAlreadyGroupedHeader() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="VerifyDragAndDropofAlreadyGroupedHeader()[pri:53, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:15:08 IST" name="VerifyDragAndDropofAlreadyGroupedHeader" finished-at="2020-04-27T13:15:12 IST" duration-ms="3410" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyDragAndDropofAlreadyGroupedHeader -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:15:12 IST" name="afterEachMethod" finished-at="2020-04-27T13:15:13 IST" duration-ms="1629" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyDragAndDropofAlreadyGroupedHeader() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:15:13 IST" name="endTestCase" finished-at="2020-04-27T13:15:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyDragAndDropofAlreadyGroupedHeader() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:15:13 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:15:17 IST" duration-ms="3976" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:15:13 IST" name="startTestCase" finished-at="2020-04-27T13:15:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAddressBookDropdownForAllTheColumns()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="VerifyAddressBookDropdownForAllTheColumns()[pri:54, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:15:17 IST" name="VerifyAddressBookDropdownForAllTheColumns" finished-at="2020-04-27T13:16:05 IST" duration-ms="47188" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAddressBookDropdownForAllTheColumns -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:16:05 IST" name="afterEachMethod" finished-at="2020-04-27T13:16:06 IST" duration-ms="1697" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAddressBookDropdownForAllTheColumns()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:16:06 IST" name="endTestCase" finished-at="2020-04-27T13:16:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAddressBookDropdownForAllTheColumns()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:16:06 IST" name="startTestCase" finished-at="2020-04-27T13:16:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAddressBookColumnsHeaderEnable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:16:06 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:16:10 IST" duration-ms="3765" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyAddressBookColumnsHeaderEnable()[pri:55, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:16:10 IST" name="VerifyAddressBookColumnsHeaderEnable" finished-at="2020-04-27T13:16:40 IST" duration-ms="30058" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of [[ChromeDriver: chrome on WINDOWS (cea9a43c8759c361ce2276dd0b14a78e)] -> css selector: th a[class='k-header-column-menu']] (tried for 30 second(s) with 500 milliseconds interval)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-O6A5C2O', ip: '10.0.75.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '9.0.4'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 80.0.3987.116, chrome: {chromedriverVersion: 80.0.3987.106 (f68069574609..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:61694}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: cea9a43c8759c361ce2276dd0b14a78e]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of [[ChromeDriver: chrome on WINDOWS (cea9a43c8759c361ce2276dd0b14a78e)] -> css selector: th a[class='k-header-column-menu']] (tried for 30 second(s) with 500 milliseconds interval)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-O6A5C2O', ip: '10.0.75.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '9.0.4'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 80.0.3987.116, chrome: {chromedriverVersion: 80.0.3987.106 (f68069574609..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:61694}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: cea9a43c8759c361ce2276dd0b14a78e
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at com.tetherfi.pages.BasePage.waitUntilWebElementIsVisible(BasePage.java:127)
at com.tetherfi.pages.FaxAddressBookPage.verifycolumnsHeaderEnabledAdress(FaxAddressBookPage.java:768)
at com.tetherfi.test.fax.FaxAddressBookTest.VerifyAddressBookColumnsHeaderEnable(FaxAddressBookTest.java:594)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAddressBookColumnsHeaderEnable -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:16:40 IST" name="afterEachMethod" finished-at="2020-04-27T13:16:42 IST" duration-ms="1654" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAddressBookColumnsHeaderEnable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:16:42 IST" name="endTestCase" finished-at="2020-04-27T13:16:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAddressBookColumnsHeaderEnable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:16:42 IST" name="startTestCase" finished-at="2020-04-27T13:16:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAddressBookColumnsHeaderDisable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:16:42 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:16:46 IST" duration-ms="4203" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyAddressBookColumnsHeaderDisable()[pri:56, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:16:46 IST" name="VerifyAddressBookColumnsHeaderDisable" finished-at="2020-04-27T13:16:53 IST" duration-ms="6886" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAddressBookColumnsHeaderDisable -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:16:53 IST" name="afterEachMethod" finished-at="2020-04-27T13:16:54 IST" duration-ms="1555" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAddressBookColumnsHeaderDisable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:16:54 IST" name="endTestCase" finished-at="2020-04-27T13:16:54 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyAddressBookColumnsHeaderDisable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:16:54 IST" name="startTestCase" finished-at="2020-04-27T13:16:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.SearchRecipientClearSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:16:54 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:16:58 IST" duration-ms="4011" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="SearchRecipientClearSearch()[pri:57, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:16:58 IST" name="SearchRecipientClearSearch" finished-at="2020-04-27T13:17:03 IST" duration-ms="4837" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchRecipientClearSearch -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:17:03 IST" name="afterEachMethod" finished-at="2020-04-27T13:17:05 IST" duration-ms="1499" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.SearchRecipientClearSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:17:05 IST" name="endTestCase" finished-at="2020-04-27T13:17:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.SearchRecipientClearSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:17:05 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:17:09 IST" duration-ms="4098" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:17:05 IST" name="startTestCase" finished-at="2020-04-27T13:17:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.searchRecipientPage() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="searchRecipientPage()[pri:58, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:17:09 IST" name="searchRecipientPage" finished-at="2020-04-27T13:17:12 IST" duration-ms="3095" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchRecipientPage -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:17:12 IST" name="afterEachMethod" finished-at="2020-04-27T13:17:13 IST" duration-ms="1499" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.searchRecipientPage() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:17:13 IST" name="endTestCase" finished-at="2020-04-27T13:17:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.searchRecipientPage() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:17:13 IST" name="startTestCase" finished-at="2020-04-27T13:17:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.searchAddressBookwithoutSearchTextbox() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:17:13 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:17:18 IST" duration-ms="4599" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="searchAddressBookwithoutSearchTextbox()[pri:59, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:17:18 IST" name="searchAddressBookwithoutSearchTextbox" finished-at="2020-04-27T13:17:21 IST" duration-ms="2501" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchAddressBookwithoutSearchTextbox -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:17:21 IST" name="afterEachMethod" finished-at="2020-04-27T13:17:22 IST" duration-ms="1811" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.searchAddressBookwithoutSearchTextbox() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:17:22 IST" name="endTestCase" finished-at="2020-04-27T13:17:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.searchAddressBookwithoutSearchTextbox() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:17:22 IST" name="startTestCase" finished-at="2020-04-27T13:17:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.SearchClearSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:17:22 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:17:26 IST" duration-ms="3550" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="SearchClearSearch()[pri:60, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:17:26 IST" name="SearchClearSearch" finished-at="2020-04-27T13:17:32 IST" duration-ms="5877" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchClearSearch -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:17:32 IST" name="afterEachMethod" finished-at="2020-04-27T13:17:33 IST" duration-ms="1509" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.SearchClearSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:17:33 IST" name="endTestCase" finished-at="2020-04-27T13:17:33 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.SearchClearSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:17:33 IST" name="startTestCase" finished-at="2020-04-27T13:17:33 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyArrowMoveForPreviousAndNextPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:17:33 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:17:37 IST" duration-ms="3893" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyArrowMoveForPreviousAndNextPage()[pri:61, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:17:37 IST" name="VerifyArrowMoveForPreviousAndNextPage" finished-at="2020-04-27T13:17:37 IST" duration-ms="27" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyArrowMoveForPreviousAndNextPage -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:17:37 IST" name="afterEachMethod" finished-at="2020-04-27T13:17:39 IST" duration-ms="1622" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyArrowMoveForPreviousAndNextPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:17:39 IST" name="startTestCase" finished-at="2020-04-27T13:17:39 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyArrowMoveForFirstAndLastPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:17:39 IST" name="endTestCase" finished-at="2020-04-27T13:17:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyArrowMoveForPreviousAndNextPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:17:39 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:17:43 IST" duration-ms="4034" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyArrowMoveForFirstAndLastPage()[pri:62, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:17:43 IST" name="VerifyArrowMoveForFirstAndLastPage" finished-at="2020-04-27T13:17:43 IST" duration-ms="57" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyArrowMoveForFirstAndLastPage -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:17:43 IST" name="afterEachMethod" finished-at="2020-04-27T13:17:45 IST" duration-ms="1625" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyArrowMoveForFirstAndLastPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:17:45 IST" name="endTestCase" finished-at="2020-04-27T13:17:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyArrowMoveForFirstAndLastPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:17:45 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:17:49 IST" duration-ms="4113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:17:45 IST" name="startTestCase" finished-at="2020-04-27T13:17:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyTotalNumberOfItemsPerPageDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="VerifyTotalNumberOfItemsPerPageDetails()[pri:63, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:17:49 IST" name="VerifyTotalNumberOfItemsPerPageDetails" finished-at="2020-04-27T13:17:49 IST" duration-ms="102" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyTotalNumberOfItemsPerPageDetails -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:17:49 IST" name="afterEachMethod" finished-at="2020-04-27T13:17:50 IST" duration-ms="1563" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyTotalNumberOfItemsPerPageDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:17:50 IST" name="endTestCase" finished-at="2020-04-27T13:17:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyTotalNumberOfItemsPerPageDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:17:50 IST" name="startTestCase" finished-at="2020-04-27T13:17:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyNumberOfItemsPerPageSelection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigatetoFaxAddressPage()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:17:50 IST" name="NavigatetoFaxAddressPage" finished-at="2020-04-27T13:17:54 IST" duration-ms="4111" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatetoFaxAddressPage -->
        <test-method signature="VerifyNumberOfItemsPerPageSelection()[pri:64, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:17:54 IST" name="VerifyNumberOfItemsPerPageSelection" finished-at="2020-04-27T13:17:58 IST" duration-ms="3572" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[item per page assertion failed did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: item per page assertion failed did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at com.tetherfi.test.fax.FaxAddressBookTest.VerifyNumberOfItemsPerPageSelection(FaxAddressBookTest.java:665)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyNumberOfItemsPerPageSelection -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:17:58 IST" name="afterEachMethod" finished-at="2020-04-27T13:18:00 IST" duration-ms="1543" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyNumberOfItemsPerPageSelection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:18:00 IST" name="endTestCase" finished-at="2020-04-27T13:18:00 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAddressBookTest.VerifyNumberOfItemsPerPageSelection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tetherfi.test.fax.FaxAddressBookTest@1a07bf6]" started-at="2020-04-27T13:18:00 IST" name="tearDown" finished-at="2020-04-27T13:18:05 IST" duration-ms="5787" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.tetherfi.test.fax.FaxAddressBookTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
