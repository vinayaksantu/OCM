<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-O6A5C2O" failures="0" tests="5" name="Default test" time="12.734" errors="0" timestamp="2019-10-18T14:33:13 IST">
  <testcase classname="com.tetherfi.test.BaseTest" name="@BeforeClass openApplication" time="12.469">
    <failure type="org.openqa.selenium.NoSuchSessionException" message="invalid session id
Build info: version: &amp;apos;3.141.59&amp;apos;, revision: &amp;apos;e82be7d358&amp;apos;, time: &amp;apos;2018-11-14T08:17:03&amp;apos;
System info: host: &amp;apos;DESKTOP-O6A5C2O&amp;apos;, ip: &amp;apos;10.0.75.1&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;9.0.4&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 77.0.3865.120, chrome: {chromedriverVersion: 76.0.3809.68 (420c9498db8ce..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:52355}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 379caac3e083a25591bea1fc28beea61">
      <![CDATA[org.openqa.selenium.NoSuchSessionException: invalid session id
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-O6A5C2O', ip: '10.0.75.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '9.0.4'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 77.0.3865.120, chrome: {chromedriverVersion: 76.0.3809.68 (420c9498db8ce..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:52355}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 379caac3e083a25591bea1fc28beea61
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteTimeouts.implicitlyWait(RemoteWebDriver.java:780)
at com.tetherfi.test.BaseTest.openApplication(BaseTest.java:40)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:340)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:294)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeClass openApplication -->
  <testcase classname="com.tetherfi.test.BaseTest" name="@BeforeMethod startTestCase" time="-1.571389393672E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTestCase -->
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="@BeforeMethod NavigateToCepEventMappingPage" time="-1.571389393672E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod NavigateToCepEventMappingPage -->
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="@AfterMethod afterEachMethod" time="-1.571389393688E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachMethod -->
  <testcase classname="com.tetherfi.test.BaseTest" name="@AfterMethod endTestCase" time="-1.571389393688E9">
    <skipped/>
  </testcase> <!-- @AfterMethod endTestCase -->
  <testcase classname="com.tetherfi.test.BaseTest" name="@BeforeMethod startTestCase" time="-1.571389393703E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTestCase -->
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="@BeforeMethod NavigateToCepEventMappingPage" time="-1.571389393703E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod NavigateToCepEventMappingPage -->
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="@AfterMethod afterEachMethod" time="-1.571389393719E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachMethod -->
  <testcase classname="com.tetherfi.test.BaseTest" name="@AfterMethod endTestCase" time="-1.571389393719E9">
    <skipped/>
  </testcase> <!-- @AfterMethod endTestCase -->
  <testcase classname="com.tetherfi.test.BaseTest" name="@BeforeMethod startTestCase" time="-1.571389393735E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTestCase -->
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="@BeforeMethod NavigateToCepEventMappingPage" time="-1.57138939375E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod NavigateToCepEventMappingPage -->
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="@AfterMethod afterEachMethod" time="-1.571389393766E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachMethod -->
  <testcase classname="com.tetherfi.test.BaseTest" name="@AfterMethod endTestCase" time="-1.571389393766E9">
    <skipped/>
  </testcase> <!-- @AfterMethod endTestCase -->
  <testcase classname="com.tetherfi.test.BaseTest" name="@BeforeMethod startTestCase" time="-1.571389393766E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTestCase -->
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="@BeforeMethod NavigateToCepEventMappingPage" time="-1.571389393782E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod NavigateToCepEventMappingPage -->
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="@AfterMethod afterEachMethod" time="-1.571389393782E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachMethod -->
  <testcase classname="com.tetherfi.test.BaseTest" name="@AfterMethod endTestCase" time="-1.571389393797E9">
    <skipped/>
  </testcase> <!-- @AfterMethod endTestCase -->
  <testcase classname="com.tetherfi.test.BaseTest" name="@BeforeMethod startTestCase" time="-1.571389393797E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startTestCase -->
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="@BeforeMethod NavigateToCepEventMappingPage" time="-1.571389393797E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod NavigateToCepEventMappingPage -->
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="@AfterMethod afterEachMethod" time="-1.571389393813E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachMethod -->
  <testcase classname="com.tetherfi.test.BaseTest" name="@AfterMethod endTestCase" time="-1.571389393828E9">
    <skipped/>
  </testcase> <!-- @AfterMethod endTestCase -->
  <testcase classname="com.tetherfi.test.BaseTest" name="@AfterClass tearDown" time="-1.571389393828E9">
    <skipped/>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="VerifySearchIsNotEqualTo" time="0.0">
    <skipped/>
  </testcase> <!-- VerifySearchIsNotEqualTo -->
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="VerifySearchContains" time="0.0">
    <skipped/>
  </testcase> <!-- VerifySearchContains -->
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="VerifySearchDoesNotContains" time="0.0">
    <skipped/>
  </testcase> <!-- VerifySearchDoesNotContains -->
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="VerifySearchStartsWith" time="0.0">
    <skipped/>
  </testcase> <!-- VerifySearchStartsWith -->
  <testcase classname="com.tetherfi.test.CEPEventMappingTest" name="VerifySearchEndsWith" time="0.0">
    <skipped/>
  </testcase> <!-- VerifySearchEndsWith -->
</testsuite> <!-- Default test -->
