<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="82" passed="69" failed="9" skipped="4">
  <reporter-output>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\BranchManagementPage.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyBranchManagementApprovedDataPage.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyBranchManagementAuditTrailDataPage.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyMakeBranchManagementChangeButton.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyDropdownForAllTheColumns.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyColumnsHeaderEnable.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyColumnsHeaderDisable.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyArrowMoveForPreviousAndNextPage.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyArrowMoveForFirstAndLastPage.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyTotalNumberOfItemsPerPageDetails.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:red;" "font-size:25px;">FAILED</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyNumberOfItemsPerPageSelection.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\ExportToExcel.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\ExportToExcelData.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyExportToExcelWithoutData.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\SortingByAscending.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\SortingByDescending.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyDragAndDrop.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyDragAndDropofAlreadyGroupedHeader.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\database.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\searchPage.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\searchwithoutSearchTextbox.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\SearchClearSearch.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyAddCancelButton.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyAddRecordwithoutMainLines.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyAddRecordWithoutSubLines.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyAddRecordWithoutLocation.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyAddRecordWithoutBranchType.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyAddRecordWithoutBranchName.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyAddRecordWithoutAddress.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyAddRecordWithoutLineOrder.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyAddRecordWithoutStatus.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyAddRecordWithoutLanguage.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\AddRevertRecord.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyRevertForAddNewRecord.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyApprovedDataSectionWithoutApproval.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyAuditTrailReportForRevert.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\AddRejectRecord.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifySendForApprovalForAddNewRecord.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\RejectforAddNewBranchManagementRecord.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyAuditTrailReportForReject.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyRecordAfterRejection.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\AddNewBranchManagementRecord.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyAuditTrailReportForCreate.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyAuditTrailDataForAddNewBranchManagementRecord.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifySendForApprovalForAddNewBranchManagementRecord.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyAuditTrailReportForSendForApproval.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\ApproveforAddNewBranchManagementRecord.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyAuditTrailReportForApprove.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyRecordApprovedDataSectionafterApproval.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\AddDuplicateRecord.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\EditCancelBranchManagementRecord.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\EditRecordWithoutModifyReaosn.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\EditRevertBranchManagementRecord.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyRevertForEditRecord.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:red;" "font-size:25px;">FAILED</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyAuditTrialReportForRevertUpdate.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\EditRejectRecord.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifySendForApprovalForEditRejectRecord.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\RejectforEditBranchManagementRecord.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:red;" "font-size:25px;">FAILED</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyAuditTrailReportForReject.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\EditBranchManagementRecord.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyAuditTrailDataForEditBranchManagementRecord.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyAuditTrialReportForUpdate.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifySendForApprovalForRejectRecord.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:red;" "font-size:25px;">FAILED</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyAuditTrialReportForSendForApprovalUpdate.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:red;" "font-size:25px;">FAILED</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\ApproveforEditBranchManagementRecord.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\DeleteCancelBranchManagementRecord.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\DeleteRecordWithoutDeleteReason.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\DeleteRecord.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:red;" "font-size:25px;">FAILED</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyRevertForDeleteRecord.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\RejectDeleteRecord.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifySendForApprovalForDeleteNewRecord.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:red;" "font-size:25px;">FAILED</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\RejectforDeleteBranchManagementRecord.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\DeleteBranchManagementRecord.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyAuditTrialReportForDelete.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyAuditTrailDataForDeleteBranchManagementRecord.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifySendForApprovalForDeleteRecord.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:red;" "font-size:25px;">FAILED</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\VerifyAuditTrailReportForSendForApprove.jpg" alt="Image Not Found"/><br />]]>
    </line>
    <line>
      <![CDATA[Test Case <b style="color:red;" "font-size:25px;">FAILED</b>
]]>
    </line>
    <line>
      <![CDATA[<img src="Screenshot\ApproveforDeleteBranchManagementRecord.jpg" alt="Image Not Found"/><br />]]>
    </line>
  </reporter-output>
  <suite started-at="2019-11-15T13:04:47 IST" name="Tetherfi Test Automation" finished-at="2019-11-15T13:54:22 IST" duration-ms="2974880">
    <groups>
      <group name="Checker">
        <method signature="BranchManagementCreateTest.ApproveforAddNewBranchManagementRecord()[pri:25, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" name="ApproveforAddNewBranchManagementRecord" class="com.tetherfi.test.ivr.BranchManagementCreateTest"/>
        <method signature="BranchManagementCreateTest.VerifyAuditTrailReportForApprove()[pri:26, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" name="VerifyAuditTrailReportForApprove" class="com.tetherfi.test.ivr.BranchManagementCreateTest"/>
        <method signature="BranchManagementCreateTest.VerifyRecordApprovedDataSectionafterApproval()[pri:27, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" name="VerifyRecordApprovedDataSectionafterApproval" class="com.tetherfi.test.ivr.BranchManagementCreateTest"/>
        <method signature="BranchManagementCreateTest.RejectforAddNewBranchManagementRecord()[pri:17, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" name="RejectforAddNewBranchManagementRecord" class="com.tetherfi.test.ivr.BranchManagementCreateTest"/>
        <method signature="BranchManagementCreateTest.VerifyAuditTrailReportForReject()[pri:18, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" name="VerifyAuditTrailReportForReject" class="com.tetherfi.test.ivr.BranchManagementCreateTest"/>
        <method signature="BranchManagementEditTest.ApproveforEditBranchManagementRecord()[pri:15, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" name="ApproveforEditBranchManagementRecord" class="com.tetherfi.test.ivr.BranchManagementEditTest"/>
        <method signature="BranchManagementEditTest.RejectforEditBranchManagementRecord()[pri:8, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" name="RejectforEditBranchManagementRecord" class="com.tetherfi.test.ivr.BranchManagementEditTest"/>
        <method signature="BranchManagementEditTest.VerifyAuditTrailReportForApprove()[pri:16, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" name="VerifyAuditTrailReportForApprove" class="com.tetherfi.test.ivr.BranchManagementEditTest"/>
        <method signature="BranchManagementEditTest.VerifyAuditTrailReportForReject()[pri:9, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" name="VerifyAuditTrailReportForReject" class="com.tetherfi.test.ivr.BranchManagementEditTest"/>
        <method signature="BranchManagementDeleteTest.ApproveforDeleteBranchManagementRecord()[pri:15, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" name="ApproveforDeleteBranchManagementRecord" class="com.tetherfi.test.ivr.BranchManagementDeleteTest"/>
        <method signature="BranchManagementDeleteTest.VerifyAuditTrailReportForApprove()[pri:16, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" name="VerifyAuditTrailReportForApprove" class="com.tetherfi.test.ivr.BranchManagementDeleteTest"/>
        <method signature="BranchManagementDeleteTest.RejectforDeleteBranchManagementRecord()[pri:8, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" name="RejectforDeleteBranchManagementRecord" class="com.tetherfi.test.ivr.BranchManagementDeleteTest"/>
        <method signature="BranchManagementDeleteTest.VerifyAuditTrailReportForReject()[pri:9, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" name="VerifyAuditTrailReportForReject" class="com.tetherfi.test.ivr.BranchManagementDeleteTest"/>
      </group> <!-- Checker -->
      <group name="Maker">
        <method signature="BranchManagementCreateTest.AddNewBranchManagementRecord()[pri:20, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" name="AddNewBranchManagementRecord" class="com.tetherfi.test.ivr.BranchManagementCreateTest"/>
        <method signature="BranchManagementCreateTest.AddDuplicateRecord()[pri:28, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" name="AddDuplicateRecord" class="com.tetherfi.test.ivr.BranchManagementCreateTest"/>
        <method signature="BranchManagementCreateTest.AddRejectRecord()[pri:15, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" name="AddRejectRecord" class="com.tetherfi.test.ivr.BranchManagementCreateTest"/>
        <method signature="BranchManagementCreateTest.AddRevertRecord()[pri:11, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" name="AddRevertRecord" class="com.tetherfi.test.ivr.BranchManagementCreateTest"/>
        <method signature="BranchManagementCreateTest.VerifyAddCancelButton()[pri:1, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" name="VerifyAddCancelButton" class="com.tetherfi.test.ivr.BranchManagementCreateTest"/>
        <method signature="BranchManagementCreateTest.VerifyAddRecordWithoutAddress()[pri:7, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" name="VerifyAddRecordWithoutAddress" class="com.tetherfi.test.ivr.BranchManagementCreateTest"/>
        <method signature="BranchManagementCreateTest.VerifyAddRecordWithoutBranchName()[pri:6, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" name="VerifyAddRecordWithoutBranchName" class="com.tetherfi.test.ivr.BranchManagementCreateTest"/>
        <method signature="BranchManagementCreateTest.VerifyAddRecordWithoutBranchType()[pri:5, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" name="VerifyAddRecordWithoutBranchType" class="com.tetherfi.test.ivr.BranchManagementCreateTest"/>
        <method signature="BranchManagementCreateTest.VerifyAddRecordWithoutLanguage()[pri:10, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" name="VerifyAddRecordWithoutLanguage" class="com.tetherfi.test.ivr.BranchManagementCreateTest"/>
        <method signature="BranchManagementCreateTest.VerifyAddRecordWithoutLineOrder()[pri:8, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" name="VerifyAddRecordWithoutLineOrder" class="com.tetherfi.test.ivr.BranchManagementCreateTest"/>
        <method signature="BranchManagementCreateTest.VerifyAddRecordWithoutLocation()[pri:4, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" name="VerifyAddRecordWithoutLocation" class="com.tetherfi.test.ivr.BranchManagementCreateTest"/>
        <method signature="BranchManagementCreateTest.VerifyAddRecordWithoutStatus()[pri:9, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" name="VerifyAddRecordWithoutStatus" class="com.tetherfi.test.ivr.BranchManagementCreateTest"/>
        <method signature="BranchManagementCreateTest.VerifyAddRecordWithoutSubLines()[pri:3, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" name="VerifyAddRecordWithoutSubLines" class="com.tetherfi.test.ivr.BranchManagementCreateTest"/>
        <method signature="BranchManagementCreateTest.VerifyAddRecordwithoutMainLines()[pri:2, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" name="VerifyAddRecordwithoutMainLines" class="com.tetherfi.test.ivr.BranchManagementCreateTest"/>
        <method signature="BranchManagementCreateTest.VerifyAuditTrailDataForAddNewBranchManagementRecord()[pri:22, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" name="VerifyAuditTrailDataForAddNewBranchManagementRecord" class="com.tetherfi.test.ivr.BranchManagementCreateTest"/>
        <method signature="BranchManagementCreateTest.VerifyAuditTrailReportForCreate()[pri:21, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" name="VerifyAuditTrailReportForCreate" class="com.tetherfi.test.ivr.BranchManagementCreateTest"/>
        <method signature="BranchManagementCreateTest.VerifyRevertForAddNewRecord()[pri:12, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" name="VerifyRevertForAddNewRecord" class="com.tetherfi.test.ivr.BranchManagementCreateTest"/>
        <method signature="BranchManagementCreateTest.VerifyApprovedDataSectionWithoutApproval()[pri:13, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" name="VerifyApprovedDataSectionWithoutApproval" class="com.tetherfi.test.ivr.BranchManagementCreateTest"/>
        <method signature="BranchManagementCreateTest.VerifyAuditTrailReportForRevert()[pri:14, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" name="VerifyAuditTrailReportForRevert" class="com.tetherfi.test.ivr.BranchManagementCreateTest"/>
        <method signature="BranchManagementCreateTest.VerifySendForApprovalForAddNewBranchManagementRecord()[pri:23, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" name="VerifySendForApprovalForAddNewBranchManagementRecord" class="com.tetherfi.test.ivr.BranchManagementCreateTest"/>
        <method signature="BranchManagementCreateTest.VerifyAuditTrailReportForSendForApproval()[pri:24, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" name="VerifyAuditTrailReportForSendForApproval" class="com.tetherfi.test.ivr.BranchManagementCreateTest"/>
        <method signature="BranchManagementCreateTest.VerifySendForApprovalForAddNewRecord()[pri:16, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" name="VerifySendForApprovalForAddNewRecord" class="com.tetherfi.test.ivr.BranchManagementCreateTest"/>
        <method signature="BranchManagementCreateTest.VerifyRecordAfterRejection()[pri:19, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" name="VerifyRecordAfterRejection" class="com.tetherfi.test.ivr.BranchManagementCreateTest"/>
        <method signature="BranchManagementEditTest.EditBranchManagementRecord()[pri:10, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" name="EditBranchManagementRecord" class="com.tetherfi.test.ivr.BranchManagementEditTest"/>
        <method signature="BranchManagementEditTest.EditCancelBranchManagementRecord()[pri:1, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" name="EditCancelBranchManagementRecord" class="com.tetherfi.test.ivr.BranchManagementEditTest"/>
        <method signature="BranchManagementEditTest.EditRejectRecord()[pri:6, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" name="EditRejectRecord" class="com.tetherfi.test.ivr.BranchManagementEditTest"/>
        <method signature="BranchManagementEditTest.EditRevertBranchManagementRecord()[pri:3, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" name="EditRevertBranchManagementRecord" class="com.tetherfi.test.ivr.BranchManagementEditTest"/>
        <method signature="BranchManagementEditTest.VerifyAuditTrailDataForEditBranchManagementRecord()[pri:11, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" name="VerifyAuditTrailDataForEditBranchManagementRecord" class="com.tetherfi.test.ivr.BranchManagementEditTest"/>
        <method signature="BranchManagementEditTest.VerifyAuditTrialReportForUpdate()[pri:12, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" name="VerifyAuditTrialReportForUpdate" class="com.tetherfi.test.ivr.BranchManagementEditTest"/>
        <method signature="BranchManagementEditTest.VerifyRevertForEditRecord()[pri:4, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" name="VerifyRevertForEditRecord" class="com.tetherfi.test.ivr.BranchManagementEditTest"/>
        <method signature="BranchManagementEditTest.VerifyAuditTrialReportForRevertUpdate()[pri:5, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" name="VerifyAuditTrialReportForRevertUpdate" class="com.tetherfi.test.ivr.BranchManagementEditTest"/>
        <method signature="BranchManagementEditTest.VerifySendForApprovalForEditRejectRecord()[pri:7, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" name="VerifySendForApprovalForEditRejectRecord" class="com.tetherfi.test.ivr.BranchManagementEditTest"/>
        <method signature="BranchManagementEditTest.VerifySendForApprovalForRejectRecord()[pri:13, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" name="VerifySendForApprovalForRejectRecord" class="com.tetherfi.test.ivr.BranchManagementEditTest"/>
        <method signature="BranchManagementEditTest.VerifyAuditTrialReportForSendForApprovalUpdate()[pri:14, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" name="VerifyAuditTrialReportForSendForApprovalUpdate" class="com.tetherfi.test.ivr.BranchManagementEditTest"/>
        <method signature="BranchManagementEditTest.EditRecordWithoutModifyReaosn()[pri:2, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" name="EditRecordWithoutModifyReaosn" class="com.tetherfi.test.ivr.BranchManagementEditTest"/>
        <method signature="BranchManagementDeleteTest.DeleteBranchManagementRecord()[pri:10, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" name="DeleteBranchManagementRecord" class="com.tetherfi.test.ivr.BranchManagementDeleteTest"/>
        <method signature="BranchManagementDeleteTest.DeleteCancelBranchManagementRecord()[pri:1, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" name="DeleteCancelBranchManagementRecord" class="com.tetherfi.test.ivr.BranchManagementDeleteTest"/>
        <method signature="BranchManagementDeleteTest.DeleteRecord()[pri:3, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" name="DeleteRecord" class="com.tetherfi.test.ivr.BranchManagementDeleteTest"/>
        <method signature="BranchManagementDeleteTest.DeleteRecordWithoutDeleteReason()[pri:2, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" name="DeleteRecordWithoutDeleteReason" class="com.tetherfi.test.ivr.BranchManagementDeleteTest"/>
        <method signature="BranchManagementDeleteTest.RejectDeleteRecord()[pri:6, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" name="RejectDeleteRecord" class="com.tetherfi.test.ivr.BranchManagementDeleteTest"/>
        <method signature="BranchManagementDeleteTest.VerifyAuditTrailDataForDeleteBranchManagementRecord()[pri:12, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" name="VerifyAuditTrailDataForDeleteBranchManagementRecord" class="com.tetherfi.test.ivr.BranchManagementDeleteTest"/>
        <method signature="BranchManagementDeleteTest.VerifyAuditTrialReportForDelete()[pri:11, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" name="VerifyAuditTrialReportForDelete" class="com.tetherfi.test.ivr.BranchManagementDeleteTest"/>
        <method signature="BranchManagementDeleteTest.VerifyRevertForDeleteRecord()[pri:4, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" name="VerifyRevertForDeleteRecord" class="com.tetherfi.test.ivr.BranchManagementDeleteTest"/>
        <method signature="BranchManagementDeleteTest.VerifyAuditTrialReportForRevertDelete()[pri:5, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" name="VerifyAuditTrialReportForRevertDelete" class="com.tetherfi.test.ivr.BranchManagementDeleteTest"/>
        <method signature="BranchManagementDeleteTest.VerifySendForApprovalForDeleteNewRecord()[pri:7, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" name="VerifySendForApprovalForDeleteNewRecord" class="com.tetherfi.test.ivr.BranchManagementDeleteTest"/>
        <method signature="BranchManagementDeleteTest.VerifySendForApprovalForDeleteRecord()[pri:13, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" name="VerifySendForApprovalForDeleteRecord" class="com.tetherfi.test.ivr.BranchManagementDeleteTest"/>
        <method signature="BranchManagementDeleteTest.VerifyAuditTrailReportForSendForApprove()[pri:14, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" name="VerifyAuditTrailReportForSendForApprove" class="com.tetherfi.test.ivr.BranchManagementDeleteTest"/>
      </group> <!-- Maker -->
    </groups>
    <test started-at="2019-11-15T13:04:47 IST" name="Branch Management UI" finished-at="2019-11-15T13:13:39 IST" duration-ms="532286">
      <class name="com.tetherfi.test.ivr.BranchManagementUITest">
        <test-method is-config="true" signature="openApplication()[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:04:47 IST" name="openApplication" finished-at="2019-11-15T13:05:12 IST" duration-ms="25176" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:05:12 IST" name="startTestCase" finished-at="2019-11-15T13:05:12 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.BranchManagementPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage()[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:05:12 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:05:22 IST" duration-ms="10012" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="BranchManagementPage()[pri:1, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:05:22 IST" name="BranchManagementPage" finished-at="2019-11-15T13:05:23 IST" duration-ms="1345" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\BranchManagementPage.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- BranchManagementPage -->
        <test-method is-config="true" signature="afterEachMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:05:23 IST" name="afterEachMethod" finished-at="2019-11-15T13:05:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BranchManagementPage status=SUCCESS method=BranchManagementUITest.BranchManagementPage()[pri:1, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104] output=Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.BranchManagementPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:05:23 IST" name="endTestCase" finished-at="2019-11-15T13:05:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.BranchManagementPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:05:23 IST" name="startTestCase" finished-at="2019-11-15T13:05:23 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.VerifyBranchManagementApprovedDataPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage()[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:05:23 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:05:26 IST" duration-ms="2755" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="VerifyBranchManagementApprovedDataPage()[pri:2, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:05:26 IST" name="VerifyBranchManagementApprovedDataPage" finished-at="2019-11-15T13:05:27 IST" duration-ms="1199" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyBranchManagementApprovedDataPage.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyBranchManagementApprovedDataPage -->
        <test-method is-config="true" signature="afterEachMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:05:27 IST" name="afterEachMethod" finished-at="2019-11-15T13:05:27 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyBranchManagementApprovedDataPage status=SUCCESS method=BranchManagementUITest.VerifyBranchManagementApprovedDataPage()[pri:2, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104] output=Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.VerifyBranchManagementApprovedDataPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:05:27 IST" name="endTestCase" finished-at="2019-11-15T13:05:27 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.VerifyBranchManagementApprovedDataPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage()[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:05:27 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:05:31 IST" duration-ms="3794" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:05:27 IST" name="startTestCase" finished-at="2019-11-15T13:05:27 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.VerifyBranchManagementAuditTrailDataPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="VerifyBranchManagementAuditTrailDataPage()[pri:3, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:05:31 IST" name="VerifyBranchManagementAuditTrailDataPage" finished-at="2019-11-15T13:05:38 IST" duration-ms="7186" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyBranchManagementAuditTrailDataPage.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyBranchManagementAuditTrailDataPage -->
        <test-method is-config="true" signature="afterEachMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:05:38 IST" name="afterEachMethod" finished-at="2019-11-15T13:05:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyBranchManagementAuditTrailDataPage status=SUCCESS method=BranchManagementUITest.VerifyBranchManagementAuditTrailDataPage()[pri:3, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104] output=Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.VerifyBranchManagementAuditTrailDataPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:05:38 IST" name="endTestCase" finished-at="2019-11-15T13:05:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.VerifyBranchManagementAuditTrailDataPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:05:38 IST" name="startTestCase" finished-at="2019-11-15T13:05:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.VerifyMakeBranchManagementChangeButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage()[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:05:38 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:05:42 IST" duration-ms="3719" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="VerifyMakeBranchManagementChangeButton()[pri:4, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:05:42 IST" name="VerifyMakeBranchManagementChangeButton" finished-at="2019-11-15T13:05:54 IST" duration-ms="11686" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyMakeBranchManagementChangeButton.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyMakeBranchManagementChangeButton -->
        <test-method is-config="true" signature="afterEachMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:05:54 IST" name="afterEachMethod" finished-at="2019-11-15T13:05:54 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyMakeBranchManagementChangeButton status=SUCCESS method=BranchManagementUITest.VerifyMakeBranchManagementChangeButton()[pri:4, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104] output=Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.VerifyMakeBranchManagementChangeButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:05:54 IST" name="endTestCase" finished-at="2019-11-15T13:05:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.VerifyMakeBranchManagementChangeButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:05:54 IST" name="startTestCase" finished-at="2019-11-15T13:05:54 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.VerifyDropdownForAllTheColumns()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage()[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:05:54 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:05:57 IST" duration-ms="3722" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="VerifyDropdownForAllTheColumns()[pri:5, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:05:57 IST" name="VerifyDropdownForAllTheColumns" finished-at="2019-11-15T13:06:28 IST" duration-ms="30827" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyDropdownForAllTheColumns.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyDropdownForAllTheColumns -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:06:28 IST" name="endTestCase" finished-at="2019-11-15T13:06:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.VerifyDropdownForAllTheColumns()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="afterEachMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:06:28 IST" name="afterEachMethod" finished-at="2019-11-15T13:06:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyDropdownForAllTheColumns status=SUCCESS method=BranchManagementUITest.VerifyDropdownForAllTheColumns()[pri:5, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104] output=Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.VerifyDropdownForAllTheColumns()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:06:28 IST" name="startTestCase" finished-at="2019-11-15T13:06:28 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.VerifyColumnsHeaderEnable() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage()[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:06:28 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:06:32 IST" duration-ms="4061" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="VerifyColumnsHeaderEnable()[pri:6, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:06:32 IST" name="VerifyColumnsHeaderEnable" finished-at="2019-11-15T13:07:02 IST" duration-ms="29614" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyColumnsHeaderEnable.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyColumnsHeaderEnable -->
        <test-method is-config="true" signature="afterEachMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:07:02 IST" name="afterEachMethod" finished-at="2019-11-15T13:07:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyColumnsHeaderEnable status=SUCCESS method=BranchManagementUITest.VerifyColumnsHeaderEnable()[pri:6, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104] output=Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.VerifyColumnsHeaderEnable() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:07:02 IST" name="endTestCase" finished-at="2019-11-15T13:07:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.VerifyColumnsHeaderEnable() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:07:02 IST" name="startTestCase" finished-at="2019-11-15T13:07:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.VerifyColumnsHeaderDisable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage()[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:07:02 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:07:06 IST" duration-ms="3866" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="VerifyColumnsHeaderDisable()[pri:7, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:07:06 IST" name="VerifyColumnsHeaderDisable" finished-at="2019-11-15T13:07:16 IST" duration-ms="10615" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyColumnsHeaderDisable.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyColumnsHeaderDisable -->
        <test-method is-config="true" signature="afterEachMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:07:16 IST" name="afterEachMethod" finished-at="2019-11-15T13:07:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyColumnsHeaderDisable status=SUCCESS method=BranchManagementUITest.VerifyColumnsHeaderDisable()[pri:7, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104] output=Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.VerifyColumnsHeaderDisable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:07:16 IST" name="endTestCase" finished-at="2019-11-15T13:07:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.VerifyColumnsHeaderDisable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage()[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:07:16 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:07:21 IST" duration-ms="4278" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:07:16 IST" name="startTestCase" finished-at="2019-11-15T13:07:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.VerifyArrowMoveForPreviousAndNextPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="VerifyArrowMoveForPreviousAndNextPage()[pri:8, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:07:21 IST" name="VerifyArrowMoveForPreviousAndNextPage" finished-at="2019-11-15T13:07:31 IST" duration-ms="10532" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyArrowMoveForPreviousAndNextPage.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyArrowMoveForPreviousAndNextPage -->
        <test-method is-config="true" signature="afterEachMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:07:31 IST" name="afterEachMethod" finished-at="2019-11-15T13:07:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyArrowMoveForPreviousAndNextPage status=SUCCESS method=BranchManagementUITest.VerifyArrowMoveForPreviousAndNextPage()[pri:8, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104] output=Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.VerifyArrowMoveForPreviousAndNextPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:07:31 IST" name="endTestCase" finished-at="2019-11-15T13:07:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.VerifyArrowMoveForPreviousAndNextPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:07:31 IST" name="startTestCase" finished-at="2019-11-15T13:07:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.VerifyArrowMoveForFirstAndLastPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage()[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:07:31 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:07:35 IST" duration-ms="3765" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="VerifyArrowMoveForFirstAndLastPage()[pri:9, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:07:35 IST" name="VerifyArrowMoveForFirstAndLastPage" finished-at="2019-11-15T13:07:46 IST" duration-ms="10676" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyArrowMoveForFirstAndLastPage.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyArrowMoveForFirstAndLastPage -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:07:46 IST" name="endTestCase" finished-at="2019-11-15T13:07:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.VerifyArrowMoveForFirstAndLastPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="afterEachMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:07:46 IST" name="afterEachMethod" finished-at="2019-11-15T13:07:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyArrowMoveForFirstAndLastPage status=SUCCESS method=BranchManagementUITest.VerifyArrowMoveForFirstAndLastPage()[pri:9, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104] output=Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.VerifyArrowMoveForFirstAndLastPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:07:46 IST" name="startTestCase" finished-at="2019-11-15T13:07:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.VerifyTotalNumberOfItemsPerPageDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage()[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:07:46 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:07:50 IST" duration-ms="3867" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="VerifyTotalNumberOfItemsPerPageDetails()[pri:10, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:07:50 IST" name="VerifyTotalNumberOfItemsPerPageDetails" finished-at="2019-11-15T13:08:00 IST" duration-ms="10585" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyTotalNumberOfItemsPerPageDetails.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyTotalNumberOfItemsPerPageDetails -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:08:00 IST" name="endTestCase" finished-at="2019-11-15T13:08:00 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.VerifyTotalNumberOfItemsPerPageDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="afterEachMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:08:00 IST" name="afterEachMethod" finished-at="2019-11-15T13:08:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyTotalNumberOfItemsPerPageDetails status=SUCCESS method=BranchManagementUITest.VerifyTotalNumberOfItemsPerPageDetails()[pri:10, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104] output=Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.VerifyTotalNumberOfItemsPerPageDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:08:00 IST" name="startTestCase" finished-at="2019-11-15T13:08:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.VerifyNumberOfItemsPerPageSelection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage()[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:08:00 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:08:04 IST" duration-ms="3768" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="VerifyNumberOfItemsPerPageSelection()[pri:11, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:08:04 IST" name="VerifyNumberOfItemsPerPageSelection" finished-at="2019-11-15T13:08:17 IST" duration-ms="12673" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[item per page assertion failed did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: item per page assertion failed did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at com.tetherfi.test.ivr.BranchManagementUITest.VerifyNumberOfItemsPerPageSelection(BranchManagementUITest.java:128)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:red;" "font-size:25px;">FAILED</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyNumberOfItemsPerPageSelection.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyNumberOfItemsPerPageSelection -->
        <test-method is-config="true" signature="afterEachMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:08:17 IST" name="afterEachMethod" finished-at="2019-11-15T13:08:18 IST" duration-ms="1000" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyNumberOfItemsPerPageSelection status=FAILURE method=BranchManagementUITest.VerifyNumberOfItemsPerPageSelection()[pri:11, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104] output=Test Case <b style="color:red;" "font-size:25px;">FAILED</b>
]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.VerifyNumberOfItemsPerPageSelection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:08:18 IST" name="endTestCase" finished-at="2019-11-15T13:08:18 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.VerifyNumberOfItemsPerPageSelection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:08:18 IST" name="startTestCase" finished-at="2019-11-15T13:08:18 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.ExportToExcel() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage()[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:08:18 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:08:22 IST" duration-ms="4621" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="ExportToExcel()[pri:12, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:08:22 IST" name="ExportToExcel" finished-at="2019-11-15T13:08:35 IST" duration-ms="12950" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\ExportToExcel.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- ExportToExcel -->
        <test-method is-config="true" signature="afterEachMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:08:35 IST" name="afterEachMethod" finished-at="2019-11-15T13:08:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ExportToExcel status=SUCCESS method=BranchManagementUITest.ExportToExcel()[pri:12, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104] output=Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.ExportToExcel() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:08:35 IST" name="endTestCase" finished-at="2019-11-15T13:08:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.ExportToExcel() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:08:35 IST" name="startTestCase" finished-at="2019-11-15T13:08:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.ExportToExcelData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage()[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:08:35 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:08:39 IST" duration-ms="4049" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="ExportToExcelData()[pri:13, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:08:39 IST" name="ExportToExcelData" finished-at="2019-11-15T13:09:32 IST" depends-on-methods="com.tetherfi.test.ivr.BranchManagementUITest.ExportToExcel" duration-ms="52613" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\ExportToExcelData.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- ExportToExcelData -->
        <test-method is-config="true" signature="afterEachMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:09:32 IST" name="afterEachMethod" finished-at="2019-11-15T13:09:32 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ExportToExcelData status=SUCCESS method=BranchManagementUITest.ExportToExcelData()[pri:13, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104] output=Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.ExportToExcelData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:09:32 IST" name="endTestCase" finished-at="2019-11-15T13:09:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.ExportToExcelData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:09:32 IST" name="startTestCase" finished-at="2019-11-15T13:09:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.VerifyExportToExcelWithoutData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage()[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:09:32 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:09:36 IST" duration-ms="3747" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="VerifyExportToExcelWithoutData()[pri:14, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:09:36 IST" name="VerifyExportToExcelWithoutData" finished-at="2019-11-15T13:09:51 IST" duration-ms="15623" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyExportToExcelWithoutData.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyExportToExcelWithoutData -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:09:51 IST" name="endTestCase" finished-at="2019-11-15T13:09:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.VerifyExportToExcelWithoutData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="afterEachMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:09:51 IST" name="afterEachMethod" finished-at="2019-11-15T13:09:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyExportToExcelWithoutData status=SUCCESS method=BranchManagementUITest.VerifyExportToExcelWithoutData()[pri:14, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104] output=Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.VerifyExportToExcelWithoutData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:09:51 IST" name="startTestCase" finished-at="2019-11-15T13:09:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.SortingByAscending() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage()[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:09:51 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:09:55 IST" duration-ms="4081" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="SortingByAscending()[pri:15, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:09:55 IST" name="SortingByAscending" finished-at="2019-11-15T13:10:51 IST" duration-ms="55402" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\SortingByAscending.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- SortingByAscending -->
        <test-method is-config="true" signature="afterEachMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:10:51 IST" name="afterEachMethod" finished-at="2019-11-15T13:10:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SortingByAscending status=SUCCESS method=BranchManagementUITest.SortingByAscending()[pri:15, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104] output=Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.SortingByAscending() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:10:51 IST" name="endTestCase" finished-at="2019-11-15T13:10:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.SortingByAscending() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:10:51 IST" name="startTestCase" finished-at="2019-11-15T13:10:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.SortingByDescending() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage()[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:10:51 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:10:55 IST" duration-ms="4316" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="SortingByDescending()[pri:16, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:10:55 IST" name="SortingByDescending" finished-at="2019-11-15T13:11:51 IST" duration-ms="55831" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\SortingByDescending.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- SortingByDescending -->
        <test-method is-config="true" signature="afterEachMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:11:51 IST" name="afterEachMethod" finished-at="2019-11-15T13:11:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SortingByDescending status=SUCCESS method=BranchManagementUITest.SortingByDescending()[pri:16, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104] output=Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.SortingByDescending() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:11:51 IST" name="endTestCase" finished-at="2019-11-15T13:11:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.SortingByDescending() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:11:51 IST" name="startTestCase" finished-at="2019-11-15T13:11:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.VerifyDragAndDrop()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage()[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:11:51 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:11:55 IST" duration-ms="4037" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="VerifyDragAndDrop()[pri:17, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:11:55 IST" name="VerifyDragAndDrop" finished-at="2019-11-15T13:12:06 IST" duration-ms="11506" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyDragAndDrop.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyDragAndDrop -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:12:06 IST" name="endTestCase" finished-at="2019-11-15T13:12:06 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.VerifyDragAndDrop()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="afterEachMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:12:06 IST" name="afterEachMethod" finished-at="2019-11-15T13:12:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyDragAndDrop status=SUCCESS method=BranchManagementUITest.VerifyDragAndDrop()[pri:17, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104] output=Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.VerifyDragAndDrop()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:12:06 IST" name="startTestCase" finished-at="2019-11-15T13:12:06 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.VerifyDragAndDropofAlreadyGroupedHeader()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage()[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:12:06 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:12:10 IST" duration-ms="3661" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="VerifyDragAndDropofAlreadyGroupedHeader()[pri:18, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:12:10 IST" name="VerifyDragAndDropofAlreadyGroupedHeader" finished-at="2019-11-15T13:12:22 IST" duration-ms="12114" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyDragAndDropofAlreadyGroupedHeader.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyDragAndDropofAlreadyGroupedHeader -->
        <test-method is-config="true" signature="afterEachMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:12:22 IST" name="afterEachMethod" finished-at="2019-11-15T13:12:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyDragAndDropofAlreadyGroupedHeader status=SUCCESS method=BranchManagementUITest.VerifyDragAndDropofAlreadyGroupedHeader()[pri:18, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104] output=Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.VerifyDragAndDropofAlreadyGroupedHeader()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:12:22 IST" name="endTestCase" finished-at="2019-11-15T13:12:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.VerifyDragAndDropofAlreadyGroupedHeader()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage()[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:12:22 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:12:26 IST" duration-ms="3968" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:12:22 IST" name="startTestCase" finished-at="2019-11-15T13:12:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.database() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="database()[pri:19, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:12:26 IST" name="database" finished-at="2019-11-15T13:13:09 IST" duration-ms="42796" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\database.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- database -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:13:09 IST" name="endTestCase" finished-at="2019-11-15T13:13:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.database() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="afterEachMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:13:09 IST" name="afterEachMethod" finished-at="2019-11-15T13:13:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=database status=SUCCESS method=BranchManagementUITest.database()[pri:19, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104] output=Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.database() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:13:09 IST" name="startTestCase" finished-at="2019-11-15T13:13:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.searchPage() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage()[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:13:09 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:13:13 IST" duration-ms="3806" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="searchPage()[pri:20, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:13:13 IST" name="searchPage" finished-at="2019-11-15T13:13:17 IST" duration-ms="4425" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\searchPage.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- searchPage -->
        <test-method is-config="true" signature="afterEachMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:13:17 IST" name="afterEachMethod" finished-at="2019-11-15T13:13:17 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchPage status=SUCCESS method=BranchManagementUITest.searchPage()[pri:20, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104] output=Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.searchPage() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:13:17 IST" name="endTestCase" finished-at="2019-11-15T13:13:17 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.searchPage() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage()[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:13:17 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:13:21 IST" duration-ms="3782" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:13:17 IST" name="startTestCase" finished-at="2019-11-15T13:13:17 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.searchwithoutSearchTextbox() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="searchwithoutSearchTextbox()[pri:21, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:13:21 IST" name="searchwithoutSearchTextbox" finished-at="2019-11-15T13:13:25 IST" duration-ms="3897" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\searchwithoutSearchTextbox.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- searchwithoutSearchTextbox -->
        <test-method is-config="true" signature="afterEachMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:13:25 IST" name="afterEachMethod" finished-at="2019-11-15T13:13:25 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchwithoutSearchTextbox status=SUCCESS method=BranchManagementUITest.searchwithoutSearchTextbox()[pri:21, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104] output=Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.searchwithoutSearchTextbox() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:13:25 IST" name="endTestCase" finished-at="2019-11-15T13:13:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.searchwithoutSearchTextbox() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:13:25 IST" name="startTestCase" finished-at="2019-11-15T13:13:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.SearchClearSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage()[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:13:25 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:13:29 IST" duration-ms="3864" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="SearchClearSearch()[pri:22, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:13:29 IST" name="SearchClearSearch" finished-at="2019-11-15T13:13:34 IST" duration-ms="5091" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\SearchClearSearch.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- SearchClearSearch -->
        <test-method is-config="true" signature="afterEachMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:13:34 IST" name="afterEachMethod" finished-at="2019-11-15T13:13:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SearchClearSearch status=SUCCESS method=BranchManagementUITest.SearchClearSearch()[pri:22, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104] output=Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.SearchClearSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:13:34 IST" name="endTestCase" finished-at="2019-11-15T13:13:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementUITest.SearchClearSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tetherfi.test.ivr.BranchManagementUITest@66a53104]" started-at="2019-11-15T13:13:34 IST" name="tearDown" finished-at="2019-11-15T13:13:39 IST" duration-ms="5148" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.tetherfi.test.ivr.BranchManagementUITest -->
    </test> <!-- Branch Management UI -->
    <test started-at="2019-11-15T13:13:39 IST" name="Branch ManagementCreate" finished-at="2019-11-15T13:35:00 IST" duration-ms="1281026">
      <class name="com.tetherfi.test.ivr.BranchManagementCreateTest">
        <test-method is-config="true" signature="NavigateToBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:13:39 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:14:03 IST" duration-ms="24124" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyAddCancelButton() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="VerifyAddCancelButton()[pri:1, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:14:03 IST" name="VerifyAddCancelButton" finished-at="2019-11-15T13:14:07 IST" duration-ms="3454" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyAddCancelButton.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyAddCancelButton -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:14:07 IST" name="afterEachMethod" finished-at="2019-11-15T13:14:14 IST" duration-ms="7189" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyAddCancelButton() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:14:14 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:14:38 IST" duration-ms="24102" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyAddRecordwithoutMainLines() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="VerifyAddRecordwithoutMainLines()[pri:2, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:14:38 IST" name="VerifyAddRecordwithoutMainLines" finished-at="2019-11-15T13:14:56 IST" duration-ms="17907" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyAddRecordwithoutMainLines.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyAddRecordwithoutMainLines -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:14:56 IST" name="afterEachMethod" finished-at="2019-11-15T13:15:03 IST" duration-ms="6912" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyAddRecordwithoutMainLines() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:15:03 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:15:26 IST" duration-ms="23475" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyAddRecordWithoutSubLines() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="VerifyAddRecordWithoutSubLines()[pri:3, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:15:26 IST" name="VerifyAddRecordWithoutSubLines" finished-at="2019-11-15T13:15:45 IST" duration-ms="18972" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyAddRecordWithoutSubLines.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyAddRecordWithoutSubLines -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:15:45 IST" name="afterEachMethod" finished-at="2019-11-15T13:15:49 IST" duration-ms="3240" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyAddRecordWithoutSubLines() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:15:49 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:16:11 IST" duration-ms="22433" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyAddRecordWithoutLocation() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="VerifyAddRecordWithoutLocation()[pri:4, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:16:11 IST" name="VerifyAddRecordWithoutLocation" finished-at="2019-11-15T13:16:31 IST" duration-ms="19490" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyAddRecordWithoutLocation.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyAddRecordWithoutLocation -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:16:31 IST" name="afterEachMethod" finished-at="2019-11-15T13:16:38 IST" duration-ms="7091" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyAddRecordWithoutLocation() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:16:38 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:17:04 IST" duration-ms="25901" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyAddRecordWithoutBranchType() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="VerifyAddRecordWithoutBranchType()[pri:5, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:17:04 IST" name="VerifyAddRecordWithoutBranchType" finished-at="2019-11-15T13:17:22 IST" duration-ms="18480" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyAddRecordWithoutBranchType.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyAddRecordWithoutBranchType -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:17:22 IST" name="afterEachMethod" finished-at="2019-11-15T13:17:29 IST" duration-ms="7227" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyAddRecordWithoutBranchType() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:17:29 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:17:53 IST" duration-ms="23493" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyAddRecordWithoutBranchName() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="VerifyAddRecordWithoutBranchName()[pri:6, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:17:53 IST" name="VerifyAddRecordWithoutBranchName" finished-at="2019-11-15T13:18:07 IST" duration-ms="14677" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyAddRecordWithoutBranchName.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyAddRecordWithoutBranchName -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:18:07 IST" name="afterEachMethod" finished-at="2019-11-15T13:18:14 IST" duration-ms="7004" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyAddRecordWithoutBranchName() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:18:14 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:18:40 IST" duration-ms="25938" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyAddRecordWithoutAddress() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="VerifyAddRecordWithoutAddress()[pri:7, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:18:40 IST" name="VerifyAddRecordWithoutAddress" finished-at="2019-11-15T13:18:56 IST" duration-ms="15725" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyAddRecordWithoutAddress.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyAddRecordWithoutAddress -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:18:56 IST" name="afterEachMethod" finished-at="2019-11-15T13:19:03 IST" duration-ms="6934" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyAddRecordWithoutAddress() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:19:03 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:19:28 IST" duration-ms="24803" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyAddRecordWithoutLineOrder() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="VerifyAddRecordWithoutLineOrder()[pri:8, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:19:28 IST" name="VerifyAddRecordWithoutLineOrder" finished-at="2019-11-15T13:19:48 IST" duration-ms="19698" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyAddRecordWithoutLineOrder.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyAddRecordWithoutLineOrder -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:19:48 IST" name="afterEachMethod" finished-at="2019-11-15T13:19:55 IST" duration-ms="7158" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyAddRecordWithoutLineOrder() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:19:55 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:20:23 IST" duration-ms="28201" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyAddRecordWithoutStatus() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="VerifyAddRecordWithoutStatus()[pri:9, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:20:23 IST" name="VerifyAddRecordWithoutStatus" finished-at="2019-11-15T13:20:40 IST" duration-ms="17120" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyAddRecordWithoutStatus.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyAddRecordWithoutStatus -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:20:40 IST" name="afterEachMethod" finished-at="2019-11-15T13:20:47 IST" duration-ms="7124" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyAddRecordWithoutStatus() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:20:47 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:21:12 IST" duration-ms="24812" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyAddRecordWithoutLanguage() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="VerifyAddRecordWithoutLanguage()[pri:10, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:21:12 IST" name="VerifyAddRecordWithoutLanguage" finished-at="2019-11-15T13:21:31 IST" duration-ms="18845" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyAddRecordWithoutLanguage.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyAddRecordWithoutLanguage -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:21:31 IST" name="afterEachMethod" finished-at="2019-11-15T13:21:38 IST" duration-ms="6852" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyAddRecordWithoutLanguage() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:21:38 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:22:00 IST" duration-ms="21836" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.AddRevertRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="AddRevertRecord()[pri:11, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:22:00 IST" name="AddRevertRecord" finished-at="2019-11-15T13:22:22 IST" duration-ms="22519" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\AddRevertRecord.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- AddRevertRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:22:22 IST" name="afterEachMethod" finished-at="2019-11-15T13:22:30 IST" duration-ms="7437" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.AddRevertRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:22:30 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:22:52 IST" duration-ms="22600" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyRevertForAddNewRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="VerifyRevertForAddNewRecord()[pri:12, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:22:52 IST" name="VerifyRevertForAddNewRecord" finished-at="2019-11-15T13:23:02 IST" depends-on-methods="com.tetherfi.test.ivr.BranchManagementCreateTest.AddRevertRecord" duration-ms="9987" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyRevertForAddNewRecord.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyRevertForAddNewRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:23:02 IST" name="afterEachMethod" finished-at="2019-11-15T13:23:09 IST" duration-ms="6917" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyRevertForAddNewRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:23:09 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:23:31 IST" duration-ms="22235" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyApprovedDataSectionWithoutApproval() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="VerifyApprovedDataSectionWithoutApproval()[pri:13, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:23:31 IST" name="VerifyApprovedDataSectionWithoutApproval" finished-at="2019-11-15T13:23:35 IST" depends-on-methods="com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyRevertForAddNewRecord" duration-ms="3425" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyApprovedDataSectionWithoutApproval.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyApprovedDataSectionWithoutApproval -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:23:35 IST" name="afterEachMethod" finished-at="2019-11-15T13:23:42 IST" duration-ms="6859" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyApprovedDataSectionWithoutApproval() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:23:42 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:24:03 IST" duration-ms="21420" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyAuditTrailReportForRevert() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="VerifyAuditTrailReportForRevert()[pri:14, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:24:03 IST" name="VerifyAuditTrailReportForRevert" finished-at="2019-11-15T13:24:24 IST" depends-on-methods="com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyApprovedDataSectionWithoutApproval" duration-ms="20985" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyAuditTrailReportForRevert.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrailReportForRevert -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:24:24 IST" name="afterEachMethod" finished-at="2019-11-15T13:24:31 IST" duration-ms="6783" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyAuditTrailReportForRevert() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:24:31 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:24:53 IST" duration-ms="21847" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.AddRejectRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="AddRejectRecord()[pri:15, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:24:53 IST" name="AddRejectRecord" finished-at="2019-11-15T13:25:13 IST" duration-ms="20292" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\AddRejectRecord.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- AddRejectRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:25:13 IST" name="afterEachMethod" finished-at="2019-11-15T13:25:20 IST" duration-ms="7006" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.AddRejectRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:25:20 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:25:43 IST" duration-ms="22662" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifySendForApprovalForAddNewRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="VerifySendForApprovalForAddNewRecord()[pri:16, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:25:43 IST" name="VerifySendForApprovalForAddNewRecord" finished-at="2019-11-15T13:25:53 IST" depends-on-methods="com.tetherfi.test.ivr.BranchManagementCreateTest.AddRejectRecord" duration-ms="9998" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifySendForApprovalForAddNewRecord.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifySendForApprovalForAddNewRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:25:53 IST" name="afterEachMethod" finished-at="2019-11-15T13:25:59 IST" duration-ms="6768" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifySendForApprovalForAddNewRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:25:59 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:26:23 IST" duration-ms="23269" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.RejectforAddNewBranchManagementRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="RejectforAddNewBranchManagementRecord()[pri:17, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:26:23 IST" name="RejectforAddNewBranchManagementRecord" finished-at="2019-11-15T13:26:33 IST" depends-on-methods="com.tetherfi.test.ivr.BranchManagementCreateTest.VerifySendForApprovalForAddNewRecord" duration-ms="9961" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\RejectforAddNewBranchManagementRecord.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- RejectforAddNewBranchManagementRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:26:33 IST" name="afterEachMethod" finished-at="2019-11-15T13:26:39 IST" duration-ms="6798" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.RejectforAddNewBranchManagementRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:26:39 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:27:01 IST" duration-ms="21957" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyAuditTrailReportForReject() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="VerifyAuditTrailReportForReject()[pri:18, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:27:01 IST" name="VerifyAuditTrailReportForReject" finished-at="2019-11-15T13:27:23 IST" depends-on-methods="com.tetherfi.test.ivr.BranchManagementCreateTest.RejectforAddNewBranchManagementRecord" duration-ms="21216" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyAuditTrailReportForReject.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrailReportForReject -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:27:23 IST" name="afterEachMethod" finished-at="2019-11-15T13:27:29 IST" duration-ms="6831" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyAuditTrailReportForReject() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:27:29 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:27:53 IST" duration-ms="23307" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyRecordAfterRejection() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="VerifyRecordAfterRejection()[pri:19, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:27:53 IST" name="VerifyRecordAfterRejection" finished-at="2019-11-15T13:27:57 IST" depends-on-methods="com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyAuditTrailReportForReject" duration-ms="4060" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyRecordAfterRejection.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyRecordAfterRejection -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:27:57 IST" name="afterEachMethod" finished-at="2019-11-15T13:28:04 IST" duration-ms="6827" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyRecordAfterRejection() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:28:04 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:28:26 IST" duration-ms="22404" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.AddNewBranchManagementRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="AddNewBranchManagementRecord()[pri:20, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:28:26 IST" name="AddNewBranchManagementRecord" finished-at="2019-11-15T13:28:45 IST" duration-ms="19497" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\AddNewBranchManagementRecord.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- AddNewBranchManagementRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:28:45 IST" name="afterEachMethod" finished-at="2019-11-15T13:28:53 IST" duration-ms="7669" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.AddNewBranchManagementRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:28:53 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:29:15 IST" duration-ms="21672" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyAuditTrailReportForCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="VerifyAuditTrailReportForCreate()[pri:21, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:29:15 IST" name="VerifyAuditTrailReportForCreate" finished-at="2019-11-15T13:29:36 IST" depends-on-methods="com.tetherfi.test.ivr.BranchManagementCreateTest.AddNewBranchManagementRecord" duration-ms="21029" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyAuditTrailReportForCreate.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrailReportForCreate -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:29:36 IST" name="afterEachMethod" finished-at="2019-11-15T13:29:43 IST" duration-ms="6839" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyAuditTrailReportForCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:29:43 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:30:04 IST" duration-ms="21400" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyAuditTrailDataForAddNewBranchManagementRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="VerifyAuditTrailDataForAddNewBranchManagementRecord()[pri:22, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:30:04 IST" name="VerifyAuditTrailDataForAddNewBranchManagementRecord" finished-at="2019-11-15T13:30:10 IST" duration-ms="5958" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyAuditTrailDataForAddNewBranchManagementRecord.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrailDataForAddNewBranchManagementRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:30:10 IST" name="afterEachMethod" finished-at="2019-11-15T13:30:17 IST" duration-ms="6926" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyAuditTrailDataForAddNewBranchManagementRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:30:17 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:30:39 IST" duration-ms="21885" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifySendForApprovalForAddNewBranchManagementRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="VerifySendForApprovalForAddNewBranchManagementRecord()[pri:23, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:30:39 IST" name="VerifySendForApprovalForAddNewBranchManagementRecord" finished-at="2019-11-15T13:30:49 IST" depends-on-methods="com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyAuditTrailDataForAddNewBranchManagementRecord" duration-ms="10037" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifySendForApprovalForAddNewBranchManagementRecord.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifySendForApprovalForAddNewBranchManagementRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:30:49 IST" name="afterEachMethod" finished-at="2019-11-15T13:30:56 IST" duration-ms="6838" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifySendForApprovalForAddNewBranchManagementRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:30:56 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:31:18 IST" duration-ms="21829" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyAuditTrailReportForSendForApproval() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="VerifyAuditTrailReportForSendForApproval()[pri:24, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:31:18 IST" name="VerifyAuditTrailReportForSendForApproval" finished-at="2019-11-15T13:31:39 IST" depends-on-methods="com.tetherfi.test.ivr.BranchManagementCreateTest.VerifySendForApprovalForAddNewBranchManagementRecord" duration-ms="21309" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyAuditTrailReportForSendForApproval.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrailReportForSendForApproval -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:31:39 IST" name="afterEachMethod" finished-at="2019-11-15T13:31:46 IST" duration-ms="6943" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyAuditTrailReportForSendForApproval() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:31:46 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:32:10 IST" duration-ms="24583" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.ApproveforAddNewBranchManagementRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="ApproveforAddNewBranchManagementRecord()[pri:25, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:32:10 IST" name="ApproveforAddNewBranchManagementRecord" finished-at="2019-11-15T13:32:36 IST" depends-on-methods="com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyAuditTrailReportForSendForApproval" duration-ms="25989" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\ApproveforAddNewBranchManagementRecord.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- ApproveforAddNewBranchManagementRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:32:36 IST" name="afterEachMethod" finished-at="2019-11-15T13:32:43 IST" duration-ms="6889" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.ApproveforAddNewBranchManagementRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:32:43 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:33:07 IST" duration-ms="23391" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyAuditTrailReportForApprove() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="VerifyAuditTrailReportForApprove()[pri:26, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:33:07 IST" name="VerifyAuditTrailReportForApprove" finished-at="2019-11-15T13:33:28 IST" depends-on-methods="com.tetherfi.test.ivr.BranchManagementCreateTest.ApproveforAddNewBranchManagementRecord" duration-ms="21597" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyAuditTrailReportForApprove.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrailReportForApprove -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:33:28 IST" name="afterEachMethod" finished-at="2019-11-15T13:33:35 IST" duration-ms="7181" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyAuditTrailReportForApprove() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:33:35 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:33:58 IST" duration-ms="22538" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyRecordApprovedDataSectionafterApproval() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="VerifyRecordApprovedDataSectionafterApproval()[pri:27, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:33:58 IST" name="VerifyRecordApprovedDataSectionafterApproval" finished-at="2019-11-15T13:34:02 IST" depends-on-methods="com.tetherfi.test.ivr.BranchManagementCreateTest.ApproveforAddNewBranchManagementRecord" duration-ms="3545" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyRecordApprovedDataSectionafterApproval.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyRecordApprovedDataSectionafterApproval -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:34:02 IST" name="afterEachMethod" finished-at="2019-11-15T13:34:08 IST" duration-ms="6734" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.VerifyRecordApprovedDataSectionafterApproval() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:34:08 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:34:33 IST" duration-ms="24510" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.AddDuplicateRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="AddDuplicateRecord()[pri:28, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:34:33 IST" name="AddDuplicateRecord" finished-at="2019-11-15T13:34:52 IST" depends-on-methods="com.tetherfi.test.ivr.BranchManagementCreateTest.AddNewBranchManagementRecord" duration-ms="19495" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\AddDuplicateRecord.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- AddDuplicateRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementCreateTest@2251b3bc]" started-at="2019-11-15T13:34:52 IST" name="afterEachMethod" finished-at="2019-11-15T13:35:00 IST" duration-ms="8028" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementCreateTest.AddDuplicateRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
      </class> <!-- com.tetherfi.test.ivr.BranchManagementCreateTest -->
    </test> <!-- Branch ManagementCreate -->
    <test started-at="2019-11-15T13:35:00 IST" name="Branch ManagementEDit" finished-at="2019-11-15T13:45:32 IST" duration-ms="631212">
      <class name="com.tetherfi.test.ivr.BranchManagementEditTest">
        <test-method is-config="true" signature="NavigateBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:35:00 IST" name="NavigateBranchManagementPage" finished-at="2019-11-15T13:35:25 IST" duration-ms="24314" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementEditTest.EditCancelBranchManagementRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateBranchManagementPage -->
        <test-method signature="EditCancelBranchManagementRecord()[pri:1, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:35:25 IST" name="EditCancelBranchManagementRecord" finished-at="2019-11-15T13:35:34 IST" duration-ms="8794" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\EditCancelBranchManagementRecord.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- EditCancelBranchManagementRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:35:34 IST" name="afterEachMethod" finished-at="2019-11-15T13:35:40 IST" duration-ms="6855" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementEditTest.EditCancelBranchManagementRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:35:40 IST" name="NavigateBranchManagementPage" finished-at="2019-11-15T13:36:05 IST" duration-ms="25064" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementEditTest.EditRecordWithoutModifyReaosn() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateBranchManagementPage -->
        <test-method signature="EditRecordWithoutModifyReaosn()[pri:2, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:36:05 IST" name="EditRecordWithoutModifyReaosn" finished-at="2019-11-15T13:36:15 IST" duration-ms="9404" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\EditRecordWithoutModifyReaosn.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- EditRecordWithoutModifyReaosn -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:36:15 IST" name="afterEachMethod" finished-at="2019-11-15T13:36:22 IST" duration-ms="6870" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementEditTest.EditRecordWithoutModifyReaosn() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:36:22 IST" name="NavigateBranchManagementPage" finished-at="2019-11-15T13:36:45 IST" duration-ms="23283" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementEditTest.EditRevertBranchManagementRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateBranchManagementPage -->
        <test-method signature="EditRevertBranchManagementRecord()[pri:3, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:36:45 IST" name="EditRevertBranchManagementRecord" finished-at="2019-11-15T13:36:57 IST" duration-ms="11595" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\EditRevertBranchManagementRecord.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- EditRevertBranchManagementRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:36:57 IST" name="afterEachMethod" finished-at="2019-11-15T13:37:04 IST" duration-ms="6957" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementEditTest.EditRevertBranchManagementRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:37:04 IST" name="NavigateBranchManagementPage" finished-at="2019-11-15T13:37:27 IST" duration-ms="23704" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementEditTest.VerifyRevertForEditRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateBranchManagementPage -->
        <test-method signature="VerifyRevertForEditRecord()[pri:4, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:37:27 IST" name="VerifyRevertForEditRecord" finished-at="2019-11-15T13:37:37 IST" depends-on-methods="com.tetherfi.test.ivr.BranchManagementEditTest.EditRevertBranchManagementRecord" duration-ms="9969" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyRevertForEditRecord.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyRevertForEditRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:37:37 IST" name="afterEachMethod" finished-at="2019-11-15T13:37:44 IST" duration-ms="7065" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementEditTest.VerifyRevertForEditRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:37:44 IST" name="NavigateBranchManagementPage" finished-at="2019-11-15T13:38:05 IST" duration-ms="20281" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementEditTest.VerifyAuditTrialReportForRevertUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateBranchManagementPage -->
        <test-method signature="VerifyAuditTrialReportForRevertUpdate()[pri:5, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:38:05 IST" name="VerifyAuditTrialReportForRevertUpdate" finished-at="2019-11-15T13:38:26 IST" depends-on-methods="com.tetherfi.test.ivr.BranchManagementEditTest.VerifyRevertForEditRecord" duration-ms="21626" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at com.tetherfi.test.ivr.BranchManagementEditTest.VerifyAuditTrialReportForRevertUpdate(BranchManagementEditTest.java:117)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:red;" "font-size:25px;">FAILED</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyAuditTrialReportForRevertUpdate.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrialReportForRevertUpdate -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:38:26 IST" name="afterEachMethod" finished-at="2019-11-15T13:38:33 IST" duration-ms="6985" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementEditTest.VerifyAuditTrialReportForRevertUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:38:33 IST" name="NavigateBranchManagementPage" finished-at="2019-11-15T13:38:55 IST" duration-ms="21519" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementEditTest.EditRejectRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateBranchManagementPage -->
        <test-method signature="EditRejectRecord()[pri:6, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:38:55 IST" name="EditRejectRecord" finished-at="2019-11-15T13:39:06 IST" duration-ms="11047" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\EditRejectRecord.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- EditRejectRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:39:06 IST" name="afterEachMethod" finished-at="2019-11-15T13:39:13 IST" duration-ms="7039" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementEditTest.EditRejectRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:39:13 IST" name="NavigateBranchManagementPage" finished-at="2019-11-15T13:39:35 IST" duration-ms="22001" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementEditTest.VerifySendForApprovalForEditRejectRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateBranchManagementPage -->
        <test-method signature="VerifySendForApprovalForEditRejectRecord()[pri:7, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:39:35 IST" name="VerifySendForApprovalForEditRejectRecord" finished-at="2019-11-15T13:39:45 IST" depends-on-methods="com.tetherfi.test.ivr.BranchManagementEditTest.EditRejectRecord" duration-ms="9946" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifySendForApprovalForEditRejectRecord.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifySendForApprovalForEditRejectRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:39:45 IST" name="afterEachMethod" finished-at="2019-11-15T13:39:52 IST" duration-ms="6817" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementEditTest.VerifySendForApprovalForEditRejectRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:39:52 IST" name="NavigateBranchManagementPage" finished-at="2019-11-15T13:40:13 IST" duration-ms="21386" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementEditTest.RejectforEditBranchManagementRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateBranchManagementPage -->
        <test-method signature="RejectforEditBranchManagementRecord()[pri:8, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:40:13 IST" name="RejectforEditBranchManagementRecord" finished-at="2019-11-15T13:40:23 IST" duration-ms="9951" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\RejectforEditBranchManagementRecord.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- RejectforEditBranchManagementRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:40:23 IST" name="afterEachMethod" finished-at="2019-11-15T13:40:30 IST" duration-ms="6874" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementEditTest.RejectforEditBranchManagementRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:40:30 IST" name="NavigateBranchManagementPage" finished-at="2019-11-15T13:40:51 IST" duration-ms="21021" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementEditTest.VerifyAuditTrailReportForReject() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateBranchManagementPage -->
        <test-method signature="VerifyAuditTrailReportForReject()[pri:9, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:40:51 IST" name="VerifyAuditTrailReportForReject" finished-at="2019-11-15T13:41:13 IST" depends-on-methods="com.tetherfi.test.ivr.BranchManagementEditTest.RejectforEditBranchManagementRecord" duration-ms="21776" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Audit Trail report assertion failed did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Audit Trail report assertion failed did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at com.tetherfi.test.ivr.BranchManagementEditTest.VerifyAuditTrailReportForReject(BranchManagementEditTest.java:159)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:red;" "font-size:25px;">FAILED</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyAuditTrailReportForReject.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrailReportForReject -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:41:13 IST" name="afterEachMethod" finished-at="2019-11-15T13:41:19 IST" duration-ms="6862" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementEditTest.VerifyAuditTrailReportForReject() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:41:19 IST" name="NavigateBranchManagementPage" finished-at="2019-11-15T13:41:41 IST" duration-ms="21950" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementEditTest.EditBranchManagementRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateBranchManagementPage -->
        <test-method signature="EditBranchManagementRecord()[pri:10, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:41:41 IST" name="EditBranchManagementRecord" finished-at="2019-11-15T13:41:53 IST" duration-ms="11237" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\EditBranchManagementRecord.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- EditBranchManagementRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:41:53 IST" name="afterEachMethod" finished-at="2019-11-15T13:42:00 IST" duration-ms="6981" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementEditTest.EditBranchManagementRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:42:00 IST" name="NavigateBranchManagementPage" finished-at="2019-11-15T13:42:23 IST" duration-ms="23295" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementEditTest.VerifyAuditTrailDataForEditBranchManagementRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateBranchManagementPage -->
        <test-method signature="VerifyAuditTrailDataForEditBranchManagementRecord()[pri:11, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:42:23 IST" name="VerifyAuditTrailDataForEditBranchManagementRecord" finished-at="2019-11-15T13:42:29 IST" depends-on-methods="com.tetherfi.test.ivr.BranchManagementEditTest.EditBranchManagementRecord" duration-ms="6010" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyAuditTrailDataForEditBranchManagementRecord.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrailDataForEditBranchManagementRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:42:29 IST" name="afterEachMethod" finished-at="2019-11-15T13:42:36 IST" duration-ms="6938" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementEditTest.VerifyAuditTrailDataForEditBranchManagementRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:42:36 IST" name="NavigateBranchManagementPage" finished-at="2019-11-15T13:42:58 IST" duration-ms="22221" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementEditTest.VerifyAuditTrialReportForUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateBranchManagementPage -->
        <test-method signature="VerifyAuditTrialReportForUpdate()[pri:12, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:42:58 IST" name="VerifyAuditTrialReportForUpdate" finished-at="2019-11-15T13:43:19 IST" depends-on-methods="com.tetherfi.test.ivr.BranchManagementEditTest.EditBranchManagementRecord" duration-ms="20997" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyAuditTrialReportForUpdate.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrialReportForUpdate -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:43:19 IST" name="afterEachMethod" finished-at="2019-11-15T13:43:26 IST" duration-ms="6943" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementEditTest.VerifyAuditTrialReportForUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:43:26 IST" name="NavigateBranchManagementPage" finished-at="2019-11-15T13:43:48 IST" duration-ms="21455" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementEditTest.VerifySendForApprovalForRejectRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateBranchManagementPage -->
        <test-method signature="VerifySendForApprovalForRejectRecord()[pri:13, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:43:48 IST" name="VerifySendForApprovalForRejectRecord" finished-at="2019-11-15T13:43:58 IST" depends-on-methods="com.tetherfi.test.ivr.BranchManagementEditTest.VerifyAuditTrialReportForUpdate" duration-ms="9995" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifySendForApprovalForRejectRecord.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifySendForApprovalForRejectRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:43:58 IST" name="afterEachMethod" finished-at="2019-11-15T13:44:04 IST" duration-ms="6850" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementEditTest.VerifySendForApprovalForRejectRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:44:04 IST" name="NavigateBranchManagementPage" finished-at="2019-11-15T13:44:26 IST" duration-ms="21619" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementEditTest.VerifyAuditTrialReportForSendForApprovalUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateBranchManagementPage -->
        <test-method signature="VerifyAuditTrialReportForSendForApprovalUpdate()[pri:14, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:44:26 IST" name="VerifyAuditTrialReportForSendForApprovalUpdate" finished-at="2019-11-15T13:44:47 IST" depends-on-methods="com.tetherfi.test.ivr.BranchManagementEditTest.VerifySendForApprovalForRejectRecord" duration-ms="20699" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at com.tetherfi.test.ivr.BranchManagementEditTest.VerifyAuditTrialReportForSendForApprovalUpdate(BranchManagementEditTest.java:219)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:red;" "font-size:25px;">FAILED</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyAuditTrialReportForSendForApprovalUpdate.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrialReportForSendForApprovalUpdate -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:44:47 IST" name="afterEachMethod" finished-at="2019-11-15T13:44:54 IST" duration-ms="6905" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementEditTest.VerifyAuditTrialReportForSendForApprovalUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:44:54 IST" name="NavigateBranchManagementPage" finished-at="2019-11-15T13:45:18 IST" duration-ms="23990" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementEditTest.ApproveforEditBranchManagementRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateBranchManagementPage -->
        <test-method signature="ApproveforEditBranchManagementRecord()[pri:15, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:45:18 IST" name="ApproveforEditBranchManagementRecord" finished-at="2019-11-15T13:45:25 IST" duration-ms="7086" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at com.tetherfi.test.ivr.BranchManagementEditTest.ApproveforEditBranchManagementRecord(BranchManagementEditTest.java:226)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:red;" "font-size:25px;">FAILED</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\ApproveforEditBranchManagementRecord.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- ApproveforEditBranchManagementRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:45:25 IST" name="afterEachMethod" finished-at="2019-11-15T13:45:32 IST" duration-ms="6971" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementEditTest.ApproveforEditBranchManagementRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method signature="VerifyAuditTrailReportForApprove()[pri:16, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105]" started-at="2019-11-15T13:45:32 IST" name="VerifyAuditTrailReportForApprove" finished-at="2019-11-15T13:45:32 IST" depends-on-methods="com.tetherfi.test.ivr.BranchManagementEditTest.ApproveforEditBranchManagementRecord" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method BranchManagementEditTest.VerifyAuditTrailReportForApprove()[pri:16, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method BranchManagementEditTest.VerifyAuditTrailReportForApprove()[pri:16, instance:com.tetherfi.test.ivr.BranchManagementEditTest@3e214105] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:99)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrailReportForApprove -->
      </class> <!-- com.tetherfi.test.ivr.BranchManagementEditTest -->
    </test> <!-- Branch ManagementEDit -->
    <test started-at="2019-11-15T13:45:32 IST" name="Branch ManagementDelete" finished-at="2019-11-15T13:54:22 IST" duration-ms="529912">
      <class name="com.tetherfi.test.ivr.BranchManagementDeleteTest">
        <test-method is-config="true" signature="NavigateToBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:45:32 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:45:55 IST" duration-ms="22803" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementDeleteTest.DeleteCancelBranchManagementRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="DeleteCancelBranchManagementRecord()[pri:1, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:45:55 IST" name="DeleteCancelBranchManagementRecord" finished-at="2019-11-15T13:46:02 IST" duration-ms="7453" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\DeleteCancelBranchManagementRecord.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- DeleteCancelBranchManagementRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:46:02 IST" name="afterEachMethod" finished-at="2019-11-15T13:46:09 IST" duration-ms="6853" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementDeleteTest.DeleteCancelBranchManagementRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:46:09 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:46:31 IST" duration-ms="22589" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementDeleteTest.DeleteRecordWithoutDeleteReason() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="DeleteRecordWithoutDeleteReason()[pri:2, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:46:31 IST" name="DeleteRecordWithoutDeleteReason" finished-at="2019-11-15T13:46:41 IST" duration-ms="9854" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\DeleteRecordWithoutDeleteReason.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- DeleteRecordWithoutDeleteReason -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:46:41 IST" name="afterEachMethod" finished-at="2019-11-15T13:46:48 IST" duration-ms="6841" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementDeleteTest.DeleteRecordWithoutDeleteReason() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:46:48 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:47:10 IST" duration-ms="21767" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementDeleteTest.DeleteRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="DeleteRecord()[pri:3, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:47:10 IST" name="DeleteRecord" finished-at="2019-11-15T13:47:20 IST" duration-ms="10474" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\DeleteRecord.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- DeleteRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:47:20 IST" name="afterEachMethod" finished-at="2019-11-15T13:47:27 IST" duration-ms="6766" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementDeleteTest.DeleteRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:47:27 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:47:49 IST" duration-ms="21651" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementDeleteTest.VerifyRevertForDeleteRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="VerifyRevertForDeleteRecord()[pri:4, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:47:49 IST" name="VerifyRevertForDeleteRecord" finished-at="2019-11-15T13:47:59 IST" depends-on-methods="com.tetherfi.test.ivr.BranchManagementDeleteTest.DeleteRecord" duration-ms="9928" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[approval status details failed did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: approval status details failed did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at com.tetherfi.test.ivr.BranchManagementDeleteTest.VerifyRevertForDeleteRecord(BranchManagementDeleteTest.java:103)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:red;" "font-size:25px;">FAILED</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyRevertForDeleteRecord.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyRevertForDeleteRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:47:59 IST" name="afterEachMethod" finished-at="2019-11-15T13:48:06 IST" duration-ms="6922" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementDeleteTest.VerifyRevertForDeleteRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method signature="VerifyAuditTrialReportForRevertDelete()[pri:5, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:48:06 IST" name="VerifyAuditTrialReportForRevertDelete" finished-at="2019-11-15T13:48:06 IST" depends-on-methods="com.tetherfi.test.ivr.BranchManagementDeleteTest.VerifyRevertForDeleteRecord" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method BranchManagementDeleteTest.VerifyAuditTrialReportForRevertDelete()[pri:5, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method BranchManagementDeleteTest.VerifyAuditTrialReportForRevertDelete()[pri:5, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:99)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrialReportForRevertDelete -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:48:06 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:48:29 IST" duration-ms="23625" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementDeleteTest.RejectDeleteRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="RejectDeleteRecord()[pri:6, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:48:29 IST" name="RejectDeleteRecord" finished-at="2019-11-15T13:48:39 IST" duration-ms="10170" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\RejectDeleteRecord.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- RejectDeleteRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:48:39 IST" name="afterEachMethod" finished-at="2019-11-15T13:48:46 IST" duration-ms="6961" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementDeleteTest.RejectDeleteRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:48:46 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:49:08 IST" duration-ms="21362" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementDeleteTest.VerifySendForApprovalForDeleteNewRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="VerifySendForApprovalForDeleteNewRecord()[pri:7, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:49:08 IST" name="VerifySendForApprovalForDeleteNewRecord" finished-at="2019-11-15T13:49:18 IST" depends-on-methods="com.tetherfi.test.ivr.BranchManagementDeleteTest.RejectDeleteRecord" duration-ms="9965" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifySendForApprovalForDeleteNewRecord.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifySendForApprovalForDeleteNewRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:49:18 IST" name="afterEachMethod" finished-at="2019-11-15T13:49:25 IST" duration-ms="6828" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementDeleteTest.VerifySendForApprovalForDeleteNewRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:49:25 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:49:46 IST" duration-ms="21742" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementDeleteTest.RejectforDeleteBranchManagementRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="RejectforDeleteBranchManagementRecord()[pri:8, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:49:46 IST" name="RejectforDeleteBranchManagementRecord" finished-at="2019-11-15T13:49:56 IST" depends-on-methods="com.tetherfi.test.ivr.BranchManagementDeleteTest.VerifySendForApprovalForDeleteNewRecord" duration-ms="9844" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at com.tetherfi.test.ivr.BranchManagementDeleteTest.RejectforDeleteBranchManagementRecord(BranchManagementDeleteTest.java:145)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:red;" "font-size:25px;">FAILED</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\RejectforDeleteBranchManagementRecord.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- RejectforDeleteBranchManagementRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:49:56 IST" name="afterEachMethod" finished-at="2019-11-15T13:50:03 IST" duration-ms="6902" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementDeleteTest.RejectforDeleteBranchManagementRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method signature="VerifyAuditTrailReportForReject()[pri:9, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:50:03 IST" name="VerifyAuditTrailReportForReject" finished-at="2019-11-15T13:50:03 IST" depends-on-methods="com.tetherfi.test.ivr.BranchManagementDeleteTest.RejectforDeleteBranchManagementRecord" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method BranchManagementDeleteTest.VerifyAuditTrailReportForReject()[pri:9, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method BranchManagementDeleteTest.VerifyAuditTrailReportForReject()[pri:9, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:99)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrailReportForReject -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:50:03 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:50:24 IST" duration-ms="21276" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementDeleteTest.DeleteBranchManagementRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="DeleteBranchManagementRecord()[pri:10, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:50:24 IST" name="DeleteBranchManagementRecord" finished-at="2019-11-15T13:50:34 IST" duration-ms="9783" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\DeleteBranchManagementRecord.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- DeleteBranchManagementRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:50:34 IST" name="afterEachMethod" finished-at="2019-11-15T13:50:41 IST" duration-ms="6935" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementDeleteTest.DeleteBranchManagementRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:50:41 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:51:04 IST" duration-ms="22575" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementDeleteTest.VerifyAuditTrialReportForDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="VerifyAuditTrialReportForDelete()[pri:11, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:51:04 IST" name="VerifyAuditTrialReportForDelete" finished-at="2019-11-15T13:51:25 IST" depends-on-methods="com.tetherfi.test.ivr.BranchManagementDeleteTest.DeleteBranchManagementRecord" duration-ms="21773" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyAuditTrialReportForDelete.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrialReportForDelete -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:51:25 IST" name="afterEachMethod" finished-at="2019-11-15T13:51:32 IST" duration-ms="7038" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementDeleteTest.VerifyAuditTrialReportForDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:51:32 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:51:55 IST" duration-ms="22469" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementDeleteTest.VerifyAuditTrailDataForDeleteBranchManagementRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="VerifyAuditTrailDataForDeleteBranchManagementRecord()[pri:12, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:51:55 IST" name="VerifyAuditTrailDataForDeleteBranchManagementRecord" finished-at="2019-11-15T13:52:01 IST" duration-ms="5966" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyAuditTrailDataForDeleteBranchManagementRecord.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrailDataForDeleteBranchManagementRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:52:01 IST" name="afterEachMethod" finished-at="2019-11-15T13:52:08 IST" duration-ms="6838" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementDeleteTest.VerifyAuditTrailDataForDeleteBranchManagementRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:52:08 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:52:33 IST" duration-ms="25088" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementDeleteTest.VerifySendForApprovalForDeleteRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="VerifySendForApprovalForDeleteRecord()[pri:13, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:52:33 IST" name="VerifySendForApprovalForDeleteRecord" finished-at="2019-11-15T13:52:43 IST" depends-on-methods="com.tetherfi.test.ivr.BranchManagementDeleteTest.VerifyAuditTrailDataForDeleteBranchManagementRecord" duration-ms="9909" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:green;" "font-size:25px;">Passed</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifySendForApprovalForDeleteRecord.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifySendForApprovalForDeleteRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:52:43 IST" name="afterEachMethod" finished-at="2019-11-15T13:52:50 IST" duration-ms="6810" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementDeleteTest.VerifySendForApprovalForDeleteRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:52:50 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:53:13 IST" duration-ms="23116" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementDeleteTest.VerifyAuditTrailReportForSendForApprove() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="VerifyAuditTrailReportForSendForApprove()[pri:14, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:53:13 IST" name="VerifyAuditTrailReportForSendForApprove" finished-at="2019-11-15T13:53:34 IST" depends-on-methods="com.tetherfi.test.ivr.BranchManagementDeleteTest.VerifySendForApprovalForDeleteRecord" duration-ms="21820" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Audit Trail report assertion failed did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Audit Trail report assertion failed did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at com.tetherfi.test.ivr.BranchManagementDeleteTest.VerifyAuditTrailReportForSendForApprove(BranchManagementDeleteTest.java:219)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:red;" "font-size:25px;">FAILED</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\VerifyAuditTrailReportForSendForApprove.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrailReportForSendForApprove -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:53:34 IST" name="afterEachMethod" finished-at="2019-11-15T13:53:42 IST" duration-ms="7084" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementDeleteTest.VerifyAuditTrailReportForSendForApprove() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="NavigateToBranchManagementPage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:53:42 IST" name="NavigateToBranchManagementPage" finished-at="2019-11-15T13:54:04 IST" duration-ms="21966" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementDeleteTest.ApproveforDeleteBranchManagementRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToBranchManagementPage -->
        <test-method signature="ApproveforDeleteBranchManagementRecord()[pri:15, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:54:04 IST" name="ApproveforDeleteBranchManagementRecord" finished-at="2019-11-15T13:54:15 IST" duration-ms="11328" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at com.tetherfi.test.ivr.BranchManagementDeleteTest.ApproveforDeleteBranchManagementRecord(BranchManagementDeleteTest.java:227)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test Case <b style="color:red;" "font-size:25px;">FAILED</b>
]]>
            </line>
            <line>
              <![CDATA[<img src="Screenshot\ApproveforDeleteBranchManagementRecord.jpg" alt="Image Not Found"/><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- ApproveforDeleteBranchManagementRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:54:15 IST" name="afterEachMethod" finished-at="2019-11-15T13:54:22 IST" duration-ms="6785" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.BranchManagementDeleteTest.ApproveforDeleteBranchManagementRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method signature="VerifyAuditTrailReportForApprove()[pri:16, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23]" started-at="2019-11-15T13:54:22 IST" name="VerifyAuditTrailReportForApprove" finished-at="2019-11-15T13:54:22 IST" depends-on-methods="com.tetherfi.test.ivr.BranchManagementDeleteTest.ApproveforDeleteBranchManagementRecord" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method BranchManagementDeleteTest.VerifyAuditTrailReportForApprove()[pri:16, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method BranchManagementDeleteTest.VerifyAuditTrailReportForApprove()[pri:16, instance:com.tetherfi.test.ivr.BranchManagementDeleteTest@43f03c23] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:99)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrailReportForApprove -->
      </class> <!-- com.tetherfi.test.ivr.BranchManagementDeleteTest -->
    </test> <!-- Branch ManagementDelete -->
  </suite> <!-- Tetherfi Test Automation -->
</testng-results>
