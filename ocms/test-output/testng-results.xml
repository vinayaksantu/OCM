<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="6" ignored="0" total="45" passed="39">
  <reporter-output>
  </reporter-output>
  <suite name="OCM Modules Test Automation" duration-ms="1396906" started-at="2021-08-06T02:20:17 IST" finished-at="2021-08-06T02:43:34 IST">
    <groups>
      <group name="Checker">
        <method signature="FaxTemplateAutoACKTypeCreateTest.VerifyApprovedDataSectionAfterApproval()[pri:17, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="VerifyApprovedDataSectionAfterApproval" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest"/>
        <method signature="FaxTemplateAutoACKTypeCreateTest.ApproveForAddNewFaxTemplateRecord()[pri:15, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="ApproveForAddNewFaxTemplateRecord" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest"/>
        <method signature="FaxTemplateAutoACKTypeCreateTest.VerifyAuditTrailReportForApprove()[pri:16, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="VerifyAuditTrailReportForApprove" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest"/>
        <method signature="FaxTemplateAutoACKTypeCreateTest.RejectForAddNewFaxTemplateRecord()[pri:7, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="RejectForAddNewFaxTemplateRecord" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest"/>
        <method signature="FaxTemplateAutoACKTypeCreateTest.VerifyAuditTrailReportForRejectRecord()[pri:8, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="VerifyAuditTrailReportForRejectRecord" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest"/>
        <method signature="FaxTemplateAutoACKTypeDeleteTest.ApproveForDeleteFaxTemplateRecord()[pri:15, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest@2415e4c7]" name="ApproveForDeleteFaxTemplateRecord" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest"/>
        <method signature="FaxTemplateAutoACKTypeDeleteTest.VerifyAuditTrailReportForApprove()[pri:16, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest@2415e4c7]" name="VerifyAuditTrailReportForApprove" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest"/>
        <method signature="FaxTemplateAutoACKTypeDeleteTest.RejectForDeleteFaxTemplateRecord()[pri:8, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest@2415e4c7]" name="RejectForDeleteFaxTemplateRecord" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest"/>
        <method signature="FaxTemplateAutoACKTypeDeleteTest.VerifyAuditTrailReportForRejectRecord()[pri:9, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest@2415e4c7]" name="VerifyAuditTrailReportForRejectRecord" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest"/>
        <method signature="FaxTemplateAutoACKTypeUpdateTest.ApproveForUpdatedFaxTemplateRecord()[pri:13, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest@510689af]" name="ApproveForUpdatedFaxTemplateRecord" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest"/>
        <method signature="FaxTemplateAutoACKTypeUpdateTest.VerifyAuditTrailReportForApprove()[pri:14, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest@510689af]" name="VerifyAuditTrailReportForApprove" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest"/>
        <method signature="FaxTemplateAutoACKTypeUpdateTest.RejectforEditFaxTemplateRecord()[pri:6, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest@510689af]" name="RejectforEditFaxTemplateRecord" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest"/>
        <method signature="FaxTemplateAutoACKTypeUpdateTest.VerifyAuditTrailReportForRejectRecord()[pri:7, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest@510689af]" name="VerifyAuditTrailReportForRejectRecord" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest"/>
      </group> <!-- Checker -->
      <group name="Maker">
        <method signature="FaxTemplateAutoACKTypeCreateTest.AddAutoACKTemplateTypetoRevertRecord()[pri:1, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="AddAutoACKTemplateTypetoRevertRecord" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest"/>
        <method signature="FaxTemplateAutoACKTypeCreateTest.AddRejectRecord()[pri:5, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="AddRejectRecord" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest"/>
        <method signature="FaxTemplateAutoACKTypeCreateTest.VerifyAuditTrailReportForApproveRecord()[pri:11, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="VerifyAuditTrailReportForApproveRecord" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest"/>
        <method signature="FaxTemplateAutoACKTypeCreateTest.VerifyAuditTrailDataForApproveRecord()[pri:12, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="VerifyAuditTrailDataForApproveRecord" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest"/>
        <method signature="FaxTemplateAutoACKTypeCreateTest.VerifyAuditTrailReportForRevertRecord()[pri:4, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="VerifyAuditTrailReportForRevertRecord" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest"/>
        <method signature="FaxTemplateAutoACKTypeCreateTest.VerifyRecordAfterRejection()[pri:9, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="VerifyRecordAfterRejection" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest"/>
        <method signature="FaxTemplateAutoACKTypeCreateTest.VerifyRevertforAddNewRecord()[pri:2, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="VerifyRevertforAddNewRecord" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest"/>
        <method signature="FaxTemplateAutoACKTypeCreateTest.VerifyApprovedDataSectionWithOutApproval()[pri:3, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="VerifyApprovedDataSectionWithOutApproval" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest"/>
        <method signature="FaxTemplateAutoACKTypeCreateTest.VerifySendForApprovalAddNewApproveRecord()[pri:13, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="VerifySendForApprovalAddNewApproveRecord" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest"/>
        <method signature="FaxTemplateAutoACKTypeCreateTest.VerifyAuditTrailReportForSendForApproval()[pri:14, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="VerifyAuditTrailReportForSendForApproval" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest"/>
        <method signature="FaxTemplateAutoACKTypeCreateTest.VerifySendForApprovalAddNewRecord()[pri:6, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="VerifySendForApprovalAddNewRecord" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest"/>
        <method signature="FaxTemplateAutoACKTypeCreateTest.addApproveRecord()[pri:10, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="addApproveRecord" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest"/>
        <method signature="FaxTemplateAutoACKTypeCreateTest.addDuplicateRecord()[pri:18, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="addDuplicateRecord" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest"/>
        <method signature="FaxTemplateAutoACKTypeDeleteTest.VerifyAuditTrailReportForDeleteApproveRecord()[pri:11, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest@2415e4c7]" name="VerifyAuditTrailReportForDeleteApproveRecord" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest"/>
        <method signature="FaxTemplateAutoACKTypeDeleteTest.VerifyAuditTrailDataForApproveRecord()[pri:12, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest@2415e4c7]" name="VerifyAuditTrailDataForApproveRecord" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest"/>
        <method signature="FaxTemplateAutoACKTypeDeleteTest.VerifyAuditTrailReportForDeleteRevertRecord()[pri:5, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest@2415e4c7]" name="VerifyAuditTrailReportForDeleteRevertRecord" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest"/>
        <method signature="FaxTemplateAutoACKTypeDeleteTest.VerifyDeleteAutoACKFaxTemplateRevertRecord()[pri:3, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest@2415e4c7]" name="VerifyDeleteAutoACKFaxTemplateRevertRecord" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest"/>
        <method signature="FaxTemplateAutoACKTypeDeleteTest.VerifyDeleteAutoACKTypeFaxTemplateApproveRecord()[pri:10, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest@2415e4c7]" name="VerifyDeleteAutoACKTypeFaxTemplateApproveRecord" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest"/>
        <method signature="FaxTemplateAutoACKTypeDeleteTest.VerifyDeleteAutoACKTypeFaxTemplateRecordWithOutDeleteReason()[pri:2, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest@2415e4c7]" name="VerifyDeleteAutoACKTypeFaxTemplateRecordWithOutDeleteReason" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest"/>
        <method signature="FaxTemplateAutoACKTypeDeleteTest.VerifyDeleteAutoACKTypeFaxTemplateRejectRecord()[pri:6, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest@2415e4c7]" name="VerifyDeleteAutoACKTypeFaxTemplateRejectRecord" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest"/>
        <method signature="FaxTemplateAutoACKTypeDeleteTest.VerifyDeleteCancelAutoACKTypeFaxTemplateRecord()[pri:1, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest@2415e4c7]" name="VerifyDeleteCancelAutoACKTypeFaxTemplateRecord" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest"/>
        <method signature="FaxTemplateAutoACKTypeDeleteTest.VerifyRevertforDeleteRecord()[pri:4, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest@2415e4c7]" name="VerifyRevertforDeleteRecord" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest"/>
        <method signature="FaxTemplateAutoACKTypeDeleteTest.VerifySendForApprovalDeleteApproveRecord()[pri:13, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest@2415e4c7]" name="VerifySendForApprovalDeleteApproveRecord" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest"/>
        <method signature="FaxTemplateAutoACKTypeDeleteTest.VerifyAuditTrailReportForSendForApproval()[pri:14, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest@2415e4c7]" name="VerifyAuditTrailReportForSendForApproval" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest"/>
        <method signature="FaxTemplateAutoACKTypeDeleteTest.VerifySendForApprovalDeleteRejectRecord()[pri:7, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest@2415e4c7]" name="VerifySendForApprovalDeleteRejectRecord" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest"/>
        <method signature="FaxTemplateAutoACKTypeUpdateTest.EditApproveAutoACKFaxTemplateRecord()[pri:8, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest@510689af]" name="EditApproveAutoACKFaxTemplateRecord" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest"/>
        <method signature="FaxTemplateAutoACKTypeUpdateTest.EditApproveFaxTemplateRecordWithOutModifyReson()[pri:15, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest@510689af]" name="EditApproveFaxTemplateRecordWithOutModifyReson" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest"/>
        <method signature="FaxTemplateAutoACKTypeUpdateTest.EditRejectAutoACKFaxTemplateRecord()[pri:4, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest@510689af]" name="EditRejectAutoACKFaxTemplateRecord" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest"/>
        <method signature="FaxTemplateAutoACKTypeUpdateTest.EditRevertAutoACKFaxTemplateRecord()[pri:1, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest@510689af]" name="EditRevertAutoACKFaxTemplateRecord" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest"/>
        <method signature="FaxTemplateAutoACKTypeUpdateTest.VerifyAuditTrailDataForApproveRecord()[pri:9, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest@510689af]" name="VerifyAuditTrailDataForApproveRecord" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest"/>
        <method signature="FaxTemplateAutoACKTypeUpdateTest.VerifyAuditTrailReportForEditRevertRecord()[pri:3, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest@510689af]" name="VerifyAuditTrailReportForEditRevertRecord" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest"/>
        <method signature="FaxTemplateAutoACKTypeUpdateTest.VerifyAuditTrailReportForUpdate()[pri:10, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest@510689af]" name="VerifyAuditTrailReportForUpdate" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest"/>
        <method signature="FaxTemplateAutoACKTypeUpdateTest.VerifyRevertforEditRecord()[pri:2, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest@510689af]" name="VerifyRevertforEditRecord" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest"/>
        <method signature="FaxTemplateAutoACKTypeUpdateTest.VerifySendForApprovalForEditApproveRecord()[pri:11, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest@510689af]" name="VerifySendForApprovalForEditApproveRecord" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest"/>
        <method signature="FaxTemplateAutoACKTypeUpdateTest.VerifyAuditTrailReportForSendForApproval()[pri:12, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest@510689af]" name="VerifyAuditTrailReportForSendForApproval" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest"/>
        <method signature="FaxTemplateAutoACKTypeUpdateTest.VerifySendForApprovalForEditRejectRecord()[pri:5, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest@510689af]" name="VerifySendForApprovalForEditRejectRecord" class="com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest"/>
      </group> <!-- Maker -->
    </groups>
    <test name="OCMRegression" duration-ms="1396906" started-at="2021-08-06T02:20:17 IST" finished-at="2021-08-06T02:43:34 IST">
      <class name="com.tetherfi.test.fax.FaxTemplateUITest">
        <test-method status="PASS" signature="openApplication()[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="openApplication" is-config="true" duration-ms="13114" started-at="2021-08-06T02:20:17 IST" finished-at="2021-08-06T02:20:30 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="startTestCase" is-config="true" duration-ms="3" started-at="2021-08-06T02:20:30 IST" finished-at="2021-08-06T02:20:30 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.FaxTemplatePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage()[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="8311" started-at="2021-08-06T02:20:30 IST" finished-at="2021-08-06T02:20:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="PASS" signature="FaxTemplatePage()[pri:1, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="FaxTemplatePage" duration-ms="2539" started-at="2021-08-06T02:20:39 IST" finished-at="2021-08-06T02:20:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FaxTemplatePage -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="afterEachMethod" is-config="true" duration-ms="1974" started-at="2021-08-06T02:20:41 IST" finished-at="2021-08-06T02:20:43 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.FaxTemplatePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="endTestCase" is-config="true" duration-ms="0" started-at="2021-08-06T02:20:43 IST" finished-at="2021-08-06T02:20:43 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.FaxTemplatePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="startTestCase" is-config="true" duration-ms="1" started-at="2021-08-06T02:20:43 IST" finished-at="2021-08-06T02:20:43 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifyFaxTemplateApprovedDataPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage()[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="5665" started-at="2021-08-06T02:20:43 IST" finished-at="2021-08-06T02:20:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="PASS" signature="VerifyFaxTemplateApprovedDataPage()[pri:2, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="VerifyFaxTemplateApprovedDataPage" duration-ms="748" started-at="2021-08-06T02:20:49 IST" finished-at="2021-08-06T02:20:50 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyFaxTemplateApprovedDataPage -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="afterEachMethod" is-config="true" duration-ms="1988" started-at="2021-08-06T02:20:50 IST" finished-at="2021-08-06T02:20:52 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifyFaxTemplateApprovedDataPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="endTestCase" is-config="true" duration-ms="1" started-at="2021-08-06T02:20:52 IST" finished-at="2021-08-06T02:20:52 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifyFaxTemplateApprovedDataPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="startTestCase" is-config="true" duration-ms="0" started-at="2021-08-06T02:20:52 IST" finished-at="2021-08-06T02:20:52 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifyFaxTemplateAuditTrailDataPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage()[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="5676" started-at="2021-08-06T02:20:52 IST" finished-at="2021-08-06T02:20:57 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="FAIL" signature="VerifyFaxTemplateAuditTrailDataPage()[pri:3, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="VerifyFaxTemplateAuditTrailDataPage" duration-ms="7244" started-at="2021-08-06T02:20:57 IST" finished-at="2021-08-06T02:21:05 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Audit Trail table assertion failed did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Audit Trail table assertion failed did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at com.tetherfi.test.fax.FaxTemplateUITest.VerifyFaxTemplateAuditTrailDataPage(FaxTemplateUITest.java:60)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyFaxTemplateAuditTrailDataPage -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="afterEachMethod" is-config="true" duration-ms="1804" started-at="2021-08-06T02:21:05 IST" finished-at="2021-08-06T02:21:06 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifyFaxTemplateAuditTrailDataPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="endTestCase" is-config="true" duration-ms="0" started-at="2021-08-06T02:21:06 IST" finished-at="2021-08-06T02:21:06 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifyFaxTemplateAuditTrailDataPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="startTestCase" is-config="true" duration-ms="1" started-at="2021-08-06T02:21:06 IST" finished-at="2021-08-06T02:21:06 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifyMakeFaxTemplateChangeButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage()[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="5730" started-at="2021-08-06T02:21:06 IST" finished-at="2021-08-06T02:21:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="PASS" signature="VerifyMakeFaxTemplateChangeButton()[pri:4, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="VerifyMakeFaxTemplateChangeButton" duration-ms="11561" started-at="2021-08-06T02:21:12 IST" finished-at="2021-08-06T02:21:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyMakeFaxTemplateChangeButton -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="afterEachMethod" is-config="true" duration-ms="1986" started-at="2021-08-06T02:21:24 IST" finished-at="2021-08-06T02:21:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifyMakeFaxTemplateChangeButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="endTestCase" is-config="true" duration-ms="0" started-at="2021-08-06T02:21:26 IST" finished-at="2021-08-06T02:21:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifyMakeFaxTemplateChangeButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="startTestCase" is-config="true" duration-ms="2" started-at="2021-08-06T02:21:26 IST" finished-at="2021-08-06T02:21:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifyDropDownForAllTheColumns()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage()[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="5683" started-at="2021-08-06T02:21:26 IST" finished-at="2021-08-06T02:21:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="PASS" signature="VerifyDropDownForAllTheColumns()[pri:5, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="VerifyDropDownForAllTheColumns" duration-ms="16777" started-at="2021-08-06T02:21:31 IST" finished-at="2021-08-06T02:21:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyDropDownForAllTheColumns -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="afterEachMethod" is-config="true" duration-ms="2036" started-at="2021-08-06T02:21:48 IST" finished-at="2021-08-06T02:21:50 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifyDropDownForAllTheColumns()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="endTestCase" is-config="true" duration-ms="1" started-at="2021-08-06T02:21:50 IST" finished-at="2021-08-06T02:21:50 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifyDropDownForAllTheColumns()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="startTestCase" is-config="true" duration-ms="1" started-at="2021-08-06T02:21:50 IST" finished-at="2021-08-06T02:21:50 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifyColumnsHeaderEnable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage()[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="5457" started-at="2021-08-06T02:21:50 IST" finished-at="2021-08-06T02:21:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="PASS" signature="VerifyColumnsHeaderEnable()[pri:6, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="VerifyColumnsHeaderEnable" duration-ms="15218" started-at="2021-08-06T02:21:56 IST" finished-at="2021-08-06T02:22:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyColumnsHeaderEnable -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="afterEachMethod" is-config="true" duration-ms="1854" started-at="2021-08-06T02:22:11 IST" finished-at="2021-08-06T02:22:13 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifyColumnsHeaderEnable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="endTestCase" is-config="true" duration-ms="0" started-at="2021-08-06T02:22:13 IST" finished-at="2021-08-06T02:22:13 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifyColumnsHeaderEnable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage()[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="5622" started-at="2021-08-06T02:22:13 IST" finished-at="2021-08-06T02:22:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="startTestCase" is-config="true" duration-ms="0" started-at="2021-08-06T02:22:13 IST" finished-at="2021-08-06T02:22:13 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifyColumnsHeaderdisable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="VerifyColumnsHeaderdisable()[pri:7, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="VerifyColumnsHeaderdisable" duration-ms="16523" started-at="2021-08-06T02:22:18 IST" finished-at="2021-08-06T02:22:35 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyColumnsHeaderdisable -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="afterEachMethod" is-config="true" duration-ms="2013" started-at="2021-08-06T02:22:35 IST" finished-at="2021-08-06T02:22:37 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifyColumnsHeaderdisable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="endTestCase" is-config="true" duration-ms="0" started-at="2021-08-06T02:22:37 IST" finished-at="2021-08-06T02:22:37 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifyColumnsHeaderdisable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="startTestCase" is-config="true" duration-ms="0" started-at="2021-08-06T02:22:37 IST" finished-at="2021-08-06T02:22:37 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifyArrowMoveForPreviousAndNextPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage()[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="5553" started-at="2021-08-06T02:22:37 IST" finished-at="2021-08-06T02:22:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="PASS" signature="VerifyArrowMoveForPreviousAndNextPage()[pri:8, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="VerifyArrowMoveForPreviousAndNextPage" duration-ms="11251" started-at="2021-08-06T02:22:42 IST" finished-at="2021-08-06T02:22:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyArrowMoveForPreviousAndNextPage -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="afterEachMethod" is-config="true" duration-ms="1967" started-at="2021-08-06T02:22:54 IST" finished-at="2021-08-06T02:22:56 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifyArrowMoveForPreviousAndNextPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="endTestCase" is-config="true" duration-ms="1" started-at="2021-08-06T02:22:56 IST" finished-at="2021-08-06T02:22:56 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifyArrowMoveForPreviousAndNextPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="startTestCase" is-config="true" duration-ms="0" started-at="2021-08-06T02:22:56 IST" finished-at="2021-08-06T02:22:56 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifyArrowMoveForFirstAndLastPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage()[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="5495" started-at="2021-08-06T02:22:56 IST" finished-at="2021-08-06T02:23:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="PASS" signature="VerifyArrowMoveForFirstAndLastPage()[pri:9, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="VerifyArrowMoveForFirstAndLastPage" duration-ms="11207" started-at="2021-08-06T02:23:01 IST" finished-at="2021-08-06T02:23:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyArrowMoveForFirstAndLastPage -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="afterEachMethod" is-config="true" duration-ms="2038" started-at="2021-08-06T02:23:12 IST" finished-at="2021-08-06T02:23:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifyArrowMoveForFirstAndLastPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="endTestCase" is-config="true" duration-ms="0" started-at="2021-08-06T02:23:14 IST" finished-at="2021-08-06T02:23:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifyArrowMoveForFirstAndLastPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="startTestCase" is-config="true" duration-ms="0" started-at="2021-08-06T02:23:14 IST" finished-at="2021-08-06T02:23:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifyToatalNumberOfItemsPerPageDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage()[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="5626" started-at="2021-08-06T02:23:14 IST" finished-at="2021-08-06T02:23:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="PASS" signature="VerifyToatalNumberOfItemsPerPageDetails()[pri:10, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="VerifyToatalNumberOfItemsPerPageDetails" duration-ms="10542" started-at="2021-08-06T02:23:20 IST" finished-at="2021-08-06T02:23:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyToatalNumberOfItemsPerPageDetails -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="afterEachMethod" is-config="true" duration-ms="1999" started-at="2021-08-06T02:23:31 IST" finished-at="2021-08-06T02:23:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifyToatalNumberOfItemsPerPageDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="endTestCase" is-config="true" duration-ms="0" started-at="2021-08-06T02:23:33 IST" finished-at="2021-08-06T02:23:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifyToatalNumberOfItemsPerPageDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="startTestCase" is-config="true" duration-ms="1" started-at="2021-08-06T02:23:33 IST" finished-at="2021-08-06T02:23:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifyNumberOfItemsPerPageSelection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage()[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="5458" started-at="2021-08-06T02:23:33 IST" finished-at="2021-08-06T02:23:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="PASS" signature="VerifyNumberOfItemsPerPageSelection()[pri:11, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="VerifyNumberOfItemsPerPageSelection" duration-ms="18117" started-at="2021-08-06T02:23:38 IST" finished-at="2021-08-06T02:23:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyNumberOfItemsPerPageSelection -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="afterEachMethod" is-config="true" duration-ms="1979" started-at="2021-08-06T02:23:56 IST" finished-at="2021-08-06T02:23:58 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifyNumberOfItemsPerPageSelection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="endTestCase" is-config="true" duration-ms="2" started-at="2021-08-06T02:23:58 IST" finished-at="2021-08-06T02:23:58 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifyNumberOfItemsPerPageSelection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="startTestCase" is-config="true" duration-ms="1" started-at="2021-08-06T02:23:58 IST" finished-at="2021-08-06T02:23:58 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.ExportToExcel() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage()[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="5863" started-at="2021-08-06T02:23:58 IST" finished-at="2021-08-06T02:24:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="PASS" signature="ExportToExcel()[pri:12, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="ExportToExcel" duration-ms="13043" started-at="2021-08-06T02:24:04 IST" finished-at="2021-08-06T02:24:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ExportToExcel -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="afterEachMethod" is-config="true" duration-ms="2290" started-at="2021-08-06T02:24:17 IST" finished-at="2021-08-06T02:24:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.ExportToExcel() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="endTestCase" is-config="true" duration-ms="1" started-at="2021-08-06T02:24:19 IST" finished-at="2021-08-06T02:24:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.ExportToExcel() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage()[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="5566" started-at="2021-08-06T02:24:19 IST" finished-at="2021-08-06T02:24:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="startTestCase" is-config="true" duration-ms="0" started-at="2021-08-06T02:24:19 IST" finished-at="2021-08-06T02:24:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.ExportToExcelData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="ExportToExcelData()[pri:13, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="ExportToExcelData" duration-ms="13463" started-at="2021-08-06T02:24:25 IST" finished-at="2021-08-06T02:24:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ExportToExcelData -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="afterEachMethod" is-config="true" duration-ms="1759" started-at="2021-08-06T02:24:38 IST" finished-at="2021-08-06T02:24:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.ExportToExcelData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="endTestCase" is-config="true" duration-ms="0" started-at="2021-08-06T02:24:40 IST" finished-at="2021-08-06T02:24:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.ExportToExcelData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="startTestCase" is-config="true" duration-ms="0" started-at="2021-08-06T02:24:40 IST" finished-at="2021-08-06T02:24:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.ExportToExcelWithoutData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage()[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="5829" started-at="2021-08-06T02:24:40 IST" finished-at="2021-08-06T02:24:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="PASS" signature="ExportToExcelWithoutData()[pri:14, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="ExportToExcelWithoutData" duration-ms="16829" started-at="2021-08-06T02:24:46 IST" finished-at="2021-08-06T02:25:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ExportToExcelWithoutData -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="afterEachMethod" is-config="true" duration-ms="384" started-at="2021-08-06T02:25:03 IST" finished-at="2021-08-06T02:25:03 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.ExportToExcelWithoutData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="endTestCase" is-config="true" duration-ms="1" started-at="2021-08-06T02:25:03 IST" finished-at="2021-08-06T02:25:03 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.ExportToExcelWithoutData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="startTestCase" is-config="true" duration-ms="2" started-at="2021-08-06T02:25:03 IST" finished-at="2021-08-06T02:25:03 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.SortByAscending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage()[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="7668" started-at="2021-08-06T02:25:03 IST" finished-at="2021-08-06T02:25:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="PASS" signature="SortByAscending()[pri:15, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="SortByAscending" duration-ms="17283" started-at="2021-08-06T02:25:11 IST" finished-at="2021-08-06T02:25:28 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SortByAscending -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="afterEachMethod" is-config="true" duration-ms="1967" started-at="2021-08-06T02:25:28 IST" finished-at="2021-08-06T02:25:30 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.SortByAscending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="endTestCase" is-config="true" duration-ms="1" started-at="2021-08-06T02:25:30 IST" finished-at="2021-08-06T02:25:30 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.SortByAscending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="startTestCase" is-config="true" duration-ms="2" started-at="2021-08-06T02:25:30 IST" finished-at="2021-08-06T02:25:30 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.SortByDescending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage()[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="5404" started-at="2021-08-06T02:25:30 IST" finished-at="2021-08-06T02:25:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="PASS" signature="SortByDescending()[pri:16, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="SortByDescending" duration-ms="17745" started-at="2021-08-06T02:25:36 IST" finished-at="2021-08-06T02:25:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SortByDescending -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="afterEachMethod" is-config="true" duration-ms="2008" started-at="2021-08-06T02:25:53 IST" finished-at="2021-08-06T02:25:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.SortByDescending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="endTestCase" is-config="true" duration-ms="1" started-at="2021-08-06T02:25:55 IST" finished-at="2021-08-06T02:25:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.SortByDescending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="startTestCase" is-config="true" duration-ms="0" started-at="2021-08-06T02:25:55 IST" finished-at="2021-08-06T02:25:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifyDragAndDrop()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage()[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="5576" started-at="2021-08-06T02:25:55 IST" finished-at="2021-08-06T02:26:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="PASS" signature="VerifyDragAndDrop()[pri:17, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="VerifyDragAndDrop" duration-ms="11372" started-at="2021-08-06T02:26:01 IST" finished-at="2021-08-06T02:26:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyDragAndDrop -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="afterEachMethod" is-config="true" duration-ms="1899" started-at="2021-08-06T02:26:12 IST" finished-at="2021-08-06T02:26:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifyDragAndDrop()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="endTestCase" is-config="true" duration-ms="0" started-at="2021-08-06T02:26:14 IST" finished-at="2021-08-06T02:26:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifyDragAndDrop()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage()[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="5423" started-at="2021-08-06T02:26:14 IST" finished-at="2021-08-06T02:26:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="startTestCase" is-config="true" duration-ms="0" started-at="2021-08-06T02:26:14 IST" finished-at="2021-08-06T02:26:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.verifyDragAndDropAlreadyGroupedHeader()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="verifyDragAndDropAlreadyGroupedHeader()[pri:18, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="verifyDragAndDropAlreadyGroupedHeader" duration-ms="11876" started-at="2021-08-06T02:26:20 IST" finished-at="2021-08-06T02:26:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDragAndDropAlreadyGroupedHeader -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="afterEachMethod" is-config="true" duration-ms="1792" started-at="2021-08-06T02:26:31 IST" finished-at="2021-08-06T02:26:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.verifyDragAndDropAlreadyGroupedHeader()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="endTestCase" is-config="true" duration-ms="0" started-at="2021-08-06T02:26:33 IST" finished-at="2021-08-06T02:26:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.verifyDragAndDropAlreadyGroupedHeader()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="startTestCase" is-config="true" duration-ms="1" started-at="2021-08-06T02:26:33 IST" finished-at="2021-08-06T02:26:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.dataBase() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage()[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="5636" started-at="2021-08-06T02:26:33 IST" finished-at="2021-08-06T02:26:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="FAIL" signature="dataBase()[pri:19, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="dataBase" duration-ms="7564" started-at="2021-08-06T02:26:39 IST" finished-at="2021-08-06T02:26:46 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[dataBase assertion Failed did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: dataBase assertion Failed did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at com.tetherfi.test.fax.FaxTemplateUITest.dataBase(FaxTemplateUITest.java:207)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dataBase -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="afterEachMethod" is-config="true" duration-ms="1763" started-at="2021-08-06T02:26:46 IST" finished-at="2021-08-06T02:26:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.dataBase() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="endTestCase" is-config="true" duration-ms="0" started-at="2021-08-06T02:26:48 IST" finished-at="2021-08-06T02:26:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.dataBase() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="startTestCase" is-config="true" duration-ms="1" started-at="2021-08-06T02:26:48 IST" finished-at="2021-08-06T02:26:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.SearchPage() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage()[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="5331" started-at="2021-08-06T02:26:48 IST" finished-at="2021-08-06T02:26:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="PASS" signature="SearchPage()[pri:20, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="SearchPage" duration-ms="3945" started-at="2021-08-06T02:26:54 IST" finished-at="2021-08-06T02:26:57 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchPage -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="afterEachMethod" is-config="true" duration-ms="1773" started-at="2021-08-06T02:26:57 IST" finished-at="2021-08-06T02:26:59 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.SearchPage() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="endTestCase" is-config="true" duration-ms="1" started-at="2021-08-06T02:26:59 IST" finished-at="2021-08-06T02:26:59 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.SearchPage() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="startTestCase" is-config="true" duration-ms="1" started-at="2021-08-06T02:26:59 IST" finished-at="2021-08-06T02:26:59 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.SearchWithoutSearchTextBox() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage()[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="5312" started-at="2021-08-06T02:26:59 IST" finished-at="2021-08-06T02:27:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="PASS" signature="SearchWithoutSearchTextBox()[pri:21, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="SearchWithoutSearchTextBox" duration-ms="3558" started-at="2021-08-06T02:27:05 IST" finished-at="2021-08-06T02:27:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchWithoutSearchTextBox -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="afterEachMethod" is-config="true" duration-ms="1930" started-at="2021-08-06T02:27:08 IST" finished-at="2021-08-06T02:27:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.SearchWithoutSearchTextBox() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="endTestCase" is-config="true" duration-ms="1" started-at="2021-08-06T02:27:10 IST" finished-at="2021-08-06T02:27:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.SearchWithoutSearchTextBox() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="startTestCase" is-config="true" duration-ms="0" started-at="2021-08-06T02:27:10 IST" finished-at="2021-08-06T02:27:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.SearchClearSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage()[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="5360" started-at="2021-08-06T02:27:10 IST" finished-at="2021-08-06T02:27:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="PASS" signature="SearchClearSearch()[pri:22, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="SearchClearSearch" duration-ms="4906" started-at="2021-08-06T02:27:15 IST" finished-at="2021-08-06T02:27:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchClearSearch -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="afterEachMethod" is-config="true" duration-ms="1727" started-at="2021-08-06T02:27:20 IST" finished-at="2021-08-06T02:27:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.SearchClearSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="endTestCase" is-config="true" duration-ms="2" started-at="2021-08-06T02:27:22 IST" finished-at="2021-08-06T02:27:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.SearchClearSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="startTestCase" is-config="true" duration-ms="1" started-at="2021-08-06T02:27:22 IST" finished-at="2021-08-06T02:27:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifySearchIsNotEqualTo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage()[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="5411" started-at="2021-08-06T02:27:22 IST" finished-at="2021-08-06T02:27:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="PASS" signature="VerifySearchIsNotEqualTo()[pri:23, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="VerifySearchIsNotEqualTo" duration-ms="21061" started-at="2021-08-06T02:27:27 IST" finished-at="2021-08-06T02:27:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifySearchIsNotEqualTo -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="afterEachMethod" is-config="true" duration-ms="2263" started-at="2021-08-06T02:27:49 IST" finished-at="2021-08-06T02:27:51 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifySearchIsNotEqualTo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="endTestCase" is-config="true" duration-ms="1" started-at="2021-08-06T02:27:51 IST" finished-at="2021-08-06T02:27:51 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifySearchIsNotEqualTo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage()[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="5528" started-at="2021-08-06T02:27:51 IST" finished-at="2021-08-06T02:27:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="startTestCase" is-config="true" duration-ms="0" started-at="2021-08-06T02:27:51 IST" finished-at="2021-08-06T02:27:51 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifySearchContains() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="VerifySearchContains()[pri:24, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="VerifySearchContains" duration-ms="17056" started-at="2021-08-06T02:27:56 IST" finished-at="2021-08-06T02:28:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifySearchContains -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="afterEachMethod" is-config="true" duration-ms="2210" started-at="2021-08-06T02:28:13 IST" finished-at="2021-08-06T02:28:16 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifySearchContains() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="endTestCase" is-config="true" duration-ms="1" started-at="2021-08-06T02:28:16 IST" finished-at="2021-08-06T02:28:16 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifySearchContains() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage()[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="5410" started-at="2021-08-06T02:28:16 IST" finished-at="2021-08-06T02:28:21 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="startTestCase" is-config="true" duration-ms="0" started-at="2021-08-06T02:28:16 IST" finished-at="2021-08-06T02:28:16 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifySearchDoesNotContains() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="VerifySearchDoesNotContains()[pri:25, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="VerifySearchDoesNotContains" duration-ms="18351" started-at="2021-08-06T02:28:21 IST" finished-at="2021-08-06T02:28:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifySearchDoesNotContains -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="afterEachMethod" is-config="true" duration-ms="2140" started-at="2021-08-06T02:28:39 IST" finished-at="2021-08-06T02:28:42 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifySearchDoesNotContains() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="endTestCase" is-config="true" duration-ms="0" started-at="2021-08-06T02:28:42 IST" finished-at="2021-08-06T02:28:42 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifySearchDoesNotContains() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="startTestCase" is-config="true" duration-ms="0" started-at="2021-08-06T02:28:42 IST" finished-at="2021-08-06T02:28:42 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifySearchStartsWith() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage()[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="5468" started-at="2021-08-06T02:28:42 IST" finished-at="2021-08-06T02:28:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="PASS" signature="VerifySearchStartsWith()[pri:26, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="VerifySearchStartsWith" duration-ms="16234" started-at="2021-08-06T02:28:47 IST" finished-at="2021-08-06T02:29:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifySearchStartsWith -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="afterEachMethod" is-config="true" duration-ms="2036" started-at="2021-08-06T02:29:03 IST" finished-at="2021-08-06T02:29:05 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifySearchStartsWith() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="endTestCase" is-config="true" duration-ms="0" started-at="2021-08-06T02:29:05 IST" finished-at="2021-08-06T02:29:05 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifySearchStartsWith() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="startTestCase" is-config="true" duration-ms="0" started-at="2021-08-06T02:29:05 IST" finished-at="2021-08-06T02:29:05 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifySearchEndsWith() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage()[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="5345" started-at="2021-08-06T02:29:05 IST" finished-at="2021-08-06T02:29:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="PASS" signature="VerifySearchEndsWith()[pri:27, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="VerifySearchEndsWith" duration-ms="16017" started-at="2021-08-06T02:29:11 IST" finished-at="2021-08-06T02:29:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifySearchEndsWith -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="afterEachMethod" is-config="true" duration-ms="2178" started-at="2021-08-06T02:29:27 IST" finished-at="2021-08-06T02:29:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifySearchEndsWith() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="endTestCase" is-config="true" duration-ms="1" started-at="2021-08-06T02:29:29 IST" finished-at="2021-08-06T02:29:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateUITest.VerifySearchEndsWith() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.tetherfi.test.fax.FaxTemplateUITest@382dc417]" name="tearDown" is-config="true" duration-ms="2391" started-at="2021-08-06T02:29:29 IST" finished-at="2021-08-06T02:29:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.tetherfi.test.fax.FaxTemplateUITest -->
      <class name="com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest">
        <test-method status="PASS" signature="NavigateToFaxTemplatePage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest@510689af]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="14705" started-at="2021-08-06T02:40:14 IST" finished-at="2021-08-06T02:40:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest.EditRevertAutoACKFaxTemplateRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="FAIL" signature="EditRevertAutoACKFaxTemplateRecord()[pri:1, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest@510689af]" name="EditRevertAutoACKFaxTemplateRecord" duration-ms="58636" started-at="2021-08-06T02:40:29 IST" finished-at="2021-08-06T02:41:28 IST">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":".toast-message"}
  (Session info: chrome=92.0.4515.131)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'TTF-BLR-SANTOSH', ip: '192.168.50.12', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 92.0.4515.131, chrome: {chromedriverVersion: 91.0.4472.19 (1bf021f248676..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:51891}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 840ebdc3afd6fd7e2081060d7d4ddd33
*** Element info: {Using=css selector, value=.toast-message}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":".toast-message"}
  (Session info: chrome=92.0.4515.131)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'TTF-BLR-SANTOSH', ip: '192.168.50.12', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 92.0.4515.131, chrome: {chromedriverVersion: 91.0.4472.19 (1bf021f248676..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:51891}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 840ebdc3afd6fd7e2081060d7d4ddd33
*** Element info: {Using=css selector, value=.toast-message}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByCssSelector(RemoteWebDriver.java:420)
at org.openqa.selenium.By$ByCssSelector.findElement(By.java:431)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy11.isDisplayed(Unknown Source)
at com.tetherfi.pages.FaxTemplatePage.getSuccessMessage(FaxTemplatePage.java:788)
at com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest.EditRevertAutoACKFaxTemplateRecord(FaxTemplateAutoACKTypeUpdateTest.java:79)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EditRevertAutoACKFaxTemplateRecord -->
        <test-method status="FAIL" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest@510689af]" name="afterEachMethod" is-config="true" duration-ms="81875" started-at="2021-08-06T02:41:28 IST" finished-at="2021-08-06T02:42:49 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest.EditRevertAutoACKFaxTemplateRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.id: profiledropdown' (tried for 20 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.id: profiledropdown' (tried for 20 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at com.tetherfi.pages.BasePage.waitUntilWebElementIsClickable(BasePage.java:259)
at com.tetherfi.pages.HomePage.userLogout(HomePage.java:45)
at com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest.afterEachMethod(FaxTemplateAutoACKTypeUpdateTest.java:246)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:340)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:294)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:683)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:658)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:642)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"#profiledropdown"}
  (Session info: chrome=92.0.4515.131)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'TTF-BLR-SANTOSH', ip: '192.168.50.12', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 92.0.4515.131, chrome: {chromedriverVersion: 91.0.4472.19 (1bf021f248676..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:51891}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 840ebdc3afd6fd7e2081060d7d4ddd33
*** Element info: {Using=id, value=profiledropdown}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:372)
at org.openqa.selenium.By$ById.findElement(By.java:188)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy11.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:314)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:43)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:300)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:297)
at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:670)
at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:666)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
... 36 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="SKIP" signature="NavigateToFaxTemplatePage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest@510689af]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="-1628197969945" started-at="2021-08-06T02:42:49 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="SKIP" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest@510689af]" name="afterEachMethod" is-config="true" duration-ms="-1628197969953" started-at="2021-08-06T02:42:49 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="SKIP" signature="NavigateToFaxTemplatePage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest@510689af]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="-1628197969958" started-at="2021-08-06T02:42:49 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="SKIP" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest@510689af]" name="afterEachMethod" is-config="true" duration-ms="-1628197969969" started-at="2021-08-06T02:42:49 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="SKIP" signature="NavigateToFaxTemplatePage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest@510689af]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="-1628197969978" started-at="2021-08-06T02:42:49 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="SKIP" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest@510689af]" name="afterEachMethod" is-config="true" duration-ms="-1628197969983" started-at="2021-08-06T02:42:49 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="SKIP" signature="NavigateToFaxTemplatePage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest@510689af]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="-1628197969996" started-at="2021-08-06T02:42:49 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="SKIP" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest@510689af]" name="afterEachMethod" is-config="true" duration-ms="-1628197970003" started-at="2021-08-06T02:42:50 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="SKIP" signature="NavigateToFaxTemplatePage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest@510689af]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="-1628197970017" started-at="2021-08-06T02:42:50 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="SKIP" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest@510689af]" name="afterEachMethod" is-config="true" duration-ms="-1628197970023" started-at="2021-08-06T02:42:50 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
      </class> <!-- com.tetherfi.test.fax.FaxTemplateAutoACKTypeUpdateTest -->
      <class name="com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest">
        <test-method status="PASS" signature="NavigateToFaxTemplatePage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="15394" started-at="2021-08-06T02:29:31 IST" finished-at="2021-08-06T02:29:47 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.AddAutoACKTemplateTypetoRevertRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="FAIL" signature="AddAutoACKTemplateTypetoRevertRecord()[pri:1, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="AddAutoACKTemplateTypetoRevertRecord" duration-ms="17068" started-at="2021-08-06T02:29:47 IST" finished-at="2021-08-06T02:30:04 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Record Created Successfully] but found [Record Creation Failed]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Record Created Successfully] but found [Record Creation Failed]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.AddAutoACKTemplateTypetoRevertRecord(FaxTemplateAutoACKTypeCreateTest.java:80)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddAutoACKTemplateTypetoRevertRecord -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="afterEachMethod" is-config="true" duration-ms="5281" started-at="2021-08-06T02:30:04 IST" finished-at="2021-08-06T02:30:09 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.AddAutoACKTemplateTypetoRevertRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="14789" started-at="2021-08-06T02:30:09 IST" finished-at="2021-08-06T02:30:24 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.VerifyRevertforAddNewRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="FAIL" signature="VerifyRevertforAddNewRecord()[pri:2, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="VerifyRevertforAddNewRecord" duration-ms="25511" started-at="2021-08-06T02:30:24 IST" finished-at="2021-08-06T02:30:49 IST">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: [[[[[[[[ChromeDriver: chrome on WINDOWS (850dd2e48812945eb3d7919138577460)] -> id: grid]] -> tag name: tr]] -> tag name: td]] -> id: isEnabled] (tried for 20 second(s) with 500 milliseconds interval)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'TTF-BLR-SANTOSH', ip: '192.168.50.12', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 92.0.4515.131, chrome: {chromedriverVersion: 91.0.4472.19 (1bf021f248676..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:61391}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 850dd2e48812945eb3d7919138577460]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: [[[[[[[[ChromeDriver: chrome on WINDOWS (850dd2e48812945eb3d7919138577460)] -> id: grid]] -> tag name: tr]] -> tag name: td]] -> id: isEnabled] (tried for 20 second(s) with 500 milliseconds interval)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'TTF-BLR-SANTOSH', ip: '192.168.50.12', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 92.0.4515.131, chrome: {chromedriverVersion: 91.0.4472.19 (1bf021f248676..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:61391}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 850dd2e48812945eb3d7919138577460
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at com.tetherfi.pages.BasePage.waitUntilWebElementIsClickable(BasePage.java:259)
at com.tetherfi.pages.BasePage.selectWebElement(BasePage.java:197)
at com.tetherfi.pages.FaxTemplatePage.selectRecord(FaxTemplatePage.java:1117)
at com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.VerifyRevertforAddNewRecord(FaxTemplateAutoACKTypeCreateTest.java:87)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyRevertforAddNewRecord -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="afterEachMethod" is-config="true" duration-ms="5409" started-at="2021-08-06T02:30:49 IST" finished-at="2021-08-06T02:30:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.VerifyRevertforAddNewRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="14880" started-at="2021-08-06T02:30:55 IST" finished-at="2021-08-06T02:31:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.VerifyAuditTrailReportForRevertRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="FAIL" signature="VerifyAuditTrailReportForRevertRecord()[pri:4, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="VerifyAuditTrailReportForRevertRecord" duration-ms="31159" started-at="2021-08-06T02:31:10 IST" finished-at="2021-08-06T02:31:41 IST">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 1, Size: 1
at java.util.ArrayList.rangeCheck(Unknown Source)
at java.util.ArrayList.get(Unknown Source)
at com.tetherfi.pages.OCMReportsPage.getFirstRowDatafromTable1(OCMReportsPage.java:1767)
at com.tetherfi.pages.OCMReportsPage.verifyFaxTemplateCreate(OCMReportsPage.java:7210)
at com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.VerifyAuditTrailReportForRevertRecord(FaxTemplateAutoACKTypeCreateTest.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrailReportForRevertRecord -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="afterEachMethod" is-config="true" duration-ms="5448" started-at="2021-08-06T02:31:41 IST" finished-at="2021-08-06T02:31:46 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.VerifyAuditTrailReportForRevertRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="14497" started-at="2021-08-06T02:31:46 IST" finished-at="2021-08-06T02:32:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.AddRejectRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="PASS" signature="AddRejectRecord()[pri:5, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="AddRejectRecord" duration-ms="12302" started-at="2021-08-06T02:32:01 IST" finished-at="2021-08-06T02:32:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddRejectRecord -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="afterEachMethod" is-config="true" duration-ms="5775" started-at="2021-08-06T02:32:13 IST" finished-at="2021-08-06T02:32:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.AddRejectRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="15673" started-at="2021-08-06T02:32:19 IST" finished-at="2021-08-06T02:32:34 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.VerifySendForApprovalAddNewRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="PASS" signature="VerifySendForApprovalAddNewRecord()[pri:6, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="VerifySendForApprovalAddNewRecord" duration-ms="14580" started-at="2021-08-06T02:32:34 IST" finished-at="2021-08-06T02:32:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifySendForApprovalAddNewRecord -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="afterEachMethod" is-config="true" duration-ms="4720" started-at="2021-08-06T02:32:49 IST" finished-at="2021-08-06T02:32:54 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.VerifySendForApprovalAddNewRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="13792" started-at="2021-08-06T02:32:54 IST" finished-at="2021-08-06T02:33:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.RejectForAddNewFaxTemplateRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="PASS" signature="RejectForAddNewFaxTemplateRecord()[pri:7, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="RejectForAddNewFaxTemplateRecord" duration-ms="12920" started-at="2021-08-06T02:33:07 IST" depends-on-methods="com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.VerifySendForApprovalAddNewRecord" finished-at="2021-08-06T02:33:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RejectForAddNewFaxTemplateRecord -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="afterEachMethod" is-config="true" duration-ms="5445" started-at="2021-08-06T02:33:20 IST" finished-at="2021-08-06T02:33:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.RejectForAddNewFaxTemplateRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="13060" started-at="2021-08-06T02:33:26 IST" finished-at="2021-08-06T02:33:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.VerifyAuditTrailReportForRejectRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="PASS" signature="VerifyAuditTrailReportForRejectRecord()[pri:8, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="VerifyAuditTrailReportForRejectRecord" duration-ms="31662" started-at="2021-08-06T02:33:39 IST" depends-on-methods="com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.RejectForAddNewFaxTemplateRecord" finished-at="2021-08-06T02:34:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrailReportForRejectRecord -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="afterEachMethod" is-config="true" duration-ms="5469" started-at="2021-08-06T02:34:11 IST" finished-at="2021-08-06T02:34:16 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.VerifyAuditTrailReportForRejectRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="14664" started-at="2021-08-06T02:34:16 IST" finished-at="2021-08-06T02:34:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.VerifyRecordAfterRejection() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="PASS" signature="VerifyRecordAfterRejection()[pri:9, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="VerifyRecordAfterRejection" duration-ms="4816" started-at="2021-08-06T02:34:31 IST" finished-at="2021-08-06T02:34:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyRecordAfterRejection -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="afterEachMethod" is-config="true" duration-ms="5807" started-at="2021-08-06T02:34:36 IST" finished-at="2021-08-06T02:34:41 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.VerifyRecordAfterRejection() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="14493" started-at="2021-08-06T02:34:41 IST" finished-at="2021-08-06T02:34:56 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.addApproveRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="PASS" signature="addApproveRecord()[pri:10, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="addApproveRecord" duration-ms="12003" started-at="2021-08-06T02:34:56 IST" finished-at="2021-08-06T02:35:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addApproveRecord -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="afterEachMethod" is-config="true" duration-ms="4638" started-at="2021-08-06T02:35:08 IST" finished-at="2021-08-06T02:35:12 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.addApproveRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="13866" started-at="2021-08-06T02:35:12 IST" finished-at="2021-08-06T02:35:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.VerifyAuditTrailReportForApproveRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="PASS" signature="VerifyAuditTrailReportForApproveRecord()[pri:11, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="VerifyAuditTrailReportForApproveRecord" duration-ms="31188" started-at="2021-08-06T02:35:26 IST" finished-at="2021-08-06T02:35:58 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrailReportForApproveRecord -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="afterEachMethod" is-config="true" duration-ms="4788" started-at="2021-08-06T02:35:58 IST" finished-at="2021-08-06T02:36:02 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.VerifyAuditTrailReportForApproveRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="13823" started-at="2021-08-06T02:36:02 IST" finished-at="2021-08-06T02:36:16 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.VerifyAuditTrailDataForApproveRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="PASS" signature="VerifyAuditTrailDataForApproveRecord()[pri:12, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="VerifyAuditTrailDataForApproveRecord" duration-ms="9669" started-at="2021-08-06T02:36:16 IST" depends-on-methods="com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.VerifyAuditTrailReportForApproveRecord" finished-at="2021-08-06T02:36:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrailDataForApproveRecord -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="afterEachMethod" is-config="true" duration-ms="5319" started-at="2021-08-06T02:36:26 IST" finished-at="2021-08-06T02:36:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.VerifyAuditTrailDataForApproveRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="17534" started-at="2021-08-06T02:36:31 IST" finished-at="2021-08-06T02:36:49 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.VerifySendForApprovalAddNewApproveRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="PASS" signature="VerifySendForApprovalAddNewApproveRecord()[pri:13, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="VerifySendForApprovalAddNewApproveRecord" duration-ms="14727" started-at="2021-08-06T02:36:49 IST" depends-on-methods="com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.VerifyAuditTrailDataForApproveRecord" finished-at="2021-08-06T02:37:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifySendForApprovalAddNewApproveRecord -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="afterEachMethod" is-config="true" duration-ms="4273" started-at="2021-08-06T02:37:03 IST" finished-at="2021-08-06T02:37:08 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.VerifySendForApprovalAddNewApproveRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="14053" started-at="2021-08-06T02:37:08 IST" finished-at="2021-08-06T02:37:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.VerifyAuditTrailReportForSendForApproval() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="PASS" signature="VerifyAuditTrailReportForSendForApproval()[pri:14, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="VerifyAuditTrailReportForSendForApproval" duration-ms="31586" started-at="2021-08-06T02:37:22 IST" depends-on-methods="com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.VerifySendForApprovalAddNewApproveRecord" finished-at="2021-08-06T02:37:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrailReportForSendForApproval -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="afterEachMethod" is-config="true" duration-ms="5011" started-at="2021-08-06T02:37:53 IST" finished-at="2021-08-06T02:37:58 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.VerifyAuditTrailReportForSendForApproval() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="13388" started-at="2021-08-06T02:37:58 IST" finished-at="2021-08-06T02:38:12 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.ApproveForAddNewFaxTemplateRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="PASS" signature="ApproveForAddNewFaxTemplateRecord()[pri:15, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="ApproveForAddNewFaxTemplateRecord" duration-ms="13612" started-at="2021-08-06T02:38:12 IST" depends-on-methods="com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.VerifyAuditTrailReportForSendForApproval" finished-at="2021-08-06T02:38:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ApproveForAddNewFaxTemplateRecord -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="afterEachMethod" is-config="true" duration-ms="5119" started-at="2021-08-06T02:38:25 IST" finished-at="2021-08-06T02:38:30 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.ApproveForAddNewFaxTemplateRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="13189" started-at="2021-08-06T02:38:30 IST" finished-at="2021-08-06T02:38:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.VerifyAuditTrailReportForApprove() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="PASS" signature="VerifyAuditTrailReportForApprove()[pri:16, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="VerifyAuditTrailReportForApprove" duration-ms="30798" started-at="2021-08-06T02:38:44 IST" depends-on-methods="com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.ApproveForAddNewFaxTemplateRecord" finished-at="2021-08-06T02:39:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrailReportForApprove -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="afterEachMethod" is-config="true" duration-ms="5117" started-at="2021-08-06T02:39:14 IST" finished-at="2021-08-06T02:39:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.VerifyAuditTrailReportForApprove() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="13544" started-at="2021-08-06T02:39:20 IST" finished-at="2021-08-06T02:39:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.VerifyApprovedDataSectionAfterApproval() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="PASS" signature="VerifyApprovedDataSectionAfterApproval()[pri:17, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="VerifyApprovedDataSectionAfterApproval" duration-ms="4425" started-at="2021-08-06T02:39:33 IST" finished-at="2021-08-06T02:39:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyApprovedDataSectionAfterApproval -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="afterEachMethod" is-config="true" duration-ms="5264" started-at="2021-08-06T02:39:38 IST" finished-at="2021-08-06T02:39:43 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.VerifyApprovedDataSectionAfterApproval() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="PASS" signature="NavigateToFaxTemplatePage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="13989" started-at="2021-08-06T02:39:43 IST" finished-at="2021-08-06T02:39:57 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.addDuplicateRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="PASS" signature="addDuplicateRecord()[pri:18, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="addDuplicateRecord" duration-ms="11252" started-at="2021-08-06T02:39:57 IST" depends-on-methods="com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.VerifyApprovedDataSectionAfterApproval" finished-at="2021-08-06T02:40:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addDuplicateRecord -->
        <test-method status="PASS" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest@3daf03d8]" name="afterEachMethod" is-config="true" duration-ms="6163" started-at="2021-08-06T02:40:08 IST" finished-at="2021-08-06T02:40:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest.addDuplicateRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
      </class> <!-- com.tetherfi.test.fax.FaxTemplateAutoACKTypeCreateTest -->
      <class name="com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest">
        <test-method status="FAIL" signature="NavigateToFaxTemplatePage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest@2415e4c7]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="44415" started-at="2021-08-06T02:42:50 IST" finished-at="2021-08-06T02:43:34 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest.VerifyDeleteCancelAutoACKTypeFaxTemplateRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[unknown error: net::ERR_CONNECTION_TIMED_OUT
  (Session info: chrome=92.0.4515.131)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'TTF-BLR-SANTOSH', ip: '192.168.50.12', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 92.0.4515.131, chrome: {chromedriverVersion: 91.0.4472.19 (1bf021f248676..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:52140}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 3253cdda5a23e1451e5d22db2be294c8]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: unknown error: net::ERR_CONNECTION_TIMED_OUT
  (Session info: chrome=92.0.4515.131)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'TTF-BLR-SANTOSH', ip: '192.168.50.12', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 92.0.4515.131, chrome: {chromedriverVersion: 91.0.4472.19 (1bf021f248676..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:52140}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 3253cdda5a23e1451e5d22db2be294c8
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:277)
at com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest.NavigateToFaxTemplatePage(FaxTemplateAutoACKTypeDeleteTest.java:50)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:340)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:294)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:683)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:510)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="SKIP" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest@2415e4c7]" name="afterEachMethod" is-config="true" duration-ms="-1628198014450" started-at="2021-08-06T02:43:34 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="SKIP" signature="NavigateToFaxTemplatePage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest@2415e4c7]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="-1628198014454" started-at="2021-08-06T02:43:34 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="SKIP" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest@2415e4c7]" name="afterEachMethod" is-config="true" duration-ms="-1628198014463" started-at="2021-08-06T02:43:34 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="SKIP" signature="NavigateToFaxTemplatePage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest@2415e4c7]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="-1628198014464" started-at="2021-08-06T02:43:34 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="SKIP" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest@2415e4c7]" name="afterEachMethod" is-config="true" duration-ms="-1628198014468" started-at="2021-08-06T02:43:34 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="SKIP" signature="NavigateToFaxTemplatePage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest@2415e4c7]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="-1628198014472" started-at="2021-08-06T02:43:34 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="SKIP" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest@2415e4c7]" name="afterEachMethod" is-config="true" duration-ms="-1628198014479" started-at="2021-08-06T02:43:34 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="SKIP" signature="NavigateToFaxTemplatePage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest@2415e4c7]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="-1628198014480" started-at="2021-08-06T02:43:34 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="SKIP" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest@2415e4c7]" name="afterEachMethod" is-config="true" duration-ms="-1628198014485" started-at="2021-08-06T02:43:34 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="SKIP" signature="NavigateToFaxTemplatePage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest@2415e4c7]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="-1628198014498" started-at="2021-08-06T02:43:34 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="SKIP" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest@2415e4c7]" name="afterEachMethod" is-config="true" duration-ms="-1628198014504" started-at="2021-08-06T02:43:34 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method status="SKIP" signature="NavigateToFaxTemplatePage(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest@2415e4c7]" name="NavigateToFaxTemplatePage" is-config="true" duration-ms="-1628198014505" started-at="2021-08-06T02:43:34 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxTemplatePage -->
        <test-method status="SKIP" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest@2415e4c7]" name="afterEachMethod" is-config="true" duration-ms="-1628198014521" started-at="2021-08-06T02:43:34 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
      </class> <!-- com.tetherfi.test.fax.FaxTemplateAutoACKTypeDeleteTest -->
    </test> <!-- OCMRegression -->
  </suite> <!-- OCM Modules Test Automation -->
</testng-results>
