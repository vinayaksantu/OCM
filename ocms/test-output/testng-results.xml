<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="36" passed="22" failed="11" skipped="3">
  <reporter-output>
  </reporter-output>
  <suite started-at="2019-07-15T10:41:39Z" name="Default suite" finished-at="2019-07-15T10:59:07Z" duration-ms="1048409">
    <groups>
    </groups>
    <test started-at="2019-07-15T10:41:39Z" name="Default test" finished-at="2019-07-15T10:59:07Z" duration-ms="1048409">
      <class name="com.tetherfi.test.fax.FaxAutoACKConfigurationTest">
        <test-method is-config="true" signature="openApplication()[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:11:39Z" name="openApplication" finished-at="2019-07-15T16:11:50Z" duration-ms="11097" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method is-config="true" signature="AddFaxLineConfigRecord()[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:11:50Z" name="AddFaxLineConfigRecord" finished-at="2019-07-15T16:11:58Z" duration-ms="8317" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddFaxLineConfigRecord -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:11:58Z" name="startTestCase" finished-at="2019-07-15T16:11:58Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.FaxAutoACKConfigurationPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToFaxAutoACKConfigurationPage()[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:11:58Z" name="NavigateToFaxAutoACKConfigurationPage" finished-at="2019-07-15T16:12:02Z" duration-ms="3478" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxAutoACKConfigurationPage -->
        <test-method signature="FaxAutoACKConfigurationPage()[pri:1, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:12:02Z" name="FaxAutoACKConfigurationPage" finished-at="2019-07-15T16:12:03Z" duration-ms="812" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FaxAutoACKConfigurationPage -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:12:03Z" name="afterEachMethod" finished-at="2019-07-15T16:12:04Z" duration-ms="1205" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.FaxAutoACKConfigurationPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:12:04Z" name="endTestCase" finished-at="2019-07-15T16:12:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.FaxAutoACKConfigurationPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigateToFaxAutoACKConfigurationPage()[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:12:04Z" name="NavigateToFaxAutoACKConfigurationPage" finished-at="2019-07-15T16:12:07Z" duration-ms="3637" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxAutoACKConfigurationPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:12:04Z" name="startTestCase" finished-at="2019-07-15T16:12:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.VerifyDropdownForAllTheColumns()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="VerifyDropdownForAllTheColumns()[pri:2, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:12:07Z" name="VerifyDropdownForAllTheColumns" finished-at="2019-07-15T16:12:18Z" duration-ms="10234" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyDropdownForAllTheColumns -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:12:18Z" name="afterEachMethod" finished-at="2019-07-15T16:12:19Z" duration-ms="1090" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.VerifyDropdownForAllTheColumns()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:12:19Z" name="endTestCase" finished-at="2019-07-15T16:12:19Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.VerifyDropdownForAllTheColumns()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigateToFaxAutoACKConfigurationPage()[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:12:19Z" name="NavigateToFaxAutoACKConfigurationPage" finished-at="2019-07-15T16:12:22Z" duration-ms="3533" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxAutoACKConfigurationPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:12:19Z" name="startTestCase" finished-at="2019-07-15T16:12:19Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.VerifyColumnsHeaderEnable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="VerifyColumnsHeaderEnable()[pri:3, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:12:22Z" name="VerifyColumnsHeaderEnable" finished-at="2019-07-15T16:12:29Z" duration-ms="6238" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyColumnsHeaderEnable -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:12:29Z" name="afterEachMethod" finished-at="2019-07-15T16:12:30Z" duration-ms="1192" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.VerifyColumnsHeaderEnable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:12:30Z" name="endTestCase" finished-at="2019-07-15T16:12:30Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.VerifyColumnsHeaderEnable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:12:30Z" name="startTestCase" finished-at="2019-07-15T16:12:30Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.VerifyColumnsHeaderDisable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToFaxAutoACKConfigurationPage()[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:12:30Z" name="NavigateToFaxAutoACKConfigurationPage" finished-at="2019-07-15T16:12:33Z" duration-ms="3530" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxAutoACKConfigurationPage -->
        <test-method signature="VerifyColumnsHeaderDisable()[pri:4, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:12:33Z" name="VerifyColumnsHeaderDisable" finished-at="2019-07-15T16:12:40Z" duration-ms="7145" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyColumnsHeaderDisable -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:12:40Z" name="afterEachMethod" finished-at="2019-07-15T16:12:42Z" duration-ms="1253" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.VerifyColumnsHeaderDisable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:12:42Z" name="endTestCase" finished-at="2019-07-15T16:12:42Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.VerifyColumnsHeaderDisable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:12:42Z" name="startTestCase" finished-at="2019-07-15T16:12:42Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.AddCancelAutoAckConfigRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToFaxAutoACKConfigurationPage()[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:12:42Z" name="NavigateToFaxAutoACKConfigurationPage" finished-at="2019-07-15T16:12:45Z" duration-ms="3467" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxAutoACKConfigurationPage -->
        <test-method signature="AddCancelAutoAckConfigRecord()[pri:5, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:12:45Z" name="AddCancelAutoAckConfigRecord" finished-at="2019-07-15T16:12:47Z" duration-ms="1742" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddCancelAutoAckConfigRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:12:47Z" name="afterEachMethod" finished-at="2019-07-15T16:12:48Z" duration-ms="1163" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.AddCancelAutoAckConfigRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:12:48Z" name="endTestCase" finished-at="2019-07-15T16:12:48Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.AddCancelAutoAckConfigRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:12:48Z" name="startTestCase" finished-at="2019-07-15T16:12:48Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.AddNewAutoAckConfigRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToFaxAutoACKConfigurationPage()[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:12:48Z" name="NavigateToFaxAutoACKConfigurationPage" finished-at="2019-07-15T16:12:51Z" duration-ms="3445" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxAutoACKConfigurationPage -->
        <test-method signature="AddNewAutoAckConfigRecord()[pri:6, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:12:51Z" name="AddNewAutoAckConfigRecord" finished-at="2019-07-15T16:13:56Z" duration-ms="64530" status="FAIL">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[element click intercepted: Element <a role="button" class="k-button k-button-icontext k-primary k-grid-update" style="width=10px;" href="#">...</a> is not clickable at point (1047, 355). Other element would receive the click: <div>...</div>
  (Session info: chrome=75.0.3770.100)
  (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 6.3.9600 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.5.3', revision: 'a88d25fe6b', time: '2017-08-29T12:42:44.417Z'
System info: host: 'ADMIN', ip: '192.168.1.65', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '9.0.4'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{mobileEmulationEnabled=false, timeouts={implicit=0, pageLoad=300000, script=30000}, hasTouchScreen=false, platform=WIN8_1, acceptSslCerts=false, goog:chromeOptions={debuggerAddress=localhost:51337}, acceptInsecureCerts=false, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, platformName=WIN8_1, setWindowRect=true, unexpectedAlertBehaviour=ignore, applicationCacheEnabled=false, rotatable=false, networkConnectionEnabled=false, chrome={chromedriverVersion=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}), userDataDir=C:\Users\ADMINP~1\AppData\Local\Temp\scoped_dir3028_31336}, takesHeapSnapshot=true, unhandledPromptBehavior=ignore, pageLoadStrategy=normal, strictFileInteractability=false, databaseEnabled=false, handlesAlerts=true, version=75.0.3770.100, browserConnectionEnabled=false, proxy=Proxy(), nativeEvents=true, locationContextEnabled=true, cssSelectorsEnabled=true}]
Session ID: 1ca983a7028cc4bcbe01814695a1f373]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: element click intercepted: Element <a role="button" class="k-button k-button-icontext k-primary k-grid-update" style="width=10px;" href="#">...</a> is not clickable at point (1047, 355). Other element would receive the click: <div>...</div>
  (Session info: chrome=75.0.3770.100)
  (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 6.3.9600 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.5.3', revision: 'a88d25fe6b', time: '2017-08-29T12:42:44.417Z'
System info: host: 'ADMIN', ip: '192.168.1.65', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '9.0.4'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{mobileEmulationEnabled=false, timeouts={implicit=0, pageLoad=300000, script=30000}, hasTouchScreen=false, platform=WIN8_1, acceptSslCerts=false, goog:chromeOptions={debuggerAddress=localhost:51337}, acceptInsecureCerts=false, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, platformName=WIN8_1, setWindowRect=true, unexpectedAlertBehaviour=ignore, applicationCacheEnabled=false, rotatable=false, networkConnectionEnabled=false, chrome={chromedriverVersion=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}), userDataDir=C:\Users\ADMINP~1\AppData\Local\Temp\scoped_dir3028_31336}, takesHeapSnapshot=true, unhandledPromptBehavior=ignore, pageLoadStrategy=normal, strictFileInteractability=false, databaseEnabled=false, handlesAlerts=true, version=75.0.3770.100, browserConnectionEnabled=false, proxy=Proxy(), nativeEvents=true, locationContextEnabled=true, cssSelectorsEnabled=true}]
Session ID: 1ca983a7028cc4bcbe01814695a1f373
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:215)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:167)
	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:82)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:45)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:82)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:646)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:275)
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:82)
	at jdk.internal.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
	at com.sun.proxy.$Proxy14.click(Unknown Source)
	at com.tetherfi.pages.BasePage.selectWebElement(BasePage.java:195)
	at com.tetherfi.pages.FaxAutoACKConfigurationPage.addNewFaxAutoAckConfigRecord(FaxAutoACKConfigurationPage.java:624)
	at com.tetherfi.test.fax.FaxAutoACKConfigurationTest.AddNewAutoAckConfigRecord(FaxAutoACKConfigurationTest.java:108)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewAutoAckConfigRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:13:56Z" name="afterEachMethod" finished-at="2019-07-15T16:13:57Z" duration-ms="1397" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.AddNewAutoAckConfigRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:13:57Z" name="endTestCase" finished-at="2019-07-15T16:13:57Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.AddNewAutoAckConfigRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method signature="VerifyAuditTrialReportForCreate()[pri:7, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:13:57Z" name="VerifyAuditTrialReportForCreate" finished-at="2019-07-15T16:13:57Z" depends-on-methods="com.tetherfi.test.fax.FaxAutoACKConfigurationTest.AddNewAutoAckConfigRecord" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method FaxAutoACKConfigurationTest.VerifyAuditTrialReportForCreate()[pri:7, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method FaxAutoACKConfigurationTest.VerifyAuditTrialReportForCreate()[pri:7, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1084)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrialReportForCreate -->
        <test-method is-config="true" signature="NavigateToFaxAutoACKConfigurationPage()[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:13:57Z" name="NavigateToFaxAutoACKConfigurationPage" finished-at="2019-07-15T16:14:01Z" duration-ms="3470" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxAutoACKConfigurationPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:13:57Z" name="startTestCase" finished-at="2019-07-15T16:13:57Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.DuplicateRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="DuplicateRecord()[pri:8, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:14:01Z" name="DuplicateRecord" finished-at="2019-07-15T16:15:06Z" duration-ms="64878" status="FAIL">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[element click intercepted: Element <a role="button" class="k-button k-button-icontext k-primary k-grid-update" style="width=10px;" href="#">...</a> is not clickable at point (1047, 355). Other element would receive the click: <div>...</div>
  (Session info: chrome=75.0.3770.100)
  (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 6.3.9600 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.5.3', revision: 'a88d25fe6b', time: '2017-08-29T12:42:44.417Z'
System info: host: 'ADMIN', ip: '192.168.1.65', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '9.0.4'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{mobileEmulationEnabled=false, timeouts={implicit=0, pageLoad=300000, script=30000}, hasTouchScreen=false, platform=WIN8_1, acceptSslCerts=false, goog:chromeOptions={debuggerAddress=localhost:51337}, acceptInsecureCerts=false, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, platformName=WIN8_1, setWindowRect=true, unexpectedAlertBehaviour=ignore, applicationCacheEnabled=false, rotatable=false, networkConnectionEnabled=false, chrome={chromedriverVersion=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}), userDataDir=C:\Users\ADMINP~1\AppData\Local\Temp\scoped_dir3028_31336}, takesHeapSnapshot=true, unhandledPromptBehavior=ignore, pageLoadStrategy=normal, strictFileInteractability=false, databaseEnabled=false, handlesAlerts=true, version=75.0.3770.100, browserConnectionEnabled=false, proxy=Proxy(), nativeEvents=true, locationContextEnabled=true, cssSelectorsEnabled=true}]
Session ID: 1ca983a7028cc4bcbe01814695a1f373]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: element click intercepted: Element <a role="button" class="k-button k-button-icontext k-primary k-grid-update" style="width=10px;" href="#">...</a> is not clickable at point (1047, 355). Other element would receive the click: <div>...</div>
  (Session info: chrome=75.0.3770.100)
  (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 6.3.9600 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.5.3', revision: 'a88d25fe6b', time: '2017-08-29T12:42:44.417Z'
System info: host: 'ADMIN', ip: '192.168.1.65', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '9.0.4'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{mobileEmulationEnabled=false, timeouts={implicit=0, pageLoad=300000, script=30000}, hasTouchScreen=false, platform=WIN8_1, acceptSslCerts=false, goog:chromeOptions={debuggerAddress=localhost:51337}, acceptInsecureCerts=false, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, platformName=WIN8_1, setWindowRect=true, unexpectedAlertBehaviour=ignore, applicationCacheEnabled=false, rotatable=false, networkConnectionEnabled=false, chrome={chromedriverVersion=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}), userDataDir=C:\Users\ADMINP~1\AppData\Local\Temp\scoped_dir3028_31336}, takesHeapSnapshot=true, unhandledPromptBehavior=ignore, pageLoadStrategy=normal, strictFileInteractability=false, databaseEnabled=false, handlesAlerts=true, version=75.0.3770.100, browserConnectionEnabled=false, proxy=Proxy(), nativeEvents=true, locationContextEnabled=true, cssSelectorsEnabled=true}]
Session ID: 1ca983a7028cc4bcbe01814695a1f373
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:215)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:167)
	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:82)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:45)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:82)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:646)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:275)
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:82)
	at jdk.internal.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
	at com.sun.proxy.$Proxy14.click(Unknown Source)
	at com.tetherfi.pages.BasePage.selectWebElement(BasePage.java:195)
	at com.tetherfi.pages.FaxAutoACKConfigurationPage.addNewFaxAutoAckConfigRecord(FaxAutoACKConfigurationPage.java:624)
	at com.tetherfi.test.fax.FaxAutoACKConfigurationTest.DuplicateRecord(FaxAutoACKConfigurationTest.java:133)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DuplicateRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:15:06Z" name="afterEachMethod" finished-at="2019-07-15T16:15:07Z" duration-ms="1294" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.DuplicateRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:15:07Z" name="endTestCase" finished-at="2019-07-15T16:15:07Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.DuplicateRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:15:07Z" name="startTestCase" finished-at="2019-07-15T16:15:07Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.AddRecordWithoutFaxLine() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToFaxAutoACKConfigurationPage()[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:15:07Z" name="NavigateToFaxAutoACKConfigurationPage" finished-at="2019-07-15T16:15:10Z" duration-ms="3270" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxAutoACKConfigurationPage -->
        <test-method signature="AddRecordWithoutFaxLine()[pri:9, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:15:10Z" name="AddRecordWithoutFaxLine" finished-at="2019-07-15T16:16:14Z" duration-ms="63849" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddRecordWithoutFaxLine -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:16:14Z" name="afterEachMethod" finished-at="2019-07-15T16:16:16Z" duration-ms="1828" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.AddRecordWithoutFaxLine() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:16:16Z" name="endTestCase" finished-at="2019-07-15T16:16:16Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.AddRecordWithoutFaxLine() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:16:16Z" name="startTestCase" finished-at="2019-07-15T16:16:16Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.AddRecordWithoutSenderType() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToFaxAutoACKConfigurationPage()[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:16:16Z" name="NavigateToFaxAutoACKConfigurationPage" finished-at="2019-07-15T16:16:20Z" duration-ms="3593" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxAutoACKConfigurationPage -->
        <test-method signature="AddRecordWithoutSenderType()[pri:10, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:16:20Z" name="AddRecordWithoutSenderType" finished-at="2019-07-15T16:17:24Z" duration-ms="64202" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddRecordWithoutSenderType -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:17:24Z" name="afterEachMethod" finished-at="2019-07-15T16:17:25Z" duration-ms="1386" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.AddRecordWithoutSenderType() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:17:25Z" name="endTestCase" finished-at="2019-07-15T16:17:25Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.AddRecordWithoutSenderType() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:17:25Z" name="startTestCase" finished-at="2019-07-15T16:17:25Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.AddRecordWithoutName() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToFaxAutoACKConfigurationPage()[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:17:25Z" name="NavigateToFaxAutoACKConfigurationPage" finished-at="2019-07-15T16:17:29Z" duration-ms="3458" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxAutoACKConfigurationPage -->
        <test-method signature="AddRecordWithoutName()[pri:11, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:17:29Z" name="AddRecordWithoutName" finished-at="2019-07-15T16:18:34Z" duration-ms="65321" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddRecordWithoutName -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:18:34Z" name="afterEachMethod" finished-at="2019-07-15T16:18:35Z" duration-ms="1357" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.AddRecordWithoutName() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:18:35Z" name="endTestCase" finished-at="2019-07-15T16:18:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.AddRecordWithoutName() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigateToFaxAutoACKConfigurationPage()[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:18:35Z" name="NavigateToFaxAutoACKConfigurationPage" finished-at="2019-07-15T16:18:39Z" duration-ms="3563" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxAutoACKConfigurationPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:18:35Z" name="startTestCase" finished-at="2019-07-15T16:18:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.AddRecordWithoutStatus() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="AddRecordWithoutStatus()[pri:12, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:18:39Z" name="AddRecordWithoutStatus" finished-at="2019-07-15T16:19:54Z" duration-ms="74996" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddRecordWithoutStatus -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:19:54Z" name="afterEachMethod" finished-at="2019-07-15T16:19:56Z" duration-ms="1664" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.AddRecordWithoutStatus() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:19:56Z" name="endTestCase" finished-at="2019-07-15T16:19:56Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.AddRecordWithoutStatus() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:19:56Z" name="startTestCase" finished-at="2019-07-15T16:19:56Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.AddRecordWithoutTemplate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToFaxAutoACKConfigurationPage()[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:19:56Z" name="NavigateToFaxAutoACKConfigurationPage" finished-at="2019-07-15T16:19:59Z" duration-ms="3313" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxAutoACKConfigurationPage -->
        <test-method signature="AddRecordWithoutTemplate()[pri:13, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:19:59Z" name="AddRecordWithoutTemplate" finished-at="2019-07-15T16:20:04Z" duration-ms="5247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddRecordWithoutTemplate -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:20:04Z" name="afterEachMethod" finished-at="2019-07-15T16:20:05Z" duration-ms="1148" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.AddRecordWithoutTemplate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:20:05Z" name="endTestCase" finished-at="2019-07-15T16:20:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.AddRecordWithoutTemplate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:20:05Z" name="startTestCase" finished-at="2019-07-15T16:20:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.GroupBy()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToFaxAutoACKConfigurationPage()[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:20:05Z" name="NavigateToFaxAutoACKConfigurationPage" finished-at="2019-07-15T16:20:09Z" duration-ms="3270" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxAutoACKConfigurationPage -->
        <test-method signature="GroupBy()[pri:14, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:20:09Z" name="GroupBy" finished-at="2019-07-15T16:20:11Z" duration-ms="2878" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GroupBy -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:20:11Z" name="afterEachMethod" finished-at="2019-07-15T16:20:13Z" duration-ms="1192" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.GroupBy()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:20:13Z" name="endTestCase" finished-at="2019-07-15T16:20:13Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.GroupBy()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:20:13Z" name="startTestCase" finished-at="2019-07-15T16:20:13Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.EditCancelFaxAutoACKConfigRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToFaxAutoACKConfigurationPage()[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:20:13Z" name="NavigateToFaxAutoACKConfigurationPage" finished-at="2019-07-15T16:20:16Z" duration-ms="3338" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxAutoACKConfigurationPage -->
        <test-method signature="EditCancelFaxAutoACKConfigRecord()[pri:15, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:20:16Z" name="EditCancelFaxAutoACKConfigRecord" finished-at="2019-07-15T16:21:21Z" duration-ms="64690" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.cssSelector: .k-grid-edit' (tried for 30 second(s) with 500 MILLISECONDS interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.cssSelector: .k-grid-edit' (tried for 30 second(s) with 500 MILLISECONDS interval)
	at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:80)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:232)
	at com.tetherfi.pages.BasePage.waitUntilWebElementIsVisible(BasePage.java:127)
	at com.tetherfi.pages.BasePage.selectWebElement(BasePage.java:191)
	at com.tetherfi.pages.FaxAutoACKConfigurationPage.Editcancel(FaxAutoACKConfigurationPage.java:732)
	at com.tetherfi.test.fax.FaxAutoACKConfigurationTest.EditCancelFaxAutoACKConfigRecord(FaxAutoACKConfigurationTest.java:202)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":".k-grid-edit"}
  (Session info: chrome=75.0.3770.100)
  (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 6.3.9600 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.5.3', revision: 'a88d25fe6b', time: '2017-08-29T12:42:44.417Z'
System info: host: 'ADMIN', ip: '192.168.1.65', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '9.0.4'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{mobileEmulationEnabled=false, timeouts={implicit=0, pageLoad=300000, script=30000}, hasTouchScreen=false, platform=WIN8_1, acceptSslCerts=false, goog:chromeOptions={debuggerAddress=localhost:51337}, acceptInsecureCerts=false, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, platformName=WIN8_1, setWindowRect=true, unexpectedAlertBehaviour=ignore, applicationCacheEnabled=false, rotatable=false, networkConnectionEnabled=false, chrome={chromedriverVersion=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}), userDataDir=C:\Users\ADMINP~1\AppData\Local\Temp\scoped_dir3028_31336}, takesHeapSnapshot=true, unhandledPromptBehavior=ignore, pageLoadStrategy=normal, strictFileInteractability=false, databaseEnabled=false, handlesAlerts=true, version=75.0.3770.100, browserConnectionEnabled=false, proxy=Proxy(), nativeEvents=true, locationContextEnabled=true, cssSelectorsEnabled=true}]
Session ID: 1ca983a7028cc4bcbe01814695a1f373
*** Element info: {Using=css selector, value=.k-grid-edit}
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:215)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:167)
	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:82)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:45)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:82)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:646)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:416)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByCssSelector(RemoteWebDriver.java:510)
	at org.openqa.selenium.By$ByCssSelector.findElement(By.java:430)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:408)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy14.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:302)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:288)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:285)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:209)
	... 29 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EditCancelFaxAutoACKConfigRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:21:21Z" name="afterEachMethod" finished-at="2019-07-15T16:21:22Z" duration-ms="1381" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.EditCancelFaxAutoACKConfigRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:21:22Z" name="endTestCase" finished-at="2019-07-15T16:21:22Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.EditCancelFaxAutoACKConfigRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigateToFaxAutoACKConfigurationPage()[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:21:22Z" name="NavigateToFaxAutoACKConfigurationPage" finished-at="2019-07-15T16:21:26Z" duration-ms="3502" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxAutoACKConfigurationPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:21:22Z" name="startTestCase" finished-at="2019-07-15T16:21:22Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.EditFaxAutoAckConfigRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="EditFaxAutoAckConfigRecord()[pri:16, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:21:26Z" name="EditFaxAutoAckConfigRecord" finished-at="2019-07-15T16:21:29Z" duration-ms="3713" status="FAIL">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[element click intercepted: Element <a role="button" class="k-button k-button-icontext k-grid-edit" style="width=10px;" href="#">...</a> is not clickable at point (52, 223). Other element would receive the click: <div class="modal inmodal fade in" id="searchModel" tabindex="-1" role="dialog" aria-hidden="true" style="display: block; padding-right: 5px;">...</div>
  (Session info: chrome=75.0.3770.100)
  (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 6.3.9600 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.5.3', revision: 'a88d25fe6b', time: '2017-08-29T12:42:44.417Z'
System info: host: 'ADMIN', ip: '192.168.1.65', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '9.0.4'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{mobileEmulationEnabled=false, timeouts={implicit=0, pageLoad=300000, script=30000}, hasTouchScreen=false, platform=WIN8_1, acceptSslCerts=false, goog:chromeOptions={debuggerAddress=localhost:51337}, acceptInsecureCerts=false, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, platformName=WIN8_1, setWindowRect=true, unexpectedAlertBehaviour=ignore, applicationCacheEnabled=false, rotatable=false, networkConnectionEnabled=false, chrome={chromedriverVersion=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}), userDataDir=C:\Users\ADMINP~1\AppData\Local\Temp\scoped_dir3028_31336}, takesHeapSnapshot=true, unhandledPromptBehavior=ignore, pageLoadStrategy=normal, strictFileInteractability=false, databaseEnabled=false, handlesAlerts=true, version=75.0.3770.100, browserConnectionEnabled=false, proxy=Proxy(), nativeEvents=true, locationContextEnabled=true, cssSelectorsEnabled=true}]
Session ID: 1ca983a7028cc4bcbe01814695a1f373]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: element click intercepted: Element <a role="button" class="k-button k-button-icontext k-grid-edit" style="width=10px;" href="#">...</a> is not clickable at point (52, 223). Other element would receive the click: <div class="modal inmodal fade in" id="searchModel" tabindex="-1" role="dialog" aria-hidden="true" style="display: block; padding-right: 5px;">...</div>
  (Session info: chrome=75.0.3770.100)
  (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 6.3.9600 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.5.3', revision: 'a88d25fe6b', time: '2017-08-29T12:42:44.417Z'
System info: host: 'ADMIN', ip: '192.168.1.65', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '9.0.4'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{mobileEmulationEnabled=false, timeouts={implicit=0, pageLoad=300000, script=30000}, hasTouchScreen=false, platform=WIN8_1, acceptSslCerts=false, goog:chromeOptions={debuggerAddress=localhost:51337}, acceptInsecureCerts=false, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, platformName=WIN8_1, setWindowRect=true, unexpectedAlertBehaviour=ignore, applicationCacheEnabled=false, rotatable=false, networkConnectionEnabled=false, chrome={chromedriverVersion=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}), userDataDir=C:\Users\ADMINP~1\AppData\Local\Temp\scoped_dir3028_31336}, takesHeapSnapshot=true, unhandledPromptBehavior=ignore, pageLoadStrategy=normal, strictFileInteractability=false, databaseEnabled=false, handlesAlerts=true, version=75.0.3770.100, browserConnectionEnabled=false, proxy=Proxy(), nativeEvents=true, locationContextEnabled=true, cssSelectorsEnabled=true}]
Session ID: 1ca983a7028cc4bcbe01814695a1f373
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:215)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:167)
	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:82)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:45)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:82)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:646)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:275)
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:82)
	at jdk.internal.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
	at com.sun.proxy.$Proxy14.click(Unknown Source)
	at com.tetherfi.pages.BasePage.selectWebElement(BasePage.java:195)
	at com.tetherfi.pages.FaxAutoACKConfigurationPage.editFaxAutoAckConfigRecord(FaxAutoACKConfigurationPage.java:743)
	at com.tetherfi.test.fax.FaxAutoACKConfigurationTest.EditFaxAutoAckConfigRecord(FaxAutoACKConfigurationTest.java:211)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EditFaxAutoAckConfigRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:21:29Z" name="afterEachMethod" finished-at="2019-07-15T16:21:30Z" duration-ms="1159" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.EditFaxAutoAckConfigRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:21:30Z" name="endTestCase" finished-at="2019-07-15T16:21:30Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.EditFaxAutoAckConfigRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method signature="VerifyAuditTrialReportForUpdate()[pri:17, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:21:30Z" name="VerifyAuditTrialReportForUpdate" finished-at="2019-07-15T16:21:30Z" depends-on-methods="com.tetherfi.test.fax.FaxAutoACKConfigurationTest.EditFaxAutoAckConfigRecord" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method FaxAutoACKConfigurationTest.VerifyAuditTrialReportForUpdate()[pri:17, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method FaxAutoACKConfigurationTest.VerifyAuditTrialReportForUpdate()[pri:17, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1084)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrialReportForUpdate -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:21:30Z" name="startTestCase" finished-at="2019-07-15T16:21:30Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.EditInvalidRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToFaxAutoACKConfigurationPage()[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:21:30Z" name="NavigateToFaxAutoACKConfigurationPage" finished-at="2019-07-15T16:21:34Z" duration-ms="3417" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxAutoACKConfigurationPage -->
        <test-method signature="EditInvalidRecord()[pri:18, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:21:34Z" name="EditInvalidRecord" finished-at="2019-07-15T16:21:37Z" duration-ms="3631" status="FAIL">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[element click intercepted: Element <a role="button" class="k-button k-button-icontext k-grid-edit" style="width=10px;" href="#">...</a> is not clickable at point (52, 223). Other element would receive the click: <div class="modal inmodal fade in" id="searchModel" tabindex="-1" role="dialog" aria-hidden="true" style="display: block; padding-right: 5px;">...</div>
  (Session info: chrome=75.0.3770.100)
  (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 6.3.9600 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.5.3', revision: 'a88d25fe6b', time: '2017-08-29T12:42:44.417Z'
System info: host: 'ADMIN', ip: '192.168.1.65', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '9.0.4'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{mobileEmulationEnabled=false, timeouts={implicit=0, pageLoad=300000, script=30000}, hasTouchScreen=false, platform=WIN8_1, acceptSslCerts=false, goog:chromeOptions={debuggerAddress=localhost:51337}, acceptInsecureCerts=false, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, platformName=WIN8_1, setWindowRect=true, unexpectedAlertBehaviour=ignore, applicationCacheEnabled=false, rotatable=false, networkConnectionEnabled=false, chrome={chromedriverVersion=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}), userDataDir=C:\Users\ADMINP~1\AppData\Local\Temp\scoped_dir3028_31336}, takesHeapSnapshot=true, unhandledPromptBehavior=ignore, pageLoadStrategy=normal, strictFileInteractability=false, databaseEnabled=false, handlesAlerts=true, version=75.0.3770.100, browserConnectionEnabled=false, proxy=Proxy(), nativeEvents=true, locationContextEnabled=true, cssSelectorsEnabled=true}]
Session ID: 1ca983a7028cc4bcbe01814695a1f373]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: element click intercepted: Element <a role="button" class="k-button k-button-icontext k-grid-edit" style="width=10px;" href="#">...</a> is not clickable at point (52, 223). Other element would receive the click: <div class="modal inmodal fade in" id="searchModel" tabindex="-1" role="dialog" aria-hidden="true" style="display: block; padding-right: 5px;">...</div>
  (Session info: chrome=75.0.3770.100)
  (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 6.3.9600 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.5.3', revision: 'a88d25fe6b', time: '2017-08-29T12:42:44.417Z'
System info: host: 'ADMIN', ip: '192.168.1.65', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '9.0.4'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{mobileEmulationEnabled=false, timeouts={implicit=0, pageLoad=300000, script=30000}, hasTouchScreen=false, platform=WIN8_1, acceptSslCerts=false, goog:chromeOptions={debuggerAddress=localhost:51337}, acceptInsecureCerts=false, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, platformName=WIN8_1, setWindowRect=true, unexpectedAlertBehaviour=ignore, applicationCacheEnabled=false, rotatable=false, networkConnectionEnabled=false, chrome={chromedriverVersion=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}), userDataDir=C:\Users\ADMINP~1\AppData\Local\Temp\scoped_dir3028_31336}, takesHeapSnapshot=true, unhandledPromptBehavior=ignore, pageLoadStrategy=normal, strictFileInteractability=false, databaseEnabled=false, handlesAlerts=true, version=75.0.3770.100, browserConnectionEnabled=false, proxy=Proxy(), nativeEvents=true, locationContextEnabled=true, cssSelectorsEnabled=true}]
Session ID: 1ca983a7028cc4bcbe01814695a1f373
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:215)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:167)
	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:82)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:45)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:82)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:646)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:275)
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:82)
	at jdk.internal.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
	at com.sun.proxy.$Proxy14.click(Unknown Source)
	at com.tetherfi.pages.BasePage.selectWebElement(BasePage.java:195)
	at com.tetherfi.pages.FaxAutoACKConfigurationPage.EditInvalidRecord(FaxAutoACKConfigurationPage.java:753)
	at com.tetherfi.test.fax.FaxAutoACKConfigurationTest.EditInvalidRecord(FaxAutoACKConfigurationTest.java:236)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EditInvalidRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:21:37Z" name="afterEachMethod" finished-at="2019-07-15T16:21:39Z" duration-ms="1156" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.EditInvalidRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:21:39Z" name="endTestCase" finished-at="2019-07-15T16:21:39Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.EditInvalidRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:21:39Z" name="startTestCase" finished-at="2019-07-15T16:21:39Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.ExportToExcel() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToFaxAutoACKConfigurationPage()[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:21:39Z" name="NavigateToFaxAutoACKConfigurationPage" finished-at="2019-07-15T16:21:42Z" duration-ms="3426" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxAutoACKConfigurationPage -->
        <test-method signature="ExportToExcel()[pri:19, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:21:42Z" name="ExportToExcel" finished-at="2019-07-15T16:21:45Z" duration-ms="2795" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ExportToExcel -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:21:45Z" name="afterEachMethod" finished-at="2019-07-15T16:21:46Z" duration-ms="1128" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.ExportToExcel() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:21:46Z" name="endTestCase" finished-at="2019-07-15T16:21:46Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.ExportToExcel() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:21:46Z" name="startTestCase" finished-at="2019-07-15T16:21:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.ExportToExcelData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToFaxAutoACKConfigurationPage()[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:21:46Z" name="NavigateToFaxAutoACKConfigurationPage" finished-at="2019-07-15T16:21:49Z" duration-ms="3405" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxAutoACKConfigurationPage -->
        <test-method signature="ExportToExcelData()[pri:20, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:21:49Z" name="ExportToExcelData" finished-at="2019-07-15T16:21:52Z" duration-ms="2288" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ExportToExcelData -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:21:52Z" name="afterEachMethod" finished-at="2019-07-15T16:21:53Z" duration-ms="1101" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.ExportToExcelData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:21:53Z" name="endTestCase" finished-at="2019-07-15T16:21:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.ExportToExcelData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigateToFaxAutoACKConfigurationPage()[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:21:53Z" name="NavigateToFaxAutoACKConfigurationPage" finished-at="2019-07-15T16:21:56Z" duration-ms="3358" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxAutoACKConfigurationPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:21:53Z" name="startTestCase" finished-at="2019-07-15T16:21:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.AddDuplicateFaxlineDifferentSenderType() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="AddDuplicateFaxlineDifferentSenderType()[pri:21, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:21:56Z" name="AddDuplicateFaxlineDifferentSenderType" finished-at="2019-07-15T16:23:01Z" duration-ms="65338" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Record Created Successfully] but found [Please select the Template Content]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Record Created Successfully] but found [Please select the Template Content]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:189)
	at org.testng.Assert.assertEquals(Assert.java:199)
	at com.tetherfi.test.fax.FaxAutoACKConfigurationTest.AddDuplicateFaxlineDifferentSenderType(FaxAutoACKConfigurationTest.java:264)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddDuplicateFaxlineDifferentSenderType -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:23:01Z" name="afterEachMethod" finished-at="2019-07-15T16:23:03Z" duration-ms="1285" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.AddDuplicateFaxlineDifferentSenderType() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:23:03Z" name="endTestCase" finished-at="2019-07-15T16:23:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.AddDuplicateFaxlineDifferentSenderType() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigateToFaxAutoACKConfigurationPage()[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:23:03Z" name="NavigateToFaxAutoACKConfigurationPage" finished-at="2019-07-15T16:23:06Z" duration-ms="3238" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxAutoACKConfigurationPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:23:03Z" name="startTestCase" finished-at="2019-07-15T16:23:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.searchPage() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="searchPage()[pri:22, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:23:06Z" name="searchPage" finished-at="2019-07-15T16:23:10Z" duration-ms="3516" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchPage -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:23:10Z" name="afterEachMethod" finished-at="2019-07-15T16:23:11Z" duration-ms="1068" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.searchPage() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:23:11Z" name="endTestCase" finished-at="2019-07-15T16:23:11Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.searchPage() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:23:11Z" name="startTestCase" finished-at="2019-07-15T16:23:11Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.searchwithoutSearchTextbox() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToFaxAutoACKConfigurationPage()[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:23:11Z" name="NavigateToFaxAutoACKConfigurationPage" finished-at="2019-07-15T16:23:14Z" duration-ms="3229" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxAutoACKConfigurationPage -->
        <test-method signature="searchwithoutSearchTextbox()[pri:23, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:23:14Z" name="searchwithoutSearchTextbox" finished-at="2019-07-15T16:23:17Z" duration-ms="3290" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchwithoutSearchTextbox -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:23:17Z" name="afterEachMethod" finished-at="2019-07-15T16:23:18Z" duration-ms="1101" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.searchwithoutSearchTextbox() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:23:18Z" name="endTestCase" finished-at="2019-07-15T16:23:18Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.searchwithoutSearchTextbox() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigateToFaxAutoACKConfigurationPage()[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:23:18Z" name="NavigateToFaxAutoACKConfigurationPage" finished-at="2019-07-15T16:23:22Z" duration-ms="3408" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxAutoACKConfigurationPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:23:18Z" name="startTestCase" finished-at="2019-07-15T16:23:18Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.DeleteCancelFaxAutoAckConfigRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="DeleteCancelFaxAutoAckConfigRecord()[pri:24, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:23:22Z" name="DeleteCancelFaxAutoAckConfigRecord" finished-at="2019-07-15T16:24:26Z" duration-ms="64661" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.cssSelector: .k-grid-CustomDelete' (tried for 30 second(s) with 500 MILLISECONDS interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.cssSelector: .k-grid-CustomDelete' (tried for 30 second(s) with 500 MILLISECONDS interval)
	at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:80)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:232)
	at com.tetherfi.pages.BasePage.waitUntilWebElementIsVisible(BasePage.java:127)
	at com.tetherfi.pages.BasePage.selectWebElement(BasePage.java:191)
	at com.tetherfi.pages.FaxAutoACKConfigurationPage.Deletecancel(FaxAutoACKConfigurationPage.java:795)
	at com.tetherfi.test.fax.FaxAutoACKConfigurationTest.DeleteCancelFaxAutoAckConfigRecord(FaxAutoACKConfigurationTest.java:292)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":".k-grid-CustomDelete"}
  (Session info: chrome=75.0.3770.100)
  (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 6.3.9600 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.5.3', revision: 'a88d25fe6b', time: '2017-08-29T12:42:44.417Z'
System info: host: 'ADMIN', ip: '192.168.1.65', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '9.0.4'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{mobileEmulationEnabled=false, timeouts={implicit=0, pageLoad=300000, script=30000}, hasTouchScreen=false, platform=WIN8_1, acceptSslCerts=false, goog:chromeOptions={debuggerAddress=localhost:51337}, acceptInsecureCerts=false, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, platformName=WIN8_1, setWindowRect=true, unexpectedAlertBehaviour=ignore, applicationCacheEnabled=false, rotatable=false, networkConnectionEnabled=false, chrome={chromedriverVersion=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}), userDataDir=C:\Users\ADMINP~1\AppData\Local\Temp\scoped_dir3028_31336}, takesHeapSnapshot=true, unhandledPromptBehavior=ignore, pageLoadStrategy=normal, strictFileInteractability=false, databaseEnabled=false, handlesAlerts=true, version=75.0.3770.100, browserConnectionEnabled=false, proxy=Proxy(), nativeEvents=true, locationContextEnabled=true, cssSelectorsEnabled=true}]
Session ID: 1ca983a7028cc4bcbe01814695a1f373
*** Element info: {Using=css selector, value=.k-grid-CustomDelete}
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:215)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:167)
	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:82)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:45)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:82)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:646)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:416)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByCssSelector(RemoteWebDriver.java:510)
	at org.openqa.selenium.By$ByCssSelector.findElement(By.java:430)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:408)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy14.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:302)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:288)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:285)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:209)
	... 29 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteCancelFaxAutoAckConfigRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:24:26Z" name="afterEachMethod" finished-at="2019-07-15T16:24:28Z" duration-ms="1249" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.DeleteCancelFaxAutoAckConfigRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:24:28Z" name="endTestCase" finished-at="2019-07-15T16:24:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.DeleteCancelFaxAutoAckConfigRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigateToFaxAutoACKConfigurationPage()[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:24:28Z" name="NavigateToFaxAutoACKConfigurationPage" finished-at="2019-07-15T16:24:31Z" duration-ms="3311" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxAutoACKConfigurationPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:24:28Z" name="startTestCase" finished-at="2019-07-15T16:24:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.DeleteFaxAutoAckConfigRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="DeleteFaxAutoAckConfigRecord()[pri:25, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:24:31Z" name="DeleteFaxAutoAckConfigRecord" finished-at="2019-07-15T16:25:36Z" duration-ms="64698" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.cssSelector: .k-grid-CustomDelete' (tried for 30 second(s) with 500 MILLISECONDS interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.cssSelector: .k-grid-CustomDelete' (tried for 30 second(s) with 500 MILLISECONDS interval)
	at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:80)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:232)
	at com.tetherfi.pages.BasePage.waitUntilWebElementIsVisible(BasePage.java:127)
	at com.tetherfi.pages.BasePage.selectWebElement(BasePage.java:191)
	at com.tetherfi.pages.FaxAutoACKConfigurationPage.deleteFaxAutoAckConfigRecord(FaxAutoACKConfigurationPage.java:806)
	at com.tetherfi.test.fax.FaxAutoACKConfigurationTest.DeleteFaxAutoAckConfigRecord(FaxAutoACKConfigurationTest.java:301)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":".k-grid-CustomDelete"}
  (Session info: chrome=75.0.3770.100)
  (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 6.3.9600 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.5.3', revision: 'a88d25fe6b', time: '2017-08-29T12:42:44.417Z'
System info: host: 'ADMIN', ip: '192.168.1.65', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '9.0.4'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{mobileEmulationEnabled=false, timeouts={implicit=0, pageLoad=300000, script=30000}, hasTouchScreen=false, platform=WIN8_1, acceptSslCerts=false, goog:chromeOptions={debuggerAddress=localhost:51337}, acceptInsecureCerts=false, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, platformName=WIN8_1, setWindowRect=true, unexpectedAlertBehaviour=ignore, applicationCacheEnabled=false, rotatable=false, networkConnectionEnabled=false, chrome={chromedriverVersion=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}), userDataDir=C:\Users\ADMINP~1\AppData\Local\Temp\scoped_dir3028_31336}, takesHeapSnapshot=true, unhandledPromptBehavior=ignore, pageLoadStrategy=normal, strictFileInteractability=false, databaseEnabled=false, handlesAlerts=true, version=75.0.3770.100, browserConnectionEnabled=false, proxy=Proxy(), nativeEvents=true, locationContextEnabled=true, cssSelectorsEnabled=true}]
Session ID: 1ca983a7028cc4bcbe01814695a1f373
*** Element info: {Using=css selector, value=.k-grid-CustomDelete}
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:215)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:167)
	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:82)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:45)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:82)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:646)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:416)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByCssSelector(RemoteWebDriver.java:510)
	at org.openqa.selenium.By$ByCssSelector.findElement(By.java:430)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:408)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy14.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:302)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:288)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:285)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:209)
	... 29 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteFaxAutoAckConfigRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:25:36Z" name="afterEachMethod" finished-at="2019-07-15T16:25:37Z" duration-ms="1192" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.DeleteFaxAutoAckConfigRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:25:37Z" name="endTestCase" finished-at="2019-07-15T16:25:37Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.DeleteFaxAutoAckConfigRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method signature="VerifyAuditTrialReportForDelete()[pri:26, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:25:37Z" name="VerifyAuditTrialReportForDelete" finished-at="2019-07-15T16:25:37Z" depends-on-methods="com.tetherfi.test.fax.FaxAutoACKConfigurationTest.DeleteFaxAutoAckConfigRecord" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method FaxAutoACKConfigurationTest.VerifyAuditTrialReportForDelete()[pri:26, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method FaxAutoACKConfigurationTest.VerifyAuditTrialReportForDelete()[pri:26, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1084)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrialReportForDelete -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:25:37Z" name="startTestCase" finished-at="2019-07-15T16:25:37Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.DeleteInvalidRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToFaxAutoACKConfigurationPage()[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:25:37Z" name="NavigateToFaxAutoACKConfigurationPage" finished-at="2019-07-15T16:25:40Z" duration-ms="3310" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxAutoACKConfigurationPage -->
        <test-method signature="DeleteInvalidRecord()[pri:27, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:25:40Z" name="DeleteInvalidRecord" finished-at="2019-07-15T16:26:45Z" duration-ms="64508" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.cssSelector: .k-grid-CustomDelete' (tried for 30 second(s) with 500 MILLISECONDS interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.cssSelector: .k-grid-CustomDelete' (tried for 30 second(s) with 500 MILLISECONDS interval)
	at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:80)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:232)
	at com.tetherfi.pages.BasePage.waitUntilWebElementIsVisible(BasePage.java:127)
	at com.tetherfi.pages.BasePage.selectWebElement(BasePage.java:191)
	at com.tetherfi.pages.FaxAutoACKConfigurationPage.DeleteInvalidRecord(FaxAutoACKConfigurationPage.java:815)
	at com.tetherfi.test.fax.FaxAutoACKConfigurationTest.DeleteInvalidRecord(FaxAutoACKConfigurationTest.java:326)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":".k-grid-CustomDelete"}
  (Session info: chrome=75.0.3770.100)
  (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 6.3.9600 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.5.3', revision: 'a88d25fe6b', time: '2017-08-29T12:42:44.417Z'
System info: host: 'ADMIN', ip: '192.168.1.65', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '9.0.4'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{mobileEmulationEnabled=false, timeouts={implicit=0, pageLoad=300000, script=30000}, hasTouchScreen=false, platform=WIN8_1, acceptSslCerts=false, goog:chromeOptions={debuggerAddress=localhost:51337}, acceptInsecureCerts=false, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, platformName=WIN8_1, setWindowRect=true, unexpectedAlertBehaviour=ignore, applicationCacheEnabled=false, rotatable=false, networkConnectionEnabled=false, chrome={chromedriverVersion=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}), userDataDir=C:\Users\ADMINP~1\AppData\Local\Temp\scoped_dir3028_31336}, takesHeapSnapshot=true, unhandledPromptBehavior=ignore, pageLoadStrategy=normal, strictFileInteractability=false, databaseEnabled=false, handlesAlerts=true, version=75.0.3770.100, browserConnectionEnabled=false, proxy=Proxy(), nativeEvents=true, locationContextEnabled=true, cssSelectorsEnabled=true}]
Session ID: 1ca983a7028cc4bcbe01814695a1f373
*** Element info: {Using=css selector, value=.k-grid-CustomDelete}
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:215)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:167)
	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:82)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:45)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:82)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:646)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:416)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByCssSelector(RemoteWebDriver.java:510)
	at org.openqa.selenium.By$ByCssSelector.findElement(By.java:430)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:408)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy14.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:302)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:288)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:285)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:209)
	... 29 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteInvalidRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:26:45Z" name="afterEachMethod" finished-at="2019-07-15T16:26:46Z" duration-ms="1277" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.DeleteInvalidRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:26:46Z" name="endTestCase" finished-at="2019-07-15T16:26:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.DeleteInvalidRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:26:46Z" name="startTestCase" finished-at="2019-07-15T16:26:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.database() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToFaxAutoACKConfigurationPage()[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:26:46Z" name="NavigateToFaxAutoACKConfigurationPage" finished-at="2019-07-15T16:26:49Z" duration-ms="3207" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxAutoACKConfigurationPage -->
        <test-method signature="database()[pri:28, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:26:49Z" name="database" finished-at="2019-07-15T16:26:52Z" duration-ms="3421" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- database -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:26:52Z" name="afterEachMethod" finished-at="2019-07-15T16:26:54Z" duration-ms="1110" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.database() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:26:54Z" name="endTestCase" finished-at="2019-07-15T16:26:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.database() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:26:54Z" name="startTestCase" finished-at="2019-07-15T16:26:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.ExporttoExcelWithoutData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToFaxAutoACKConfigurationPage()[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:26:54Z" name="NavigateToFaxAutoACKConfigurationPage" finished-at="2019-07-15T16:26:57Z" duration-ms="3272" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxAutoACKConfigurationPage -->
        <test-method signature="ExporttoExcelWithoutData()[pri:29, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:26:57Z" name="ExporttoExcelWithoutData" finished-at="2019-07-15T16:28:01Z" duration-ms="64536" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.cssSelector: .k-grid-CustomDelete' (tried for 30 second(s) with 500 MILLISECONDS interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.cssSelector: .k-grid-CustomDelete' (tried for 30 second(s) with 500 MILLISECONDS interval)
	at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:80)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:232)
	at com.tetherfi.pages.BasePage.waitUntilWebElementIsVisible(BasePage.java:127)
	at com.tetherfi.pages.BasePage.selectWebElement(BasePage.java:191)
	at com.tetherfi.pages.FaxAutoACKConfigurationPage.deleteFaxAutoAckConfigRecord(FaxAutoACKConfigurationPage.java:806)
	at com.tetherfi.test.fax.FaxAutoACKConfigurationTest.ExporttoExcelWithoutData(FaxAutoACKConfigurationTest.java:346)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":".k-grid-CustomDelete"}
  (Session info: chrome=75.0.3770.100)
  (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 6.3.9600 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.5.3', revision: 'a88d25fe6b', time: '2017-08-29T12:42:44.417Z'
System info: host: 'ADMIN', ip: '192.168.1.65', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '9.0.4'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{mobileEmulationEnabled=false, timeouts={implicit=0, pageLoad=300000, script=30000}, hasTouchScreen=false, platform=WIN8_1, acceptSslCerts=false, goog:chromeOptions={debuggerAddress=localhost:51337}, acceptInsecureCerts=false, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, platformName=WIN8_1, setWindowRect=true, unexpectedAlertBehaviour=ignore, applicationCacheEnabled=false, rotatable=false, networkConnectionEnabled=false, chrome={chromedriverVersion=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}), userDataDir=C:\Users\ADMINP~1\AppData\Local\Temp\scoped_dir3028_31336}, takesHeapSnapshot=true, unhandledPromptBehavior=ignore, pageLoadStrategy=normal, strictFileInteractability=false, databaseEnabled=false, handlesAlerts=true, version=75.0.3770.100, browserConnectionEnabled=false, proxy=Proxy(), nativeEvents=true, locationContextEnabled=true, cssSelectorsEnabled=true}]
Session ID: 1ca983a7028cc4bcbe01814695a1f373
*** Element info: {Using=css selector, value=.k-grid-CustomDelete}
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:215)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:167)
	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:82)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:45)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:82)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:646)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:416)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByCssSelector(RemoteWebDriver.java:510)
	at org.openqa.selenium.By$ByCssSelector.findElement(By.java:430)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:408)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy14.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:302)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:288)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:285)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:209)
	... 29 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ExporttoExcelWithoutData -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:28:01Z" name="afterEachMethod" finished-at="2019-07-15T16:28:03Z" duration-ms="1280" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.ExporttoExcelWithoutData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:28:03Z" name="endTestCase" finished-at="2019-07-15T16:28:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.ExporttoExcelWithoutData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:28:03Z" name="startTestCase" finished-at="2019-07-15T16:28:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.SearchClearSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToFaxAutoACKConfigurationPage()[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:28:03Z" name="NavigateToFaxAutoACKConfigurationPage" finished-at="2019-07-15T16:28:06Z" duration-ms="3760" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxAutoACKConfigurationPage -->
        <test-method signature="SearchClearSearch()[pri:30, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:28:06Z" name="SearchClearSearch" finished-at="2019-07-15T16:28:11Z" duration-ms="4271" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchClearSearch -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:28:11Z" name="afterEachMethod" finished-at="2019-07-15T16:28:12Z" duration-ms="1122" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.SearchClearSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:28:12Z" name="endTestCase" finished-at="2019-07-15T16:28:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.SearchClearSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:28:12Z" name="startTestCase" finished-at="2019-07-15T16:28:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.SortingByAscending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToFaxAutoACKConfigurationPage()[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:28:12Z" name="NavigateToFaxAutoACKConfigurationPage" finished-at="2019-07-15T16:28:15Z" duration-ms="3218" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxAutoACKConfigurationPage -->
        <test-method signature="SortingByAscending()[pri:31, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:28:15Z" name="SortingByAscending" finished-at="2019-07-15T16:28:20Z" duration-ms="4780" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SortingByAscending -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:28:20Z" name="afterEachMethod" finished-at="2019-07-15T16:28:21Z" duration-ms="1086" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.SortingByAscending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:28:21Z" name="endTestCase" finished-at="2019-07-15T16:28:21Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.SortingByAscending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigateToFaxAutoACKConfigurationPage()[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:28:21Z" name="NavigateToFaxAutoACKConfigurationPage" finished-at="2019-07-15T16:28:24Z" duration-ms="3268" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxAutoACKConfigurationPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:28:21Z" name="startTestCase" finished-at="2019-07-15T16:28:21Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.SortingByDescending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="SortingByDescending()[pri:32, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:28:24Z" name="SortingByDescending" finished-at="2019-07-15T16:28:29Z" duration-ms="5014" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SortingByDescending -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:28:29Z" name="afterEachMethod" finished-at="2019-07-15T16:28:30Z" duration-ms="1175" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.SortingByDescending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:28:30Z" name="endTestCase" finished-at="2019-07-15T16:28:30Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.SortingByDescending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:28:30Z" name="startTestCase" finished-at="2019-07-15T16:28:30Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.VerifyArrowMoveForPreviousAndNextPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToFaxAutoACKConfigurationPage()[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:28:30Z" name="NavigateToFaxAutoACKConfigurationPage" finished-at="2019-07-15T16:28:34Z" duration-ms="3308" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxAutoACKConfigurationPage -->
        <test-method signature="VerifyArrowMoveForPreviousAndNextPage()[pri:33, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:28:34Z" name="VerifyArrowMoveForPreviousAndNextPage" finished-at="2019-07-15T16:28:34Z" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyArrowMoveForPreviousAndNextPage -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:28:34Z" name="afterEachMethod" finished-at="2019-07-15T16:28:35Z" duration-ms="1200" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.VerifyArrowMoveForPreviousAndNextPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:28:35Z" name="endTestCase" finished-at="2019-07-15T16:28:35Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.VerifyArrowMoveForPreviousAndNextPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:28:35Z" name="startTestCase" finished-at="2019-07-15T16:28:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.VerifyArrowMoveForFirstAndLastPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToFaxAutoACKConfigurationPage()[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:28:35Z" name="NavigateToFaxAutoACKConfigurationPage" finished-at="2019-07-15T16:28:39Z" duration-ms="3890" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxAutoACKConfigurationPage -->
        <test-method signature="VerifyArrowMoveForFirstAndLastPage()[pri:34, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:28:39Z" name="VerifyArrowMoveForFirstAndLastPage" finished-at="2019-07-15T16:28:39Z" duration-ms="32" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyArrowMoveForFirstAndLastPage -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:28:39Z" name="afterEachMethod" finished-at="2019-07-15T16:28:40Z" duration-ms="1153" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.VerifyArrowMoveForFirstAndLastPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:28:40Z" name="endTestCase" finished-at="2019-07-15T16:28:40Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.VerifyArrowMoveForFirstAndLastPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigateToFaxAutoACKConfigurationPage()[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:28:40Z" name="NavigateToFaxAutoACKConfigurationPage" finished-at="2019-07-15T16:28:44Z" duration-ms="4015" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxAutoACKConfigurationPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:28:40Z" name="startTestCase" finished-at="2019-07-15T16:28:40Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.VerifyTotalNumberOfItemsPerPageDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="VerifyTotalNumberOfItemsPerPageDetails()[pri:35, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:28:44Z" name="VerifyTotalNumberOfItemsPerPageDetails" finished-at="2019-07-15T16:28:44Z" duration-ms="47" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyTotalNumberOfItemsPerPageDetails -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:28:44Z" name="afterEachMethod" finished-at="2019-07-15T16:28:45Z" duration-ms="1140" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.VerifyTotalNumberOfItemsPerPageDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:28:45Z" name="endTestCase" finished-at="2019-07-15T16:28:45Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.VerifyTotalNumberOfItemsPerPageDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:28:45Z" name="startTestCase" finished-at="2019-07-15T16:28:45Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.VerifyNumberOfItemsPerPageSelection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToFaxAutoACKConfigurationPage()[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:28:45Z" name="NavigateToFaxAutoACKConfigurationPage" finished-at="2019-07-15T16:28:49Z" duration-ms="3473" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToFaxAutoACKConfigurationPage -->
        <test-method signature="VerifyNumberOfItemsPerPageSelection()[pri:36, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:28:49Z" name="VerifyNumberOfItemsPerPageSelection" finished-at="2019-07-15T16:28:51Z" duration-ms="2687" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[item per page assertion failed expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: item per page assertion failed expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at com.tetherfi.test.fax.FaxAutoACKConfigurationTest.VerifyNumberOfItemsPerPageSelection(FaxAutoACKConfigurationTest.java:401)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyNumberOfItemsPerPageSelection -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:28:51Z" name="afterEachMethod" finished-at="2019-07-15T16:28:52Z" duration-ms="1094" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.VerifyNumberOfItemsPerPageSelection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:28:52Z" name="endTestCase" finished-at="2019-07-15T16:28:52Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.fax.FaxAutoACKConfigurationTest.VerifyNumberOfItemsPerPageSelection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="DeleteFaxLineConfigRecord()[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:28:52Z" name="DeleteFaxLineConfigRecord" finished-at="2019-07-15T16:29:04Z" duration-ms="11097" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteFaxLineConfigRecord -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tetherfi.test.fax.FaxAutoACKConfigurationTest@9301672]" started-at="2019-07-15T16:29:04Z" name="tearDown" finished-at="2019-07-15T16:29:07Z" duration-ms="3700" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.tetherfi.test.fax.FaxAutoACKConfigurationTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
