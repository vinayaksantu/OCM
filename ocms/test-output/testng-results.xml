<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="47" passed="43" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2019-11-12T10:28:31 IST" name="Default suite" finished-at="2019-11-12T10:42:12 IST" duration-ms="821236">
    <groups>
    </groups>
    <test started-at="2019-11-12T10:28:31 IST" name="Default test" finished-at="2019-11-12T10:42:12 IST" duration-ms="821236">
      <class name="com.tetherfi.test.ivr.VIPListManagementTest">
        <test-method is-config="true" signature="openApplication()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:28:31 IST" name="openApplication" finished-at="2019-11-12T10:28:54 IST" duration-ms="22857" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:28:54 IST" name="startTestCase" finished-at="2019-11-12T10:28:54 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VIPListManagementPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:28:54 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:28:59 IST" duration-ms="4576" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method signature="VIPListManagementPage()[pri:1, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:28:59 IST" name="VIPListManagementPage" finished-at="2019-11-12T10:29:00 IST" duration-ms="1483" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VIPListManagementPage -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:29:00 IST" name="afterEachMethod" finished-at="2019-11-12T10:29:01 IST" duration-ms="1310" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VIPListManagementPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:29:01 IST" name="endTestCase" finished-at="2019-11-12T10:29:01 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VIPListManagementPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:29:01 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:29:06 IST" duration-ms="4796" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:29:01 IST" name="startTestCase" finished-at="2019-11-12T10:29:01 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifyDropdownForAllTheColumns()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="VerifyDropdownForAllTheColumns()[pri:2, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:29:06 IST" name="VerifyDropdownForAllTheColumns" finished-at="2019-11-12T10:29:27 IST" duration-ms="20637" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyDropdownForAllTheColumns -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:29:27 IST" name="afterEachMethod" finished-at="2019-11-12T10:29:28 IST" duration-ms="1310" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifyDropdownForAllTheColumns()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:29:28 IST" name="endTestCase" finished-at="2019-11-12T10:29:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifyDropdownForAllTheColumns()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:29:28 IST" name="startTestCase" finished-at="2019-11-12T10:29:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifyColumnsHeaderEnable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:29:28 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:29:34 IST" duration-ms="5487" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method signature="VerifyColumnsHeaderEnable()[pri:3, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:29:34 IST" name="VerifyColumnsHeaderEnable" finished-at="2019-11-12T10:29:43 IST" duration-ms="9581" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyColumnsHeaderEnable -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:29:43 IST" name="afterEachMethod" finished-at="2019-11-12T10:29:44 IST" duration-ms="1352" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifyColumnsHeaderEnable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:29:44 IST" name="endTestCase" finished-at="2019-11-12T10:29:44 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifyColumnsHeaderEnable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:29:44 IST" name="startTestCase" finished-at="2019-11-12T10:29:45 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifyColumnsHeaderDisable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:29:45 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:29:49 IST" duration-ms="4522" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method signature="VerifyColumnsHeaderDisable()[pri:4, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:29:49 IST" name="VerifyColumnsHeaderDisable" finished-at="2019-11-12T10:30:01 IST" duration-ms="12148" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyColumnsHeaderDisable -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:30:01 IST" name="afterEachMethod" finished-at="2019-11-12T10:30:03 IST" duration-ms="1681" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifyColumnsHeaderDisable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:30:03 IST" name="endTestCase" finished-at="2019-11-12T10:30:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifyColumnsHeaderDisable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:30:03 IST" name="startTestCase" finished-at="2019-11-12T10:30:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddNewVIPListRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:30:03 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:30:08 IST" duration-ms="4782" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method signature="AddNewVIPListRecord()[pri:5, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:30:08 IST" name="AddNewVIPListRecord" finished-at="2019-11-12T10:30:18 IST" duration-ms="9915" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewVIPListRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:30:18 IST" name="afterEachMethod" finished-at="2019-11-12T10:30:19 IST" duration-ms="1815" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddNewVIPListRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:30:19 IST" name="endTestCase" finished-at="2019-11-12T10:30:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddNewVIPListRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:30:19 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:30:24 IST" duration-ms="4865" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:30:19 IST" name="startTestCase" finished-at="2019-11-12T10:30:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddDuplicateVIPListRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="AddDuplicateVIPListRecord()[pri:6, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:30:24 IST" name="AddDuplicateVIPListRecord" finished-at="2019-11-12T10:30:32 IST" depends-on-methods="com.tetherfi.test.ivr.VIPListManagementTest.AddNewVIPListRecord" duration-ms="8057" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddDuplicateVIPListRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:30:32 IST" name="afterEachMethod" finished-at="2019-11-12T10:30:34 IST" duration-ms="1224" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddDuplicateVIPListRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:30:34 IST" name="endTestCase" finished-at="2019-11-12T10:30:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddDuplicateVIPListRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:30:34 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:30:38 IST" duration-ms="4714" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:30:34 IST" name="startTestCase" finished-at="2019-11-12T10:30:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifyAuditTrialReportForCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="VerifyAuditTrialReportForCreate()[pri:7, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:30:38 IST" name="VerifyAuditTrialReportForCreate" finished-at="2019-11-12T10:31:06 IST" depends-on-methods="com.tetherfi.test.ivr.VIPListManagementTest.AddNewVIPListRecord" duration-ms="27384" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at com.tetherfi.test.ivr.VIPListManagementTest.VerifyAuditTrialReportForCreate(VIPListManagementTest.java:111)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrialReportForCreate -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:31:06 IST" name="afterEachMethod" finished-at="2019-11-12T10:31:07 IST" duration-ms="1163" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifyAuditTrialReportForCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:31:07 IST" name="endTestCase" finished-at="2019-11-12T10:31:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifyAuditTrialReportForCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:31:07 IST" name="startTestCase" finished-at="2019-11-12T10:31:07 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddEmptyRecord() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:31:07 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:31:12 IST" duration-ms="4913" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method signature="AddEmptyRecord()[pri:8, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:31:12 IST" name="AddEmptyRecord" finished-at="2019-11-12T10:31:13 IST" duration-ms="1292" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddEmptyRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:31:13 IST" name="afterEachMethod" finished-at="2019-11-12T10:31:13 IST" duration-ms="469" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddEmptyRecord() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:31:13 IST" name="endTestCase" finished-at="2019-11-12T10:31:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddEmptyRecord() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:31:13 IST" name="startTestCase" finished-at="2019-11-12T10:31:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddRecordWithoutCallerID() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:31:13 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:31:19 IST" duration-ms="5489" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method signature="AddRecordWithoutCallerID()[pri:9, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:31:19 IST" name="AddRecordWithoutCallerID" finished-at="2019-11-12T10:31:27 IST" duration-ms="8162" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddRecordWithoutCallerID -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:31:27 IST" name="afterEachMethod" finished-at="2019-11-12T10:31:28 IST" duration-ms="1244" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddRecordWithoutCallerID() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:31:28 IST" name="endTestCase" finished-at="2019-11-12T10:31:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddRecordWithoutCallerID() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:31:28 IST" name="startTestCase" finished-at="2019-11-12T10:31:28 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddRecordWithoutEmailId() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:31:28 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:31:33 IST" duration-ms="4862" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method signature="AddRecordWithoutEmailId()[pri:10, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:31:33 IST" name="AddRecordWithoutEmailId" finished-at="2019-11-12T10:31:41 IST" duration-ms="8264" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddRecordWithoutEmailId -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:31:41 IST" name="afterEachMethod" finished-at="2019-11-12T10:31:43 IST" duration-ms="1195" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddRecordWithoutEmailId() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:31:43 IST" name="endTestCase" finished-at="2019-11-12T10:31:43 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddRecordWithoutEmailId() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:31:43 IST" name="startTestCase" finished-at="2019-11-12T10:31:43 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddRecordWithoutFBHandle() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:31:43 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:31:47 IST" duration-ms="4606" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method signature="AddRecordWithoutFBHandle()[pri:11, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:31:47 IST" name="AddRecordWithoutFBHandle" finished-at="2019-11-12T10:31:56 IST" duration-ms="8626" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddRecordWithoutFBHandle -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:31:56 IST" name="afterEachMethod" finished-at="2019-11-12T10:31:57 IST" duration-ms="1444" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddRecordWithoutFBHandle() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:31:57 IST" name="endTestCase" finished-at="2019-11-12T10:31:57 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddRecordWithoutFBHandle() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:31:57 IST" name="startTestCase" finished-at="2019-11-12T10:31:57 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddRecordWithoutMessengerID() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:31:57 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:32:02 IST" duration-ms="4722" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method signature="AddRecordWithoutMessengerID()[pri:12, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:32:02 IST" name="AddRecordWithoutMessengerID" finished-at="2019-11-12T10:32:10 IST" duration-ms="7934" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddRecordWithoutMessengerID -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:32:10 IST" name="afterEachMethod" finished-at="2019-11-12T10:32:11 IST" duration-ms="1310" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddRecordWithoutMessengerID() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:32:11 IST" name="endTestCase" finished-at="2019-11-12T10:32:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddRecordWithoutMessengerID() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:32:11 IST" name="startTestCase" finished-at="2019-11-12T10:32:11 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddRecordWithoutCustomerIDType() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:32:11 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:32:16 IST" duration-ms="4744" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method signature="AddRecordWithoutCustomerIDType()[pri:13, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:32:16 IST" name="AddRecordWithoutCustomerIDType" finished-at="2019-11-12T10:32:24 IST" duration-ms="8240" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddRecordWithoutCustomerIDType -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:32:24 IST" name="afterEachMethod" finished-at="2019-11-12T10:32:26 IST" duration-ms="1603" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddRecordWithoutCustomerIDType() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:32:26 IST" name="endTestCase" finished-at="2019-11-12T10:32:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddRecordWithoutCustomerIDType() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:32:26 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:32:34 IST" duration-ms="7782" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:32:26 IST" name="startTestCase" finished-at="2019-11-12T10:32:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddRecordWithoutCustomerIDNo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="AddRecordWithoutCustomerIDNo()[pri:14, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:32:34 IST" name="AddRecordWithoutCustomerIDNo" finished-at="2019-11-12T10:32:42 IST" duration-ms="8301" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddRecordWithoutCustomerIDNo -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:32:42 IST" name="afterEachMethod" finished-at="2019-11-12T10:32:43 IST" duration-ms="1324" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddRecordWithoutCustomerIDNo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:32:43 IST" name="endTestCase" finished-at="2019-11-12T10:32:43 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddRecordWithoutCustomerIDNo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:32:43 IST" name="startTestCase" finished-at="2019-11-12T10:32:43 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddRecordWithoutCountry() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:32:43 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:32:48 IST" duration-ms="5083" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method signature="AddRecordWithoutCountry()[pri:15, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:32:48 IST" name="AddRecordWithoutCountry" finished-at="2019-11-12T10:32:57 IST" duration-ms="8373" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddRecordWithoutCountry -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:32:57 IST" name="afterEachMethod" finished-at="2019-11-12T10:32:58 IST" duration-ms="1458" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddRecordWithoutCountry() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:32:58 IST" name="endTestCase" finished-at="2019-11-12T10:32:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddRecordWithoutCountry() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:32:58 IST" name="startTestCase" finished-at="2019-11-12T10:32:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddRecordWithoutContactType() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:32:58 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:33:04 IST" duration-ms="5252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method signature="AddRecordWithoutContactType()[pri:16, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:33:04 IST" name="AddRecordWithoutContactType" finished-at="2019-11-12T10:33:11 IST" duration-ms="7484" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddRecordWithoutContactType -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:33:11 IST" name="afterEachMethod" finished-at="2019-11-12T10:33:12 IST" duration-ms="1211" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddRecordWithoutContactType() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:33:12 IST" name="endTestCase" finished-at="2019-11-12T10:33:12 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddRecordWithoutContactType() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:33:12 IST" name="startTestCase" finished-at="2019-11-12T10:33:12 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddRecordWithoutInclusionFlag() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:33:12 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:33:17 IST" duration-ms="4616" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method signature="AddRecordWithoutInclusionFlag()[pri:17, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:33:17 IST" name="AddRecordWithoutInclusionFlag" finished-at="2019-11-12T10:33:24 IST" duration-ms="7320" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddRecordWithoutInclusionFlag -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:33:24 IST" name="afterEachMethod" finished-at="2019-11-12T10:33:25 IST" duration-ms="1184" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddRecordWithoutInclusionFlag() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:33:25 IST" name="endTestCase" finished-at="2019-11-12T10:33:25 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddRecordWithoutInclusionFlag() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:33:25 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:33:31 IST" duration-ms="5197" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:33:25 IST" name="startTestCase" finished-at="2019-11-12T10:33:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddRecordWithoutExclusionFlag() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="AddRecordWithoutExclusionFlag()[pri:18, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:33:31 IST" name="AddRecordWithoutExclusionFlag" finished-at="2019-11-12T10:33:38 IST" duration-ms="7294" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddRecordWithoutExclusionFlag -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:33:38 IST" name="afterEachMethod" finished-at="2019-11-12T10:33:39 IST" duration-ms="1194" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddRecordWithoutExclusionFlag() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:33:39 IST" name="endTestCase" finished-at="2019-11-12T10:33:39 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddRecordWithoutExclusionFlag() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:33:39 IST" name="startTestCase" finished-at="2019-11-12T10:33:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddRecordWithoutOtherData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:33:39 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:33:44 IST" duration-ms="4588" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method signature="AddRecordWithoutOtherData()[pri:19, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:33:44 IST" name="AddRecordWithoutOtherData" finished-at="2019-11-12T10:33:52 IST" duration-ms="8597" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddRecordWithoutOtherData -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:33:52 IST" name="afterEachMethod" finished-at="2019-11-12T10:33:53 IST" duration-ms="1245" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddRecordWithoutOtherData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:33:53 IST" name="endTestCase" finished-at="2019-11-12T10:33:53 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.AddRecordWithoutOtherData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:33:53 IST" name="startTestCase" finished-at="2019-11-12T10:33:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifySearchIsNotEqualTo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:33:53 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:33:59 IST" duration-ms="5573" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method signature="VerifySearchIsNotEqualTo()[pri:20, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:33:59 IST" name="VerifySearchIsNotEqualTo" finished-at="2019-11-12T10:34:10 IST" duration-ms="10614" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifySearchIsNotEqualTo -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:34:10 IST" name="afterEachMethod" finished-at="2019-11-12T10:34:11 IST" duration-ms="1346" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifySearchIsNotEqualTo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:34:11 IST" name="endTestCase" finished-at="2019-11-12T10:34:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifySearchIsNotEqualTo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:34:11 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:34:16 IST" duration-ms="5046" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:34:11 IST" name="startTestCase" finished-at="2019-11-12T10:34:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifySearchContains() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="VerifySearchContains()[pri:21, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:34:16 IST" name="VerifySearchContains" finished-at="2019-11-12T10:34:22 IST" duration-ms="5558" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifySearchContains -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:34:22 IST" name="afterEachMethod" finished-at="2019-11-12T10:34:23 IST" duration-ms="1116" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifySearchContains() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:34:23 IST" name="endTestCase" finished-at="2019-11-12T10:34:23 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifySearchContains() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:34:23 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:34:28 IST" duration-ms="5036" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:34:23 IST" name="startTestCase" finished-at="2019-11-12T10:34:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifySearchDoesNotContains() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="VerifySearchDoesNotContains()[pri:22, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:34:28 IST" name="VerifySearchDoesNotContains" finished-at="2019-11-12T10:34:40 IST" duration-ms="11781" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifySearchDoesNotContains -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:34:40 IST" name="afterEachMethod" finished-at="2019-11-12T10:34:41 IST" duration-ms="1736" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifySearchDoesNotContains() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:34:41 IST" name="endTestCase" finished-at="2019-11-12T10:34:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifySearchDoesNotContains() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:34:41 IST" name="startTestCase" finished-at="2019-11-12T10:34:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifySearchStartsWith() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:34:41 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:34:46 IST" duration-ms="4501" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method signature="VerifySearchStartsWith()[pri:23, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:34:46 IST" name="VerifySearchStartsWith" finished-at="2019-11-12T10:34:51 IST" duration-ms="5129" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifySearchStartsWith -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:34:51 IST" name="afterEachMethod" finished-at="2019-11-12T10:34:52 IST" duration-ms="1097" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifySearchStartsWith() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:34:52 IST" name="endTestCase" finished-at="2019-11-12T10:34:52 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifySearchStartsWith() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:34:52 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:34:56 IST" duration-ms="4078" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:34:52 IST" name="startTestCase" finished-at="2019-11-12T10:34:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifySearchEndsWith() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="VerifySearchEndsWith()[pri:24, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:34:56 IST" name="VerifySearchEndsWith" finished-at="2019-11-12T10:35:09 IST" duration-ms="12460" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifySearchEndsWith -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:35:09 IST" name="afterEachMethod" finished-at="2019-11-12T10:35:10 IST" duration-ms="1198" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifySearchEndsWith() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:35:10 IST" name="endTestCase" finished-at="2019-11-12T10:35:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifySearchEndsWith() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:35:10 IST" name="startTestCase" finished-at="2019-11-12T10:35:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifyCancelBtnAtAddRecord()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:35:10 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:35:16 IST" duration-ms="5938" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method signature="VerifyCancelBtnAtAddRecord()[pri:25, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:35:16 IST" name="VerifyCancelBtnAtAddRecord" finished-at="2019-11-12T10:36:00 IST" duration-ms="43860" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyCancelBtnAtAddRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:36:00 IST" name="afterEachMethod" finished-at="2019-11-12T10:36:01 IST" duration-ms="1158" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifyCancelBtnAtAddRecord()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:36:01 IST" name="endTestCase" finished-at="2019-11-12T10:36:01 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifyCancelBtnAtAddRecord()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:36:01 IST" name="startTestCase" finished-at="2019-11-12T10:36:01 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.EditVIPListRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:36:01 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:36:06 IST" duration-ms="4915" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method signature="EditVIPListRecord()[pri:26, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:36:06 IST" name="EditVIPListRecord" finished-at="2019-11-12T10:36:13 IST" duration-ms="7038" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EditVIPListRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:36:13 IST" name="afterEachMethod" finished-at="2019-11-12T10:36:14 IST" duration-ms="1220" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.EditVIPListRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:36:14 IST" name="endTestCase" finished-at="2019-11-12T10:36:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.EditVIPListRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:36:14 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:36:18 IST" duration-ms="4605" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:36:14 IST" name="startTestCase" finished-at="2019-11-12T10:36:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifyAuditTrialReportForUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="VerifyAuditTrialReportForUpdate()[pri:27, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:36:18 IST" name="VerifyAuditTrialReportForUpdate" finished-at="2019-11-12T10:36:45 IST" depends-on-methods="com.tetherfi.test.ivr.VIPListManagementTest.EditVIPListRecord" duration-ms="26098" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.tetherfi.pages.OCMReportsPage.verifyVIPListManagementUpdate(OCMReportsPage.java:3423)
at com.tetherfi.test.ivr.VIPListManagementTest.VerifyAuditTrialReportForUpdate(VIPListManagementTest.java:309)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrialReportForUpdate -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:36:45 IST" name="afterEachMethod" finished-at="2019-11-12T10:36:46 IST" duration-ms="1604" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifyAuditTrialReportForUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:36:46 IST" name="endTestCase" finished-at="2019-11-12T10:36:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifyAuditTrialReportForUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:36:46 IST" name="startTestCase" finished-at="2019-11-12T10:36:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.EditWithoutModifyReasonRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:36:46 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:36:51 IST" duration-ms="4539" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method signature="EditWithoutModifyReasonRecord()[pri:28, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:36:51 IST" name="EditWithoutModifyReasonRecord" finished-at="2019-11-12T10:36:57 IST" depends-on-methods="com.tetherfi.test.ivr.VIPListManagementTest.EditVIPListRecord" duration-ms="6397" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EditWithoutModifyReasonRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:36:57 IST" name="afterEachMethod" finished-at="2019-11-12T10:36:58 IST" duration-ms="1313" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.EditWithoutModifyReasonRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:36:58 IST" name="endTestCase" finished-at="2019-11-12T10:36:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.EditWithoutModifyReasonRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:36:58 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:37:02 IST" duration-ms="3912" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:36:58 IST" name="startTestCase" finished-at="2019-11-12T10:36:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifyCancelBtnAtEditConfigRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="VerifyCancelBtnAtEditConfigRecord()[pri:29, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:37:02 IST" name="VerifyCancelBtnAtEditConfigRecord" finished-at="2019-11-12T10:37:52 IST" duration-ms="49257" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyCancelBtnAtEditConfigRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:37:52 IST" name="afterEachMethod" finished-at="2019-11-12T10:37:53 IST" duration-ms="1235" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifyCancelBtnAtEditConfigRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:37:53 IST" name="endTestCase" finished-at="2019-11-12T10:37:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifyCancelBtnAtEditConfigRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:37:53 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:37:57 IST" duration-ms="4555" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:37:53 IST" name="startTestCase" finished-at="2019-11-12T10:37:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.searchPage() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="searchPage()[pri:30, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:37:57 IST" name="searchPage" finished-at="2019-11-12T10:38:02 IST" duration-ms="4278" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchPage -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:38:02 IST" name="afterEachMethod" finished-at="2019-11-12T10:38:03 IST" duration-ms="1271" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.searchPage() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:38:03 IST" name="endTestCase" finished-at="2019-11-12T10:38:03 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.searchPage() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:38:03 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:38:08 IST" duration-ms="4910" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:38:03 IST" name="startTestCase" finished-at="2019-11-12T10:38:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.searchwithoutSearchTextbox() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="searchwithoutSearchTextbox()[pri:31, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:38:08 IST" name="searchwithoutSearchTextbox" finished-at="2019-11-12T10:38:12 IST" duration-ms="4161" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchwithoutSearchTextbox -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:38:12 IST" name="afterEachMethod" finished-at="2019-11-12T10:38:13 IST" duration-ms="1155" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.searchwithoutSearchTextbox() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:38:13 IST" name="endTestCase" finished-at="2019-11-12T10:38:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.searchwithoutSearchTextbox() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:38:13 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:38:19 IST" duration-ms="5323" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:38:13 IST" name="startTestCase" finished-at="2019-11-12T10:38:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.ExportToExcel() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="ExportToExcel()[pri:32, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:38:19 IST" name="ExportToExcel" finished-at="2019-11-12T10:38:21 IST" duration-ms="2925" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ExportToExcel -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:38:21 IST" name="afterEachMethod" finished-at="2019-11-12T10:38:23 IST" duration-ms="1192" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.ExportToExcel() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:38:23 IST" name="endTestCase" finished-at="2019-11-12T10:38:23 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.ExportToExcel() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:38:23 IST" name="startTestCase" finished-at="2019-11-12T10:38:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.ExportToExcelData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:38:23 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:38:27 IST" duration-ms="4756" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method signature="ExportToExcelData()[pri:33, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:38:27 IST" name="ExportToExcelData" finished-at="2019-11-12T10:38:32 IST" duration-ms="4944" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ExportToExcelData -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:38:32 IST" name="afterEachMethod" finished-at="2019-11-12T10:38:34 IST" duration-ms="1286" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.ExportToExcelData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:38:34 IST" name="endTestCase" finished-at="2019-11-12T10:38:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.ExportToExcelData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:38:34 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:38:39 IST" duration-ms="5556" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:38:34 IST" name="startTestCase" finished-at="2019-11-12T10:38:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.DeleteWithoutDeleteReasonRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method signature="DeleteWithoutDeleteReasonRecord()[pri:34, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:38:39 IST" name="DeleteWithoutDeleteReasonRecord" finished-at="2019-11-12T10:38:45 IST" duration-ms="5509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteWithoutDeleteReasonRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:38:45 IST" name="afterEachMethod" finished-at="2019-11-12T10:38:46 IST" duration-ms="1328" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.DeleteWithoutDeleteReasonRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:38:46 IST" name="endTestCase" finished-at="2019-11-12T10:38:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.DeleteWithoutDeleteReasonRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:38:46 IST" name="startTestCase" finished-at="2019-11-12T10:38:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifyCancelBtnAtDeleteVIPListRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:38:46 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:38:51 IST" duration-ms="4769" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method signature="VerifyCancelBtnAtDeleteVIPListRecord()[pri:35, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:38:51 IST" name="VerifyCancelBtnAtDeleteVIPListRecord" finished-at="2019-11-12T10:39:38 IST" duration-ms="47593" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyCancelBtnAtDeleteVIPListRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:39:38 IST" name="afterEachMethod" finished-at="2019-11-12T10:39:40 IST" duration-ms="1273" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifyCancelBtnAtDeleteVIPListRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:39:40 IST" name="endTestCase" finished-at="2019-11-12T10:39:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifyCancelBtnAtDeleteVIPListRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:39:40 IST" name="startTestCase" finished-at="2019-11-12T10:39:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.DeleteVIPListRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:39:40 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:39:44 IST" duration-ms="4832" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method signature="DeleteVIPListRecord()[pri:36, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:39:44 IST" name="DeleteVIPListRecord" finished-at="2019-11-12T10:39:50 IST" depends-on-methods="com.tetherfi.test.ivr.VIPListManagementTest.VerifyCancelBtnAtDeleteVIPListRecord" duration-ms="5666" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteVIPListRecord -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:39:50 IST" name="afterEachMethod" finished-at="2019-11-12T10:39:51 IST" duration-ms="1227" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.DeleteVIPListRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:39:51 IST" name="endTestCase" finished-at="2019-11-12T10:39:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.DeleteVIPListRecord() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:39:51 IST" name="startTestCase" finished-at="2019-11-12T10:39:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifyAuditTrialReportForDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:39:51 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:39:56 IST" duration-ms="4637" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method signature="VerifyAuditTrialReportForDelete()[pri:37, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:39:56 IST" name="VerifyAuditTrialReportForDelete" finished-at="2019-11-12T10:40:22 IST" depends-on-methods="com.tetherfi.test.ivr.VIPListManagementTest.DeleteVIPListRecord" duration-ms="26081" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAuditTrialReportForDelete -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:40:22 IST" name="afterEachMethod" finished-at="2019-11-12T10:40:23 IST" duration-ms="1255" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifyAuditTrialReportForDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:40:23 IST" name="endTestCase" finished-at="2019-11-12T10:40:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifyAuditTrialReportForDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:40:23 IST" name="startTestCase" finished-at="2019-11-12T10:40:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.SearchClearSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:40:23 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:40:28 IST" duration-ms="4898" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method signature="SearchClearSearch()[pri:38, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:40:28 IST" name="SearchClearSearch" finished-at="2019-11-12T10:40:33 IST" duration-ms="4655" status="FAIL">
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: element is not attached to the page document
  (Session info: chrome=78.0.3904.97)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-O6A5C2O', ip: '10.0.75.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '9.0.4'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 78.0.3904.97, chrome: {chromedriverVersion: 78.0.3904.70 (edb9c9f3de024..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:64319}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: efb82c0ff4bd828973e9396243930f5d]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: element is not attached to the page document
  (Session info: chrome=78.0.3904.97)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-O6A5C2O', ip: '10.0.75.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '9.0.4'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 78.0.3904.97, chrome: {chromedriverVersion: 78.0.3904.70 (edb9c9f3de024..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:64319}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: efb82c0ff4bd828973e9396243930f5d
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.isDisplayed(RemoteWebElement.java:326)
at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at com.sun.proxy.$Proxy16.isDisplayed(Unknown Source)
at com.tetherfi.pages.VipListManagementPage.verifyinvalidsearchwithwrongdata(VipListManagementPage.java:615)
at com.tetherfi.test.ivr.VIPListManagementTest.SearchClearSearch(VIPListManagementTest.java:415)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchClearSearch -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:40:33 IST" name="afterEachMethod" finished-at="2019-11-12T10:40:34 IST" duration-ms="1471" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.SearchClearSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:40:34 IST" name="endTestCase" finished-at="2019-11-12T10:40:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.SearchClearSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:40:34 IST" name="startTestCase" finished-at="2019-11-12T10:40:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.ExporttoExcelWithoutData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:40:34 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:40:39 IST" duration-ms="5001" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method signature="ExporttoExcelWithoutData()[pri:39, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:40:39 IST" name="ExporttoExcelWithoutData" finished-at="2019-11-12T10:40:45 IST" duration-ms="5871" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ExporttoExcelWithoutData -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:40:45 IST" name="afterEachMethod" finished-at="2019-11-12T10:40:47 IST" duration-ms="1284" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.ExporttoExcelWithoutData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:40:47 IST" name="endTestCase" finished-at="2019-11-12T10:40:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.ExporttoExcelWithoutData() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:40:47 IST" name="startTestCase" finished-at="2019-11-12T10:40:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.SortingByAscending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:40:47 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:40:51 IST" duration-ms="4930" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method signature="SortingByAscending()[pri:40, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:40:51 IST" name="SortingByAscending" finished-at="2019-11-12T10:40:59 IST" duration-ms="7039" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SortingByAscending -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:40:59 IST" name="afterEachMethod" finished-at="2019-11-12T10:41:00 IST" duration-ms="1156" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.SortingByAscending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:41:00 IST" name="endTestCase" finished-at="2019-11-12T10:41:00 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.SortingByAscending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:41:00 IST" name="startTestCase" finished-at="2019-11-12T10:41:00 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.SortingByDescending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:41:00 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:41:04 IST" duration-ms="4778" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method signature="SortingByDescending()[pri:41, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:41:04 IST" name="SortingByDescending" finished-at="2019-11-12T10:41:12 IST" duration-ms="7348" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SortingByDescending -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:41:12 IST" name="afterEachMethod" finished-at="2019-11-12T10:41:13 IST" duration-ms="1121" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.SortingByDescending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:41:13 IST" name="endTestCase" finished-at="2019-11-12T10:41:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.SortingByDescending() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:41:13 IST" name="startTestCase" finished-at="2019-11-12T10:41:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.GroupBy()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:41:13 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:41:18 IST" duration-ms="4942" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method signature="GroupBy()[pri:42, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:41:18 IST" name="GroupBy" finished-at="2019-11-12T10:41:21 IST" duration-ms="3168" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GroupBy -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:41:21 IST" name="afterEachMethod" finished-at="2019-11-12T10:41:22 IST" duration-ms="1353" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.GroupBy()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:41:22 IST" name="endTestCase" finished-at="2019-11-12T10:41:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.GroupBy()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:41:22 IST" name="startTestCase" finished-at="2019-11-12T10:41:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifyArrowMoveForPreviousAndNextPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:41:22 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:41:27 IST" duration-ms="5057" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method signature="VerifyArrowMoveForPreviousAndNextPage()[pri:43, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:41:27 IST" name="VerifyArrowMoveForPreviousAndNextPage" finished-at="2019-11-12T10:41:27 IST" duration-ms="39" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyArrowMoveForPreviousAndNextPage -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:41:27 IST" name="afterEachMethod" finished-at="2019-11-12T10:41:29 IST" duration-ms="1160" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifyArrowMoveForPreviousAndNextPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:41:29 IST" name="endTestCase" finished-at="2019-11-12T10:41:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifyArrowMoveForPreviousAndNextPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:41:29 IST" name="startTestCase" finished-at="2019-11-12T10:41:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifyArrowMoveForFirstAndLastPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:41:29 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:41:34 IST" duration-ms="5362" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method signature="VerifyArrowMoveForFirstAndLastPage()[pri:44, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:41:34 IST" name="VerifyArrowMoveForFirstAndLastPage" finished-at="2019-11-12T10:41:34 IST" duration-ms="30" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyArrowMoveForFirstAndLastPage -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:41:34 IST" name="afterEachMethod" finished-at="2019-11-12T10:41:35 IST" duration-ms="1216" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifyArrowMoveForFirstAndLastPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:41:35 IST" name="endTestCase" finished-at="2019-11-12T10:41:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifyArrowMoveForFirstAndLastPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:41:35 IST" name="startTestCase" finished-at="2019-11-12T10:41:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifyTotalNumberOfItemsPerPageDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:41:35 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:41:40 IST" duration-ms="4845" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method signature="VerifyTotalNumberOfItemsPerPageDetails()[pri:45, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:41:40 IST" name="VerifyTotalNumberOfItemsPerPageDetails" finished-at="2019-11-12T10:41:40 IST" duration-ms="45" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyTotalNumberOfItemsPerPageDetails -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:41:40 IST" name="afterEachMethod" finished-at="2019-11-12T10:41:41 IST" duration-ms="489" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifyTotalNumberOfItemsPerPageDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:41:41 IST" name="endTestCase" finished-at="2019-11-12T10:41:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifyTotalNumberOfItemsPerPageDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:41:41 IST" name="startTestCase" finished-at="2019-11-12T10:41:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifyNumberOfItemsPerPageSelection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:41:41 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:41:46 IST" duration-ms="5582" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method signature="VerifyNumberOfItemsPerPageSelection()[pri:46, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:41:46 IST" name="VerifyNumberOfItemsPerPageSelection" finished-at="2019-11-12T10:41:51 IST" duration-ms="5080" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyNumberOfItemsPerPageSelection -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:41:51 IST" name="afterEachMethod" finished-at="2019-11-12T10:41:53 IST" duration-ms="1292" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifyNumberOfItemsPerPageSelection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:41:53 IST" name="endTestCase" finished-at="2019-11-12T10:41:53 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.VerifyNumberOfItemsPerPageSelection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:41:53 IST" name="startTestCase" finished-at="2019-11-12T10:41:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.database() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method is-config="true" signature="NavigateToVIPListManagementPage()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:41:53 IST" name="NavigateToVIPListManagementPage" finished-at="2019-11-12T10:41:58 IST" duration-ms="5051" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigateToVIPListManagementPage -->
        <test-method signature="database()[pri:47, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:41:58 IST" name="database" finished-at="2019-11-12T10:42:05 IST" duration-ms="7837" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at com.tetherfi.test.ivr.VIPListManagementTest.database(VIPListManagementTest.java:488)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- database -->
        <test-method is-config="true" signature="afterEachMethod(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:42:05 IST" name="afterEachMethod" finished-at="2019-11-12T10:42:07 IST" duration-ms="1292" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.database() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachMethod -->
        <test-method is-config="true" signature="endTestCase(java.lang.reflect.Method)[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:42:07 IST" name="endTestCase" finished-at="2019-11-12T10:42:07 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.tetherfi.test.ivr.VIPListManagementTest.database() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTestCase -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tetherfi.test.ivr.VIPListManagementTest@4a44cfc0]" started-at="2019-11-12T10:42:07 IST" name="tearDown" finished-at="2019-11-12T10:42:12 IST" duration-ms="5423" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.tetherfi.test.ivr.VIPListManagementTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
